//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ConGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConIntellisense.Core.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ConGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IConGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile([NotNull] ConGrammarParser.FileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] ConGrammarParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] ConGrammarParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.returnExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnExp([NotNull] ConGrammarParser.ReturnExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.commentExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommentExp([NotNull] ConGrammarParser.CommentExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.includeExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncludeExp([NotNull] ConGrammarParser.IncludeExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.runExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRunExp([NotNull] ConGrammarParser.RunExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.callExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExp([NotNull] ConGrammarParser.CallExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.assignExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExp([NotNull] ConGrammarParser.AssignExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.declarationExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationExp([NotNull] ConGrammarParser.DeclarationExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.declarationModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationModifier([NotNull] ConGrammarParser.DeclarationModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.conditionalExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExp([NotNull] ConGrammarParser.ConditionalExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.conditionalMultiExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalMultiExp([NotNull] ConGrammarParser.ConditionalMultiExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.whileExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileExp([NotNull] ConGrammarParser.WhileExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] ConGrammarParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparator([NotNull] ConGrammarParser.ComparatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] ConGrammarParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ConGrammarParser.vector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVector([NotNull] ConGrammarParser.VectorContext context);
}
} // namespace ConIntellisense.Core.Parser
