//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ConGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConIntellisense.Core.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IConGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ConGrammarBaseListener : IConGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] ConGrammarParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] ConGrammarParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] ConGrammarParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] ConGrammarParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ConGrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ConGrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.returnExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnExp([NotNull] ConGrammarParser.ReturnExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.returnExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnExp([NotNull] ConGrammarParser.ReturnExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.commentExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommentExp([NotNull] ConGrammarParser.CommentExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.commentExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommentExp([NotNull] ConGrammarParser.CommentExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.includeExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludeExp([NotNull] ConGrammarParser.IncludeExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.includeExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludeExp([NotNull] ConGrammarParser.IncludeExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.runExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRunExp([NotNull] ConGrammarParser.RunExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.runExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRunExp([NotNull] ConGrammarParser.RunExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.callExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallExp([NotNull] ConGrammarParser.CallExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.callExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallExp([NotNull] ConGrammarParser.CallExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.assignExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignExp([NotNull] ConGrammarParser.AssignExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.assignExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignExp([NotNull] ConGrammarParser.AssignExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.declarationExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationExp([NotNull] ConGrammarParser.DeclarationExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.declarationExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationExp([NotNull] ConGrammarParser.DeclarationExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.declarationModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationModifier([NotNull] ConGrammarParser.DeclarationModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.declarationModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationModifier([NotNull] ConGrammarParser.DeclarationModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.conditionalExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExp([NotNull] ConGrammarParser.ConditionalExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.conditionalExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExp([NotNull] ConGrammarParser.ConditionalExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.conditionalMultiExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalMultiExp([NotNull] ConGrammarParser.ConditionalMultiExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.conditionalMultiExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalMultiExp([NotNull] ConGrammarParser.ConditionalMultiExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.whileExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileExp([NotNull] ConGrammarParser.WhileExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.whileExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileExp([NotNull] ConGrammarParser.WhileExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] ConGrammarParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] ConGrammarParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.comparator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparator([NotNull] ConGrammarParser.ComparatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.comparator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparator([NotNull] ConGrammarParser.ComparatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] ConGrammarParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] ConGrammarParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ConGrammarParser.vector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVector([NotNull] ConGrammarParser.VectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ConGrammarParser.vector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVector([NotNull] ConGrammarParser.VectorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ConIntellisense.Core.Parser
