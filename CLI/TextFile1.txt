== AnimationBundle ==
;AnimationBundle.abruptPlayback bool -> bool
: Unknown
;AnimationBundle.addAnimation <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationBundle.addEvent <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationBundle.fadeInTime float -> float
:Used in AnimationSystem1p and 3p .inc files
:"Fade in: Animation Start. Allows a smooth transition between animations. The lower it is, the quicker it is. A high value makes the transition slower and longer. Fade in 0.01. Example: Idle/Walking to Sprinting"
;AnimationBundle.fadeOutTime float -> float
:Used in AnimationSystem1p and 3p .inc files
:"Fade out: Animation End. Same as above, Fadeout 0.1. Fadeout 0.4 would make it take 0.4 seconds to finish an animation
:example: From Sprinting to Walk/Idle"
;AnimationBundle.getAnimationLength <nowiki>std::string</nowiki> -> float
: Unknown
;AnimationBundle.getAnimationStartTime <nowiki>std::string</nowiki> -> float
: Unknown
;AnimationBundle.getEventStartTime <nowiki>std::string</nowiki> -> float
: Unknown
;AnimationBundle.isLooping bool -> bool
: Unknown
;AnimationBundle.jumpToLastAnimationAtStop bool -> bool
: Unknown
;AnimationBundle.length float -> float
: Unknown
;AnimationBundle.listAnimations -> <nowiki>std::string</nowiki>
: Unknown
;AnimationBundle.listEvents -> <nowiki>std::string</nowiki>
: Unknown
;AnimationBundle.playBackward bool -> bool
: Unknown
;AnimationBundle.playForever bool -> bool
: Unknown
;AnimationBundle.removeAnimation <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationBundle.removeEvent <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationBundle.setAnimationLength <nowiki>std::string</nowiki> float -> void
: Unknown
;AnimationBundle.setAnimationStartTime <nowiki>std::string</nowiki> float -> void
: Unknown
;AnimationBundle.setEventStartTime <nowiki>std::string</nowiki> float -> void
: Unknown
;AnimationBundle.useSpeedAsTime bool -> bool
: Unknown

== AnimationManager ==
;AnimationManager.fadeInTime float -> float
: Unknown
;AnimationManager.ignoreMotherOrientation int -> int
: Unknown
;AnimationManager.length float -> float
:"AnimationSystem1p, AnimationSystem3p.inc"
:"The length of the animation. Must match up with ObjectTemplate.ammo.reloadTime to sync. If it's a lower value, animation will be sped up. If it's a higher value, animation will be slowed down."
;AnimationManager.looping bool -> bool
:"AnimationSystem1p, AnimationSystem3p.inc"
;AnimationManager.noiceAmplitude float -> float
: Unknown
;AnimationManager.noiceFreq int -> int
: Unknown
;AnimationManager.originalLength -> float
: Unknown

== AnimationSystem ==
;AnimationSystem.active<nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.activeAnimation <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.activeBundle <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.activeTrigger <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.activeValueHolder <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.cameraSpring.amplitude Vec3 -> Vec3
: Unknown
;AnimationSystem.cameraSpring.fire Vec3 -> Vec3
: Unknown
;AnimationSystem.cameraSpring.hit Vec3 -> Vec3
: Unknown
;AnimationSystem.cameraSpring.look Vec2 -> Vec2
: Unknown
;AnimationSystem.cameraSpring.move Vec3 -> Vec3
: Unknown
;AnimationSystem.cameraSpring.stiffness Vec3 -> Vec3
: Unknown
;AnimationSystem.cameraSpring.use bool -> bool
: Unknown
;AnimationSystem.cameraSpring.zoomDamping Vec3 -> Vec3
: Unknown
;AnimationSystem.create <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationSystem.createAnimation <nowiki>std::string</nowiki> -> anim.BoneAnimation*
: Unknown
;AnimationSystem.createBundle <nowiki>std::string</nowiki> -> anim.Bundle*
: Unknown
;AnimationSystem.createTrigger <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> anim.Trigger*
: Unknown
;AnimationSystem.createValueHolder <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationSystem.deleteActiveBundle -> void
: Unknown
;AnimationSystem.deleteActiveTrigger -> void
: Unknown
;AnimationSystem.hide -> void
: Unknown
;AnimationSystem.list -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.listAnimations -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.listBundles -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.listTriggers -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.listTriggerTypes -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.listValueHolders -> <nowiki>std::string</nowiki>
: Unknown
;AnimationSystem.playbackModifier float -> float
: Unknown
;AnimationSystem.reloadScript -> void
: Unknown
;AnimationSystem.save <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationSystem.saveActive -> void
: Unknown
;AnimationSystem.saveValueHolders -> void
: Unknown

== animationTrigger ==
;AnimationTrigger.addBundle <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationTrigger.addChild <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationTrigger.clearValueHolder -> void
: Unknown
;AnimationTrigger.fadeInTime float -> float
: Unknown
;AnimationTrigger.getTypeName -> <nowiki>std::string</nowiki>
: Unknown
;AnimationTrigger.idleTime Vec2 -> Vec2
: Unknown
;AnimationTrigger.listBundles -> <nowiki>std::string</nowiki>
: Unknown
;AnimationTrigger.message int -> int
: Unknown
;AnimationTrigger.removeBundle <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationTrigger.removeChild <nowiki>std::string</nowiki> -> void
: Unknown
;AnimationTrigger.triggerOnAcceleration bool -> bool
: Unknown
;AnimationTrigger.useDirection bool -> bool
: Unknown
;AnimationTrigger.valueHolder <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
== animationValueHolder ==
;AnimationValueHolder.getFilename -> <nowiki>std::string</nowiki>
: Unknown
;AnimationValueHolder.max float -> float
: Unknown
;AnimationValueHolder.min float -> float
: Unknown
;AnimationValueHolder.normal float -> float
: Unknown
;AnimationValueHolder.passOnMessage unsigned int -> unsigned int
: Unknown
;AnimationValueHolder.stopOnMessage unsigned int -> unsigned int
: Unknown
;AnimationValueHolder.values float float float -> void
: Unknown
== audioSettings ==
;AudioSettings.alwaysAllowSystemOpenAL bool -> bool
: Unknown
;AudioSettings.effectsVolume float -> float
: Unknown
;AudioSettings.enableEAX bool -> bool
: Unknown
;AudioSettings.englishOnlyVoices bool -> bool
: Unknown
;AudioSettings.forceNumberOfVoices int -> int
: Unknown
;AudioSettings.helpVoiceVolume float -> float
: Unknown
;AudioSettings.musicVolume float -> float
: Unknown
;AudioSettings.provider <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AudioSettings.soundQuality <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;AudioSettings.voipBoostEnabled bool -> bool
: Unknown
;AudioSettings.voipCaptureThreshold float -> float
: Unknown
;AudioSettings.voipCaptureVolume float -> float
: Unknown
;AudioSettings.voipEnabled bool -> bool
: Unknown
;AudioSettings.voipPlaybackVolume float -> float
: Unknown
;AudioSettings.voipUsePushToTalk bool -> bool
: Unknown
;Bf2Engine.playMovie <nowiki>std::string</nowiki> int -> void
: Unknown
;Chat.sayAll <nowiki>std::string</nowiki> -> void
:Menu (Hud Elements Chat.con)
:All Chat. Used in HudElementsChat.con
;Chat.sayTeam <nowiki>std::string</nowiki> -> void
:Menu (Hud Elements Chat.con)
:Team Chat. Used in HudElementsChat.con
;CollisionCheck.checkStaticCollisionMeshes int -> void
: Unknown
== collisionManager==
;CollisionManager.buildDebugCollisionMeshes -> void
: Unknown
;CollisionManager.create <nowiki>std::string</nowiki> -> void
: Unknown
;CollisionManager.createTemplate <nowiki>std::string</nowiki> -> void
:Used in .con files for collision meshes
:Creates a Collision Mesh template from the collision mesh name so it can be used in other files without creating a duplicate mesh
;CollisionManager.drawBoundingBoxes bool -> void
: Unknown
;CollisionManager.drawForces bool -> void
: Unknown
;CollisionManager.drawIntersectFaces bool -> void
: Unknown
;CollisionManager.drawMeshes bool -> void
: Unknown
;CollisionManager.drawNormals bool -> void
: Unknown
;CollisionManager.drawOnlyRoot float -> void
: Unknown
;CollisionManager.drawPivots bool -> void
: Unknown
;CollisionManager.drawPrimitives bool -> void
: Unknown
;CollisionManager.drawSoldierMesh bool -> void
: Unknown
;CollisionManager.drawTestedFaces bool -> void
: Unknown
;CollisionManager.getNameOfObjectInFocus -> void
: Unknown
;CollisionManager.identityRotateObjectInFocus -> void
: Unknown
;CollisionManager.rotateObjectInFocusAroundAxis uint float -> void
: Unknown
;CollisionManager.rotateObjectInFocusAroundVector Vec3 float -> void
: Unknown
;CollisionManager.setActiveLod int -> void
: Unknown
;CollisionManager.setDrawDistance float -> void
: Unknown
;CollisionManager.setGeometry bool -> void
: Unknown
;CollisionManager.setSleepinessOfObjectInFocus int -> void
:.con presumably
:Effect Unknown. Causes a game crash during loading when using collisionManager.setSleepinessOfObjectInFocus 0 in a .con of a GenericFirearm
;CollisionManager.updateFlagsOfObjectInFocus U32 U32 -> void
: Unknown
;CollisionManager.useDeferredLoading bool -> bool
: Unknown
== combatArea ==
;CombatArea.active <nowiki>std::string</nowiki> -> void
: Unknown
;CombatArea.addAreaPoint Vec2 -> void
: Unknown
;CombatArea.create <nowiki>std::string</nowiki> -> void
: Unknown
;CombatArea.deleteActiveCombatArea -> void
: Unknown
;CombatArea.getActiveCombatAreaName -> <nowiki>std::string</nowiki>
: Unknown
;CombatArea.inverted bool -> bool
: Unknown
;CombatArea.layer int -> int
: Unknown
;CombatAreaManager.addVehicleDamage world::VehicleCategory float -> void
: Unknown
;CombatAreaManager.addVehicleTimer world::VehicleCategory float -> void
: Unknown
;CombatAreaManager.damage float -> float
: Unknown
;CombatAreaManager.timeAllowedOutside float -> float
: Unknown
;CombatAreaManager.use bool -> void
: Unknown
;CombatArea.max Vec2 -> Vec2
: Unknown
;CombatArea.min Vec2 -> Vec2
: Unknown
;CombatArea.team int -> int
: Unknown
;CombatArea.usedByPathFinding bool -> bool
: Unknown
;CombatArea.vehicles int -> int
: Controls what kind of vehicle is effected by the combat zone. This can be used for crating an extra large, separate combat zone around the base combat zone only for jets, to give them a much larger area to fly in and when you hop into a jet, you can still see the base combat zone, but the area between the base and the jet combat zone will be 1/2 transparent. When hand coding this the values are:
:VehicleType "0" = Land
:VehicleType "1" = Sea
:VehicleType "2" = Planes
:VehicleType "3" = Choppers
:VehicleType "4" = All
:VehicleType "5" = Planes & Choppers

== commander == 
;Commander.accept bool -> void
: Unknown
;Commander.artillery -> void
: Unknown
;Commander.commanderApply -> void
: Unknown
;Commander.commanderMutiny -> void
: Unknown
;Commander.commanderResign -> void
: Unknown
;Commander.satellite -> bool
: Unknown
;Commander.sendOrder int bool -> void
: Unknown
;Commander.supplies -> bool
: Unknown
;Commander.toggleArtilleryState -> void
: Unknown
;Commander.toggleSupplyState -> void
: Unknown
;Commander.toggleUAVState -> void
: Unknown
;Commander.toggleVehicleDropState -> void
: Unknown
;Commander.uav -> bool
: Unknown
;Commander.vehicleDrop -> bool
: Unknown
;Commander.zoomCommander -> bool
: Unknown
== commanderInterface == 
;CommanderInterface.selectOrder <nowiki>std::string</nowiki> -> bool
: Unknown
;CommanderInterface.set<nowiki>std::string</nowiki>Map <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
== commanderMenu == 
;CommanderMenu.deselect -> void
: Unknown
;CommanderMenu.doubleClick -> void
: Unknown
;CommanderMenu.rightClick -> void
: Unknown
;CommanderMenu.sendRadioMessage <nowiki>std::string</nowiki> TargetChannel -> void
: Unknown
;CommanderMenu.singleClick -> void
: Unknown
;CommanderMenu.vehicleDropReloadTime float -> float
: Unknown
== Console ==
;Console.allowMultipleFileLoad bool -> bool
: Unknown
;Console.bindKeyToConsoleScript int <nowiki>std::string</nowiki> -> bool
: Unknown
;Console.echo bool -> bool
: Unknown
;Console.echoErrors bool -> bool
: Unknown
;Console.getActiveMethods <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.getArgumentTypes <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.getCategory <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.getDelta <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.getEnumName <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> <nowiki>std::string</nowiki>
: Unknown
;Console.getRange <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.getReturnType <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.getTypeDescription <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.hasBundledType <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.hasRange <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.isDynamic <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.isSetGet <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.listConstants <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.listVariables <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.maxCommandHistorySize int -> int
: Unknown
;Console.maxHistorySize int -> int
: Unknown
;Console.maxLineSize int -> int
: Unknown
;Console.run <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Console.useRelativePaths bool -> bool
: Unknown
;Console.workingPath <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
== controlMap ==
;ControlMap.addAxisToAxisMapping int InputDeviceFlags InputDeviceAxes -> void
: Unknown
;ControlMap.addAxisToTriggerMapping int int InputDeviceFlags -> void
: Unknown
;ControlMap.addButtonAndKeyToAxisMapping int InputDeviceFlags InputDeviceButtons -> void
: Unknown
;ControlMap.addButtonsToAxisMapping int InputDeviceFlags InputDeviceButtons -> void
: Unknown
;ControlMap.addButtonToTriggerMapping int InputDeviceFlags InputDeviceButtons -> void
: Unknown
;ControlMap.addKeyAndButtonToAxisMapping int InputDeviceFlags InputDeviceKeys -> void
: Unknown
;ControlMap.addKeysToAxisMapping int InputDeviceFlags InputDeviceKeys -> void
: Unknown
;ControlMap.AddKeyToTriggerMapping int InputDeviceFlags InputDeviceKeys -> void
: Unknown
;ControlMap.create <nowiki>std::string</nowiki> -> void
: Unknown
;ControlMap.deleteControlMap <nowiki>std::string</nowiki> -> void
: Unknown
;ControlMap.dump -> void
: Unknown
;ControlMap.InvertMouse bool -> bool
: Unknown
;ControlMap.keyboardSensitivity float -> float
: Unknown
;ControlMap.mouseSensitivity float -> float
: Unknown
;ControlMap.setActive <nowiki>std::string</nowiki> -> void
: Unknown
;ControlMap.setAxisScale io::InputDeviceAxes float -> void
: Unknown
;ControlMap.setButtonFallTime float -> void
: Unknown
;ControlMap.setButtonRiseTime float -> void
: Unknown
;ControlMap.setDoubleTapTime float -> void
: Unknown
;ControlMap.setPitchFactor float -> void
: Unknown
;ControlMap.setYawFactor float -> void
: Unknown
== DecalManager ==
;DecalManager.decalGeomClipAngle float -> float
: Unknown
;DecalManager.decalNormalOffset float -> float
: Unknown
;DecalManager.drawStats bool -> bool
: Unknown
;DecalManager.fadeDistance float -> float
:
:Set the View Distance of the Decals to start to fade. Works in level .con files
;DecalManager.fadeOutAtPercentageOfTimeToLive float -> float
: Unknown
;DecalManager.generateTexture -> bool
: Unknown
;DecalManager.startFadePercentageOfFadeDistancel float -> float
: Unknown
;DecalManager.timeToLive float -> float
:"Time in seconds of how long will a vehicle, effect or projectile will last. For vehicles, if it has been exited for a time, it will blow up. Uses CRD Arguments. More info: http://bfmods.com/mdt/scripting/ObjectTemplate/Properties/TimeToLive.html"
;Demo.recordDemo <nowiki>std::string</nowiki> -> void
:"Starts the Battlerecorder Recording. Needs to specify a name. File is saved in mods/(mod)/Demos. In My Documents/Project Reality/Profile/001 (i.e 002, 003, default) create a demos folder and place both files there."
== demo ==
;Demo.restartDemo -> void
: Unknown
;Demo.shutdownDemo -> void
: Unknown
;Demo.stopRecording -> void
:Console ~ Command 
:Stops the Battlerecorder Recording. File is saved in mods/(mod)/Demos. In My Documents/Battlefield 2/Profile/001 etc create a demos folder and place both files there.
;Demo.toggleCameraDemo -> void
: Unknown
;Demo.toggleDemoPauseOrPlay -> void
: Unknown
;Demo.togglePlayerDemo bool -> void
: Unknown
== Editor ==
;Editor.createNewLayer <nowiki>std::string</nowiki> -> void
: Unknown
;Editor.deleteAllLayers -> void
: Unknown
;Editor.deleteAllObjects -> <nowiki>std::string</nowiki>
: Unknown
;Editor.deleteObject world::IObject_ptrproxy -> void
: Unknown
;Editor.deleteTemplate world::IObjectTemplate_ptrproxy -> void
: Unknown
;Editor.getActiveLayer -> <nowiki>std::string</nowiki>
: Unknown
;Editor.getActiveLayerId -> int
: Unknown
;Editor.getActiveObject -> world::IObject_ptrproxy
: Unknown
;Editor.getActiveObjectTemplate -> world::IObjectTemplate_ptrproxy
: Unknown
;Editor.hideLayer <nowiki>std::string</nowiki> -> void
: Unknown
;Editor.listAllVehicles -> <nowiki>std::string</nowiki>
: Unknown
;Editor.listLayers -> <nowiki>std::string</nowiki>
: Unknown
;Editor.listMeshes -> <nowiki>std::string</nowiki>
: Unknown
;Editor.listObjects -> <nowiki>std::string</nowiki>
: Unknown
;Editor.listObjectsOfTemplate world::IObjectTemplate_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;Editor.listTemplates <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Editor.listTextures -> <nowiki>std::string</nowiki>
: Unknown
;Editor.loadAllObjects <nowiki>std::string</nowiki> -> bool
: Unknown
;Editor.loadAllTemplatesAndObjects -> bool
: Unknown
;Editor.printObjectCreationScript world::IObject_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;Editor.printTemplateCreationScript world::IObjectTemplate_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;Editor.quickReloadActiveTemplate -> void
: Unknown
;Editor.quickReloadTemplate world::IObjectTemplate_ptrproxy -> void
: Unknown
;Editor.removeLayer <nowiki>std::string</nowiki> -> void
: Unknown
;Editor.renameLayer <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;Editor.saveAllEffects -> void
: Unknown
;Editor.saveAllObjects <nowiki>std::string</nowiki> -> bool
: Unknown
;Editor.saveAllSpawners -> bool
: Unknown
;Editor.saveAllTemplates -> bool
: Unknown
;Editor.saveAllTemplatesAndObjects -> bool
: Unknown
;Editor.saveAllUsedTemplates <nowiki>std::string</nowiki> -> bool
: Unknown
;Editor.saveFolderToArchive <nowiki>std::string</nowiki> bool bool -> int
: Unknown
;Editor.saveSpawners bool bool bool -> void
: Unknown
;Editor.saveTemplateToFile <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;Editor.saveTemplateTreeStructure <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> int
: Unknown
;Editor.saveVehicles bool -> bool
: Unknown
;Editor.setActiveLayer <nowiki>std::string</nowiki> -> void
: Unknown
;Editor.setActiveLayerId int -> void
: Unknown
;Editor.setActiveObject world::IObject_ptrproxy -> world::IObject_ptrproxy
: Unknown
;Editor.setActiveObjectTemplate world::IObjectTemplate_ptrproxy -> world::IObjectTemplate_ptrproxy
: Unknown
;Editor.ShowEntryPoints bool -> bool
: Unknown
;Editor.showLayer <nowiki>std::string</nowiki> -> void
: Unknown
;Editor.start world::IObject_ptrproxy -> void
: Unknown
;Editor.stop world::IObject_ptrproxy -> void
: Unknown
;Editor.updateAllTemplates -> void
: Unknown
;Editor.updateTemplate world::IObjectTemplate_ptrproxy -> void
: Unknown
== effectTweak ==
;EffectTweak.setAgeScaleFactorForAllEffects float -> void
: Unknown
;EffectTweak.setAlphaIntensityForAllEffects float -> void
: Unknown
;EffectTweak.setEmitScaleFactorForAllEffects float -> void
: Unknown
;EffectTweak.setEmitSpeedScaleFactorForAllEffects float -> void
: Unknown
;EffectTweak.setSoundIntensity float -> void
: Unknown
;EffectTweak.setStartAgeForAllEffects float -> void
: Unknown
;EnvmapManager.generateEnvMaps -> void
: Unknown
;EnvmapManager.loadEMIFile <nowiki>std::string</nowiki> -> void
: Unknown
;EnvmapManager.perPixelEnvironmentMappingEnabled bool -> bool
: Unknown
;EnvmapManager.save -> void
: Unknown
;FileManager.addPath <nowiki>std::string</nowiki> -> void
: Unknown
;FileManager.copyFile <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;FileManager.deleteFile <nowiki>std::string</nowiki> -> bool
: Unknown
;FileManager.fileExists <nowiki>std::string</nowiki> -> bool
: Unknown
;FileManager.mountArchive <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> bool -> void
: Unknown
;FileManager.moveFile <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;Game.allowToggleFullscreen bool -> bool
: Unknown
;Game.lockFps int -> int
: Sets a fps cap, makes it so that the fps can't go higher than the given number.
== gameLogic ==
;GameLogic.AddInvalidDropVehicleObject <nowiki>std::string</nowiki> bool -> void
: Unknown
;GameLogic.becomeSquadLeader bool -> bool
: Unknown
;GameLogic.createObject <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.damageForBeingOutSideWorld float -> float
: Unknown
;GameLogic.defaultLevel <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;GameLogic.defaultTimeToNextAIWave float -> float
: Unknown
;GameLogic.enableVoHelp bool -> bool
	:
	:"Enables the Voice Over Tips feature from vBF2. Uses prhelp.utxt in localization for <nowiki>std::string</nowiki>s/anything with HUD_HELP definitions
	: HudElementsHelp.con in Menu for the size
	: color
	: fade in time
	: create more messages and VoiceMessages_Help.con for voiceovers"
;GameLogic.extraUAVVehicleFlightHeight float -> float
: Unknown
;GameLogic.feslEnvironment int -> int
: Unknown
;GameLogic.getBeforeSpawnCameraDirection -> Vec3
: Unknown
;GameLogic.getBeforeSpawnCameraPosition -> Vec3
: Unknown
;GameLogic.getDefaultNumberOfTickets U32 -> U32
: Unknown
;GameLogic.getDefaultNumberOfTicketsEx U32 U32 -> U32
: Unknown
;GameLogic.getNumberOfTickets U32 -> U32
: Unknown
;GameLogic.getTeamDropVehicle int -> <nowiki>std::string</nowiki>
: Unknown
;GameLogic.getTeamLanguage int -> <nowiki>std::string</nowiki>
: Unknown
;GameLogic.getTeamName int -> <nowiki>std::string</nowiki>
: Unknown
;GameLogic.getTicketLossAtEndPerMin -> float
: Unknown
;GameLogic.getTicketLossPerMin U32 -> float
: Unknown
;GameLogic.hitIndicationThreshold float -> float
: Unknown
;GameLogic.maximumLevelViewDistance float -> float
: Unknown
;GameLogic.messages.addHelpMessage <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> int
: Unknown
;GameLogic.messages.addMessage <nowiki>std::string</nowiki> -> int
: Unknown
;GameLogic.messages.addRadioFilter <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> int
: Unknown
;GameLogic.messages.addRadioVoice <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> int
: Unknown
;GameLogic.messages.playHelpMessage <nowiki>std::string</nowiki> -> int
: Unknown
;GameLogic.messages.playRadioMessage int <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> int
: Unknown
;GameLogic.messages.setVolumes float float -> void
: Unknown
;GameLogic.noVehiclesOmit <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.outputPlayerStats bool -> bool
: Unknown
;GameLogic.printCameraCoordToConsole -> void
: Unknown
;GameLogic.refreshTriggerables -> void
: Unknown
;GameLogic.remoteCommand int int int -> bool
: Unknown
;GameLogic.reset -> void
: Unknown
;GameLogic.roundNr int -> int
: Unknown
;GameLogic.setAirMouseInverted bool -> void
: Unknown
;GameLogic.setAirMouseSensitivity float -> float
: Unknown
;GameLogic.setBeforeSpawnCamera Vec3 Vec3 -> void
: Unknown
;GameLogic.setDefaultNumberOfTickets U32 U32 -> void
: Unknown
;GameLogic.setDefaultNumberOfTicketsEx U32 U32 U32 -> void
: Unknown
;GameLogic.setDropVehicleDeviationRadius int int -> void
: Unknown
;GameLogic.setKit int KitType <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.setNumberOfTickets U32 U32 -> void
: Unknown
;GameLogic.setNumDropVehiclesForTeam int int -> void
: Unknown
;GameLogic.setTeamDropVehicle int <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.setTeamFlag int <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.setTeamLanguage int <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.setTeamName int <nowiki>std::string</nowiki> -> void
: Unknown
;GameLogic.setTicketLossAtEndPerMin float -> void
: Unknown
;GameLogic.setTicketLossPerMin U32 float -> void
: Unknown
;GameLogic.spawnAtCameraPosition bool -> bool
: Unknown
;GameLogic.spawnObjectSpeed float -> float
: Unknown
;GameLogic.spawnPlayers bool -> bool
: Unknown
;GameLogic.supplyDropHeight float -> float
: Unknown
;GameLogic.supplyDropNumSecsToLive float -> float
: Unknown
;GameLogic.teleport -> void
: Unknown
;GameLogic.teleportCameraTo Vec3 -> void
: Unknown
;GameLogic.teleportTo Vec3 -> void
: Unknown
;GameLogic.timeAllowedOutSideWorld float -> float
: Unknown
;GameLogic.timeToNextAIWave float -> float
: Unknown
;GameLogic.togglePause -> void
	:Console ~ Command
	:Pauses the game. Pressing 'P' in COOP and Local does the same thing.
;GameLogic.vehicleDropHeight float -> float
: Unknown
;Game.radioMessage TargetChannel <nowiki>std::string</nowiki> -> void
: Unknown
;Game.sayAll <nowiki>std::string</nowiki> -> void
: Unknown
;Game.sayTeam int <nowiki>std::string</nowiki> -> void
: Unknown
== gameServerSettings ==
;GameServerSettings.setAdminScript <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setAllowNATNegotation bool -> void
: Unknown
;GameServerSettings.setAutoBalanceTeam bool -> void
: Unknown
;GameServerSettings.setAutoRecord bool -> void
: Unknown
;GameServerSettings.setAutoRecordRounds int -> void
: Unknown
;GameServerSettings.setCommunityLogoURL <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setCoopBotCount int -> void
: Unknown
;GameServerSettings.setCoopBotDifficulty float -> void
: Unknown
;GameServerSettings.setCoopBotRatio float -> void
: Unknown
;GameServerSettings.setDemoDownloadURL <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setDemoHook <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setDemoIndexURL <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setEndDelay int -> void
: Unknown
;GameServerSettings.setFriendlyFireWithMines bool -> void
: Unknown
;GameServerSettings.setGameMode <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setGameSpyPort int -> void
: Unknown
;GameServerSettings.setInterfaceIP <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setInternet bool -> void
: Unknown
;GameServerSettings.setManDownTime float -> void
: Unknown
;GameServerSettings.setMaxPlayers int -> void
: Unknown
;GameServerSettings.setMinPlayersForVoting int -> void
: Unknown
;GameServerSettings.setNoVehicles float -> void
: Unknown
;GameServerSettings.setPassword <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setPunishTeamKills bool -> void
: Unknown
;GameServerSettings.setRoundsPerMap int -> void
: Unknown
;GameServerSettings.setScoreLimit int -> void
: Unknown
;GameServerSettings.setServerName <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setSoldierFF int -> void
: Unknown
;GameServerSettings.setSoldierSplashFF int -> void
: Unknown
;GameServerSettings.setSpawnTime float -> void
: Unknown
;GameServerSettings.setSponsorLogoURL <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setSponsorText <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setStartDelay int -> void
: Unknown
;GameServerSettings.setSvPunkBuster bool -> void
: Unknown
;GameServerSettings.setTeamRatio float -> void
: Unknown
;GameServerSettings.setTeamVoteOnly bool -> void
: Unknown
;GameServerSettings.setTicketRatio int -> void
: Unknown
;GameServerSettings.setTimeBeforeRestartMap float -> void
: Unknown
;GameServerSettings.setTimeLimit int -> void
: Unknown
;GameServerSettings.setVehicleFF int -> void
: Unknown
;GameServerSettings.setVehicleSplashFF int -> void
: Unknown
;GameServerSettings.setVoipBFClientPort int -> void
: Unknown
;GameServerSettings.setVoipBFServerPort int -> void
: Unknown
;GameServerSettings.setVoipEnabled bool -> void
: Unknown
;GameServerSettings.setVoipQuality int -> void
: Unknown
;GameServerSettings.setVoipServerPort int -> void
: Unknown
;GameServerSettings.setVoipServerRemote bool -> void
: Unknown
;GameServerSettings.setVoipServerRemoteIP <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setVoipSharedPassword <nowiki>std::string</nowiki> -> void
: Unknown
;GameServerSettings.setVoteTime int -> void
: Unknown
;Game.simulationRate int -> int
	:HudElementsDemoRecComm.con
	:"In Battlerecorder
	: it sets the speed for the decrease speed and increase speed buttons. Can be increased
	: though some users report no difference as it is dependent on the Demo FPS (Default is 30
	: settings must be recorded higher
	: something like 60) and Game FPS"
;Game.toggleFullscreen -> void
	:~ Console
	:"Toggles Full-Screen and Windowed mode
	: though it will give you the nasty side-effect of seethrough terrain that would need the client to disconnect and reconnect to fix."
;Game.unload -> bool
: Unknown
== generalSettings ==
;GeneralSettings.addFavouriteServer <nowiki>std::string</nowiki> int <nowiki>std::string</nowiki> -> void
: Unknown
;GeneralSettings.addServerHistory <nowiki>std::string</nowiki> int <nowiki>std::string</nowiki> -> void
: Unknown
;GeneralSettings.setAllowPunkBuster bool -> void
: Unknown
;GeneralSettings.setAutoReady bool -> void
: Unknown
;GeneralSettings.setAutoReload bool -> void
: Unknown
;GeneralSettings.setBFTVSaveDirectory <nowiki>std::string</nowiki> -> void
: Unknown
;GeneralSettings.setBotSkill float -> void
: Unknown
;GeneralSettings.setBuddytagColor int int int -> void
: Unknown
;GeneralSettings.setConfirmQuit bool -> void
: Unknown
;GeneralSettings.setConnectionType int -> void
: Unknown
;GeneralSettings.setCrosshairColor int int int -> void
: Unknown
;GeneralSettings.setHUDTransparency float -> void
: Unknown
;GeneralSettings.setItemSelectionReverseItems bool -> void
: Unknown
;GeneralSettings.setLCDDisplayModes bool -> void
: Unknown
;GeneralSettings.setMapIconAlphaTransparency float -> void
: Unknown
;GeneralSettings.setMaxBots int -> void
: Unknown
;GeneralSettings.setMaxBotsIncludeHumans bool -> void
: Unknown
;GeneralSettings.setMinimapRotate bool -> void
: Unknown
;GeneralSettings.setMinimapTransparency float -> void
: Unknown
;GeneralSettings.setNumRoundsPlayed int -> void
: Unknown
;GeneralSettings.setOutOfVoting bool -> void
: Unknown
;GeneralSettings.setPlayedVOHelp <nowiki>std::string</nowiki> -> void
: Unknown
;GeneralSettings.setServerFilter <nowiki>std::string</nowiki> -> void
: Unknown
;GeneralSettings.setSortKey <nowiki>std::string</nowiki> -> void
: Unknown
;GeneralSettings.setSortOrder int -> void
: Unknown
;GeneralSettings.setSquadtagColor int int int -> void
: Unknown
;GeneralSettings.setToggleFilters int -> void
: Unknown
;GeneralSettings.setUseAdvancedServerBrowser bool -> void
: Unknown
;GeneralSettings.setUseBots bool -> void
: Unknown
;GeneralSettings.setViewIntroMovie bool -> void
: Unknown
== geometryTemplate ==
;GeometryTemplate.active IGeometryTemplate* -> IGeometryTemplate*
: Unknown
;GeometryTemplate.color Vec3 -> Vec3
: Unknown
;GeometryTemplate.compressVertexData bool -> bool
: Unknown
;GeometryTemplate.create <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> IGeometryTemplate*
	:Used in .con files
	:Creates a Geometry Mesh template from the geometry mesh name so it can be used in other files without creating a duplicate mesh
;GeometryTemplate.depth float -> float
: Unknown
;GeometryTemplate.doNotGenerateLightmaps bool -> bool
: Unknown
;GeometryTemplate.dumpInstances -> void
: Unknown
;GeometryTemplate.glowFadeOutDistEnd float -> float
: Unknown
;GeometryTemplate.glowFadeOutDistStart float -> float
: Unknown
;GeometryTemplate.glowing bool -> bool
: Unknown
;GeometryTemplate.height float -> float
: Unknown
;GeometryTemplate.ignoreLeafLighting bool -> bool
: Unknown
;GeometryTemplate.innerRadius float -> float
: Unknown
;GeometryTemplate.lenght float -> float
: Unknown
;GeometryTemplate.length float -> float
: Unknown
;GeometryTemplate.lightmapOverride bool -> bool
: Unknown
;GeometryTemplate.maxSkip3pLods uint -> uint
: Unknown
;GeometryTemplate.maxSkipWreckLods uint -> uint
: Unknown
;GeometryTemplate.maxTextureRepeat int -> int
: Unknown
;GeometryTemplate.meshDetailLevel int -> int
: Unknown
;GeometryTemplate.name -> <nowiki>std::string</nowiki>
: Unknown
;GeometryTemplate.noLighting bool -> bool
: Unknown
;GeometryTemplate.nrOfAnimatedUVMatrix int -> int
: Unknown
;GeometryTemplate.outerRadius float -> float
: Unknown
;GeometryTemplate.printInfo bool -> <nowiki>std::string</nowiki>
: Unknown
;GeometryTemplate.radius1 float -> float
: Unknown
;GeometryTemplate.radius2 float -> float
: Unknown
;GeometryTemplate.rings uint -> uint
: Unknown
;GeometryTemplate.setLightmapSizeAll int int int -> void
: Unknown
;GeometryTemplate.setMaterialParallaxHeightScale int int int -> void
: Unknown
;GeometryTemplate.setMaterialReflectionScale int int int -> void
: Unknown
;GeometryTemplate.setSpecularStaticGloss int int int -> void
: Unknown
;GeometryTemplate.setSubGeometryLodDistance int int float -> void
: Unknown
;GeometryTemplate.shader <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;GeometryTemplate.shadowDetailLevel int -> int
: Unknown
;GeometryTemplate.sides uint -> uint
: Unknown
;GeometryTemplate.slices uint -> uint
: Unknown
;GeometryTemplate.stacks uint -> uint
: Unknown
;GeometryTemplate.tesselation BaseVector2<uint> -> BaseVector2<uint>
: Unknown
;GeometryTemplate.texture <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;GeometryTemplate.useRadiusForShadowDepth bool -> bool
: Unknown
;GeometryTemplate.useRadiusForShadowSpatial bool -> bool
: Unknown
;GeometryTemplate.width float -> float
: Unknown
== globalSettings ==
;GlobalSettings.setDefaultUser <nowiki>std::string</nowiki> -> void
: Unknown
;GlobalSettings.setNamePrefix <nowiki>std::string</nowiki> -> void
: Unknown
== hapticSettings ==
;HapticSettings.addWeaponClassMap <nowiki>std::string</nowiki> int -> void
: Unknown
;HapticSettings.load -> bool
: Unknown
;HapticSettings.setAimSensitivity float float float -> void
: Unknown
;HapticSettings.setAimSensitivityAIR float float float -> void
: Unknown
;HapticSettings.setAimSensitivityHELI float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLAND float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLength float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLengthAIR float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLengthHELI float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLengthLAND float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLengthSEA float float float -> void
: Unknown
;HapticSettings.setAimSensitivityLengthSOLDIER float float float -> void
: Unknown
;HapticSettings.setAimSensitivitySEA float float float -> void
: Unknown
;HapticSettings.setAimSensitivitySOLDIER float float float -> void
: Unknown
;HapticSettings.setControlBoxLength float float float -> void
: Unknown
;HapticSettings.setControlBoxLengthAIR float float float -> void
: Unknown
;HapticSettings.setControlBoxLengthHELI float float float -> void
: Unknown
;HapticSettings.setControlBoxLengthLAND float float float -> void
: Unknown
;HapticSettings.setControlBoxLengthSEA float float float -> void
: Unknown
;HapticSettings.setControlBoxLengthSOLDIER float float float -> void
: Unknown
;HapticSettings.setControlBoxStiffness float float float -> void
: Unknown
;HapticSettings.setControlBoxStiffnessAIR float float float -> void
: Unknown
;HapticSettings.setControlBoxStiffnessHELI float float float -> void
: Unknown
;HapticSettings.setControlBoxStiffnessLAND float float float -> void
: Unknown
;HapticSettings.setControlBoxStiffnessSEA float float float -> void
: Unknown
;HapticSettings.setControlBoxStiffnessSOLDIER float float float -> void
: Unknown
;HapticSettings.setDamageScale float -> void
: Unknown
;HapticSettings.setExplosionShakeScale float -> void
: Unknown
;HapticSettings.setForceCapX float -> void
: Unknown
;HapticSettings.setForceCapY float -> void
: Unknown
;HapticSettings.setForceCapZ float -> void
: Unknown
;HapticSettings.setGeneralShakeScale float -> void
: Unknown
;HapticSettings.setPhysicsAIRScale float float float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleXHigh float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleXLow float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleXMed float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleYHigh float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleYLow float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleYMed float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleZHigh float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleZLow float -> void
: Unknown
;HapticSettings.setPhysicsAIRScaleZMed float -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeXHigh int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeXLow int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeXMed int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeYHigh int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeYLow int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeYMed int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeZHigh int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeZLow int -> void
: Unknown
;HapticSettings.setPhysicsAIRSmoothTimeZMed int -> void
: Unknown
;HapticSettings.setPhysicsAIRTransitionValueHigh float -> void
: Unknown
;HapticSettings.setPhysicsAIRTransitionValueMed float -> void
: Unknown
;HapticSettings.setPhysicsHELIScale float float float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleXHigh float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleXLow float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleXMed float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleYHigh float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleYLow float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleYMed float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleZHigh float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleZLow float -> void
: Unknown
;HapticSettings.setPhysicsHELIScaleZMed float -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeXHigh int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeXLow int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeXMed int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeYHigh int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeYLow int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeYMed int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeZHigh int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeZLow int -> void
: Unknown
;HapticSettings.setPhysicsHELISmoothTimeZMed int -> void
: Unknown
;HapticSettings.setPhysicsHELITransitionValueHigh float -> void
: Unknown
;HapticSettings.setPhysicsHELITransitionValueMed float -> void
: Unknown
;HapticSettings.setPhysicsLANDScale float float float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleXHigh float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleXLow float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleXMed float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleYHigh float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleYLow float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleYMed float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleZHigh float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleZLow float -> void
: Unknown
;HapticSettings.setPhysicsLANDScaleZMed float -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeXHigh int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeXLow int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeXMed int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeYHigh int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeYLow int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeYMed int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeZHigh int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeZLow int -> void
: Unknown
;HapticSettings.setPhysicsLANDSmoothTimeZMed int -> void
: Unknown
;HapticSettings.setPhysicsLANDTransitionValueHigh float -> void
: Unknown
;HapticSettings.setPhysicsLANDTransitionValueMed float -> void
: Unknown
;HapticSettings.setPhysicsSEAScale float float float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleXHigh float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleXLow float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleXMed float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleYHigh float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleYLow float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleYMed float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleZHigh float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleZLow float -> void
: Unknown
;HapticSettings.setPhysicsSEAScaleZMed float -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeXHigh int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeXLow int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeXMed int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeYHigh int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeYLow int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeYMed int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeZHigh int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeZLow int -> void
: Unknown
;HapticSettings.setPhysicsSEASmoothTimeZMed int -> void
: Unknown
;HapticSettings.setPhysicsSEATransitionValueHigh float -> void
: Unknown
;HapticSettings.setPhysicsSEATransitionValueMed float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScale float float float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleXHigh float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleXLow float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleXMed float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleYHigh float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleYLow float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleYMed float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleZHigh float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleZLow float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERScaleZMed float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeXHigh int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeXLow int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeXMed int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeYHigh int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeYLow int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeYMed int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeZHigh int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeZLow int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERSmoothTimeZMed int -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERTransitionValueHigh float -> void
: Unknown
;HapticSettings.setPhysicsSOLDIERTransitionValueMed float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleCARBINE float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleDEFIB float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleDROP float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleKNIFE float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleLAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleLMG float -> void
: Unknown
;HapticSettings.setRecoilPitchScalePISTOL float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleRIFLE float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleRIFLELAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleSHOTGUN float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleSMG float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleSNIPER float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleTHROWN float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_AIRGUN float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_ARMORCANNON float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_COAXIALGUN float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_HELIGUN float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_HMG float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_LMG float -> void
: Unknown
;HapticSettings.setRecoilPitchScaleV_MISSILE float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleCARBINE float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleDEFIB float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleDROP float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleKNIFE float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleLAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleLMG float -> void
: Unknown
;HapticSettings.setRecoilPunchScalePISTOL float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleRIFLE float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleRIFLELAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleSHOTGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleSMG float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleSNIPER float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleTHROWN float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_AIRGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_ARMORCANNON float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_COAXIALGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_HELIGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_HMG float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_LMG float -> void
: Unknown
;HapticSettings.setRecoilPunchScaleV_MISSILE float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeCARBINE float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeDEFIB float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeDROP float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeKNIFE float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeLAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeLMG float -> void
: Unknown
;HapticSettings.setRecoilPunchTimePISTOL float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeRIFLE float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeRIFLELAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeSHOTGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeSMG float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeSNIPER float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeTHROWN float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_AIRGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_ARMORCANNON float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_COAXIALGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_HELIGUN float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_HMG float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_LMG float -> void
: Unknown
;HapticSettings.setRecoilPunchTimeV_MISSILE float -> void
: Unknown
;HapticSettings.setRecoilYawScaleCARBINE float -> void
: Unknown
;HapticSettings.setRecoilYawScaleDEFIB float -> void
: Unknown
;HapticSettings.setRecoilYawScaleDROP float -> void
: Unknown
;HapticSettings.setRecoilYawScaleKNIFE float -> void
: Unknown
;HapticSettings.setRecoilYawScaleLAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilYawScaleLMG float -> void
: Unknown
;HapticSettings.setRecoilYawScalePISTOL float -> void
: Unknown
;HapticSettings.setRecoilYawScaleRIFLE float -> void
: Unknown
;HapticSettings.setRecoilYawScaleRIFLELAUNCHER float -> void
: Unknown
;HapticSettings.setRecoilYawScaleSHOTGUN float -> void
: Unknown
;HapticSettings.setRecoilYawScaleSMG float -> void
: Unknown
;HapticSettings.setRecoilYawScaleSNIPER float -> void
: Unknown
;HapticSettings.setRecoilYawScaleTHROWN float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_AIRGUN float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_ARMORCANNON float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_COAXIALGUN float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_HELIGUN float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_HMG float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_LMG float -> void
: Unknown
;HapticSettings.setRecoilYawScaleV_MISSILE float -> void
: Unknown
;HapticSettings.setSpeedShakeScale float -> void
: Unknown
;HapticSettings.setTurnSensitivity float float float -> void
: Unknown
;HapticSettings.setTurnSensitivityAIR float float float -> void
: Unknown
;HapticSettings.setTurnSensitivityHELI float float float -> void
: Unknown
;HapticSettings.setTurnSensitivityLAND float float float -> void
: Unknown
;HapticSettings.setTurnSensitivitySEA float float float -> void
: Unknown
;HapticSettings.setTurnSensitivitySOLDIER float float float -> void
: Unknown
== heightmapcluster ==
;Heightmapcluster.addHeightmap <nowiki>std::string</nowiki> int int -> void
: Unknown
;Heightmapcluster.compileWaterMeshesIntoHeightmap -> void
: Unknown
;Heightmapcluster.create <nowiki>std::string</nowiki> -> void
: Unknown
;Heightmapcluster.importSurroundingRawHeightMap <nowiki>std::string</nowiki> -> bool
: Unknown
;Heightmapcluster.intersectCameraRay -> void
: Unknown
;Heightmapcluster.setClusterSize int -> void
: Unknown
;Heightmapcluster.setHeightmapSize int -> void
: Unknown
;Heightmapcluster.setSeaWaterLevel float -> void
: Unknown
;Heightmapcluster.smoothEdges int float float -> void
: Unknown
;Heightmapcluster.stitchEdges -> void
: Unknown
;Heightmap.loadHeightData <nowiki>std::string</nowiki> -> void
: Unknown
;Heightmap.loadMaterialData <nowiki>std::string</nowiki> -> void
: Unknown
;Heightmap.setBitResolution int -> void
: Unknown
;Heightmap.setMaterialScale int -> void
: Unknown
;Heightmap.setModified bool -> void
: Unknown
;Heightmap.setScale Vec3 -> void
: Unknown
;Heightmap.setSize int int -> void
: Unknown
;HemiMapManager.hemiLerpBias float -> float
: Unknown
;HemiMapManager.makeHemiMap unsigned long <nowiki>std::string</nowiki> Vec3 -> bool
: Unknown
;HemiMapManager.setBaseHemiMap <nowiki>std::string</nowiki> Vec3 float -> bool
: Unknown
== hudBuilder ==
;HudBuilder.addNodeAlphaShowEffect -> bool
: Unknown
;HudBuilder.addNodeBlendEffect int int -> bool
: Unknown
;HudBuilder.addNodeMoveShowEffect float int -> bool
: Unknown
;HudBuilder.addNodeVariableMoveShowEffect <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.addObjectMarkerNodeLockTextNode <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.addTransformListNode <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.createBarNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createButtonNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createCompassNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createEditNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createHoverNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createListNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createMapNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.createMiniMapNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createObjectMarkerNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createObjectSelectionNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createOccupiedNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createPictureNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createSliderNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> float -> bool
: Unknown
;HudBuilder.createSplitNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.createTextNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createTileNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createTransformListNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.createTransformNode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> int
: Unknown
;HudBuilder.deleteNode -> bool
: Unknown
;HudBuilder.newLayer -> bool
: Unknown
;HudBuilder.searchNodes <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> meme::Node*
: Unknown
;HudBuilder.setActiveObject <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setBarNodeBorder int int int -> bool
: Unknown
;HudBuilder.setBarNodeSnap int -> bool
: Unknown
;HudBuilder.setBarNodeSnapDir bool -> bool
: Unknown
;HudBuilder.setBarNodeTexture int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setBarNodeValueVariable <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setBarNodeVariableTexture int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setButtonNodeAltConCmd <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setButtonNodeConCmd <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setButtonNodeDebug bool -> bool
: Unknown
;HudBuilder.setButtonNodeFunction <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setButtonNodeMouseArea int int int -> bool
: Unknown
;HudBuilder.setButtonNodeMouseOverColor float float float -> bool
: Unknown
;HudBuilder.setButtonNodeTexture int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setCommanderPos Vec2 -> bool
: Unknown
;HudBuilder.setCommanderSize Vec2 -> bool
: Unknown
;HudBuilder.setCompassNodeBorder int int int -> bool
: Unknown
;HudBuilder.setCompassNodeOffset int -> bool
: Unknown
;HudBuilder.setCompassNodeSnapOffset int int int -> bool
: Unknown
;HudBuilder.setCompassNodeSnapTexture bool <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setCompassNodeTexture int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setCompassNodeTextureSize int int -> bool
: Unknown
;HudBuilder.setCompassNodeValueVariable <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setCompassNodeVariableTexture int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setCPFont <nowiki>std::string</nowiki> -> void
: Unknown
;HudBuilder.setCPFontColor float float float -> void
: Unknown
;HudBuilder.setEditNodeColor float float float -> bool
: Unknown
;HudBuilder.setEditNodeData int -> bool
: Unknown
;HudBuilder.setEditNodeFont <nowiki>std::string</nowiki> bool -> bool
: Unknown
;HudBuilder.setEditNodeMaxLength int -> bool
: Unknown
;HudBuilder.setEditNode<nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setHoverInMiddlePos int int -> bool
: Unknown
;HudBuilder.setHoverMaxValue float -> bool
: Unknown
;HudBuilder.setHoverWidthLength float float -> bool
: Unknown
;HudBuilder.setListNodeBackgroundColor float float float -> bool
: Unknown
;HudBuilder.setListNodeBorder int int int -> bool
: Unknown
;HudBuilder.setListNodeBorderColor float float float -> bool
: Unknown
;HudBuilder.setListNodeConCmd int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setListNodeData int -> bool
: Unknown
;HudBuilder.setListNodeFont <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setListNodeOutline bool -> bool
: Unknown
;HudBuilder.setListNodeRowSpacing int -> bool
: Unknown
;HudBuilder.setListNodeScrollbar int int -> bool
: Unknown
;HudBuilder.setListNodeScrollbarBackgroundColor float float float -> bool
: Unknown
;HudBuilder.setListNodeScrollbarColor float float float -> bool
: Unknown
;HudBuilder.setListNodeSelectColor float float float -> bool
: Unknown
;HudBuilder.setMaxiPos Vec2 -> bool
: Unknown
;HudBuilder.setMaxiSize Vec2 -> bool
: Unknown
;HudBuilder.setMiniPos Vec2 -> bool
: Unknown
;HudBuilder.setMiniSize Vec2 -> bool
: Unknown
;HudBuilder.setModifyer float -> void
: Unknown
;HudBuilder.setNodeAlphaVariable <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setNodeColor float float float -> bool
: Unknown
;HudBuilder.setNodeInTime float -> bool
: Unknown
;HudBuilder.setNodeLogicShowVariable <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setNodeOffset int int -> bool
: Unknown
;HudBuilder.setNodeOutTime float -> bool
: Unknown
;HudBuilder.setNodePos int int -> bool
: Unknown
;HudBuilder.setNodePosVariable int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setNodeRGBVariables <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setNodeShowVariable <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setNodeSize int int -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeLockOnType int -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeLockText bool <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeLockTextOffset int int -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeObjects int -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeTexture int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeTextureSize int int int -> bool
: Unknown
;HudBuilder.setObjectMarkerNodeWeapon int -> bool
: Unknown
;HudBuilder.setObjectSelectionNodePointerSize int int -> bool
: Unknown
;HudBuilder.setOccupiedNodeData int -> bool
: Unknown
;HudBuilder.setOccupiedNodePosVariable int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setPictureNodeAlphaMask <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setPictureNodeBorder int int int -> bool
: Unknown
;HudBuilder.setPictureNodeBorderColor float float float -> bool
: Unknown
;HudBuilder.setPictureNodeCenterPoint int int -> bool
: Unknown
;HudBuilder.setPictureNodeRotateVariable <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setPictureNodeRotation int -> bool
: Unknown
;HudBuilder.setPictureNodeTexture <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setPictureNodeVariableTexture <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setSliderNodeChild <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setSliderNodeData <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setTextNodeOutLine <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setTextNodeOutLineOffset float float -> bool
: Unknown
;HudBuilder.setTextNode<nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setTextNode<nowiki>std::string</nowiki>Variable <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setTextNodeStyle <nowiki>std::string</nowiki> int -> bool
: Unknown
;HudBuilder.setTileNodeOptions int int int -> bool
: Unknown
;HudBuilder.setTranformListNodeOffset int int -> bool
: Unknown
;HudBuilder.setTranformListNodePosVariable int <nowiki>std::string</nowiki> -> bool
: Unknown
;HudBuilder.setZoomIcons bool -> bool
: Unknown
;HudItems.setBool <nowiki>std::string</nowiki> bool -> void
: Unknown
;HudItems.setFloat <nowiki>std::string</nowiki> float -> void
: Unknown
;HudItems.set<nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;HudManager.addFavouriteServer bool -> void
: Unknown
;HudManager.addTextureAtlas <nowiki>std::string</nowiki> -> void
: Unknown
;HudManager.enableSayAllChatBox bool -> void
: Unknown
;HudManager.enableSaySquadChatBox bool -> void
: Unknown
;HudManager.enableSayTeamChatBox bool -> void
: Unknown
;HudManager.refresh -> bool
: Unknown
;HudManager.setCommMousePos int int -> bool
: Unknown
;HudManager.setCommMouseSensitivity int -> bool
: Unknown
;HudManager.setCommPos int int -> bool
: Unknown
;HudManager.setCommSize int int -> bool
: Unknown
;HudManager.setDisplayControlpoints bool -> void
: Unknown
;HudManager.setDisplayTickets bool -> void
: Unknown
;HudManager.setDone bool -> void
: Unknown
;HudManager.setMapStatic bool -> void
: Unknown
;HudManager.setMaximumNrOfCPs int -> void
: Unknown
;HudManager.setMouseTextureArtillery <nowiki>std::string</nowiki> -> bool
: Unknown
;HudManager.setMouseTextureCancel <nowiki>std::string</nowiki> -> bool
: Unknown
;HudManager.setMouseTextureEmpty <nowiki>std::string</nowiki> -> bool
: Unknown
;HudManager.setMouseTextureFull <nowiki>std::string</nowiki> -> bool
: Unknown
;HudManager.setMouseTextureSupply <nowiki>std::string</nowiki> -> bool
: Unknown
;HudManager.setMouseTextureUAV <nowiki>std::string</nowiki> -> bool
: Unknown
;HudManager.setPaint bool -> void
: Unknown
;HudManager.setPointerMouseSensitivity int -> bool
: Unknown
;HudManager.setPointerSize int int -> bool
: Unknown
;HudManager.setSpottedAngle float -> void
: Unknown
;HudManager.setSpottedMenuPos int int -> bool
: Unknown
;HudManager.setSpottedMenuSize int int -> bool
: Unknown
;HudManager.setSpottedMousePos int int -> bool
: Unknown
;HudManager.setTargetTop float -> void
: Unknown
;HudManager.setUpdate bool -> void
: Unknown
;IngameHelp.showIngameHelp <nowiki>std::string</nowiki> float -> void
: Unknown
;InputDevices.setAxisScale InputDeviceFlags InputDeviceAxes float -> bool
: Unknown
;InputDevices.setInvertAxis InputDeviceFlags InputDeviceAxes bool -> bool
: Unknown
;ItemSelection.setReverseItems bool -> void
: Unknown
;LevelsList.setVoteMapShow int -> void
: Unknown
;LevelsList.singleClick int -> void
: Unknown
;LightManager.ambientColor Vec3 -> Vec3
: Unknown
== lightManager ==
;LightManager.defaultEffectLightAffectionFactor float -> float
: Unknown
;LightManager.dynamicPointColor Vec3 -> Vec3
: Unknown
;LightManager.dynamicPointColorHigh Vec3 -> Vec3
: Unknown
;LightManager.dynamicPointColorLow Vec3 -> Vec3
: Unknown
;LightManager.dynamicPointScale float -> float
: Unknown
;LightManager.effectShadowColor Vec3 -> Vec3
: Unknown
;LightManager.effectSunColor Vec3 -> Vec3
: Unknown
;LightManager.enableStencilCullerReset bool -> bool
: Unknown
;LightManager.enableSun bool -> bool
: Unknown
;LightManager.groundHemi <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;LightManager.hemiLerpBias float -> float
: Unknown
;LightManager.init -> void
: Unknown
;LightManager.lightCullDistance float -> float
	:Used in sky.con
	:Raises the default limit of the culling of lightsources from a distance. Example: lightManager.lightCullDistance 2000 which extends the rendering of the lightsource.
;LightManager.lightMapAmbientAlphaCutoffRange Vec2 -> Vec2
: Unknown
;LightManager.maxLightsPerBundledMesh int -> int
: Unknown
;LightManager.maxLightsPerSkinnedMesh int -> int
: Unknown
;LightManager.maxLightsPerStaticMesh int -> int
: Unknown
;LightManager.maxLightsPerTerrainPatch int -> int
: Unknown
;LightManager.maxLodForMaterialBatching int -> int
: Unknown
;LightManager.singlePointColor Vec3 -> Vec3
: Unknown
;LightManager.singlePointColorHigh Vec3 -> Vec3
: Unknown
;LightManager.singlePointColorLow Vec3 -> Vec3
: Unknown
;LightManager.skinnedMeshShaderLodDistance float -> float
: Unknown
;LightManager.skyColor Vec3 -> Vec3
: Unknown
;LightManager.skyColorHigh Vec3 -> Vec3
: Unknown
;LightManager.skyColorLow Vec3 -> Vec3
: Unknown
;LightManager.staticLightBlendingTime double -> double
: Unknown
;LightManager.staticSkyColor Vec3 -> Vec3
: Unknown
;LightManager.staticSkyColorHigh Vec3 -> Vec3
: Unknown
;LightManager.staticSkyColorLow Vec3 -> Vec3
: Unknown
;LightManager.staticSpecularColor Vec3 -> Vec3
: Unknown
;LightManager.staticSunColor Vec3 -> Vec3
: Unknown
;LightManager.sunColor Vec3 -> Vec3
: Unknown
;LightManager.sunColorHigh Vec3 -> Vec3
: Unknown
;LightManager.sunColorLow Vec3 -> Vec3
: Unknown
;LightManager.sunDirection Vec3 -> Vec3
: Unknown
;LightManager.sunSpecColor Vec3 -> Vec3
: Unknown
;LightManager.sunSpecColorHigh Vec3 -> Vec3
: Unknown
;LightManager.sunSpecColorLow Vec3 -> Vec3
: Unknown
;LightManager.treeAmbientColor Vec3 -> Vec3
: Unknown
;LightManager.treeSkyColor Vec3 -> Vec3
: Unknown
;LightManager.treeSunColor Vec3 -> Vec3
: Unknown
== localPlayer ==
;LocalPlayer.commanderSelectDelay float -> float
: Unknown
;LocalPlayer.firstCommanderSelectDelay float -> float
: Unknown
== localProfile ==
;LocalProfile.addDemoBookmark <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Adds a bookmark to a battlerecorder demo
;LocalProfile.save -> bool
: Unknown
;LocalProfile.setEmail <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Sets or shows the email adress of the current profile
;LocalProfile.setGamespyNick <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Sets or shows the gamespy login name of the current profile
;LocalProfile.setName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Sets or shows the name for the current profile
;LocalProfile.setNick <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Sets or shows the nickname for the current profile
;LocalProfile.setNumTimesLoggedIn int -> int
: Unknown
;LocalProfile.setPassword <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Sets or shows the password for the current profile
;LocalProfile.setTotalPlayedTime float -> void
: Unknown
== maplist ==
;Maplist.append <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> int -> bool
: Unknown
;Maplist.clear -> bool
: Unknown
;Maplist.configFile <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Maplist.currentMap -> int
: Unknown
;Maplist.insert int <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;Maplist.list -> <nowiki>std::string</nowiki>
: Unknown
;Maplist.load -> bool
: Unknown
;Maplist.mapCount -> int
: Unknown
;Maplist.remove int -> int
: Unknown
;Maplist.save -> bool
: Unknown
== material ==
;Material.active unsigned int -> unsigned int
: Unknown
;Material.damageLoss float -> float
: Unknown
;Material.elasticity float -> float
: Unknown
;Material.friction float -> float
: Unknown
;Material.hasWaterPhysics bool -> bool
: Unknown
;Material.isBarbwire bool -> bool
: Unknown
;Material.isOneSided bool -> bool
: Unknown
;Material.isSeeThrough bool -> bool
: Unknown
;MaterialManager.attMaterial unsigned int -> void
: Unknown
;MaterialManager.createCell unsigned int unsigned int -> void
: Unknown
;MaterialManager.damageMod float -> float
: Unknown
;MaterialManager.defMaterial unsigned int -> void
: Unknown
;MaterialManager.setDecalTemplate unsigned int IObjectTemplate_ptrproxy -> void
: Unknown
;MaterialManager.setEffectTemplate unsigned int IObjectTemplate_ptrproxy -> void
: Unknown
;MaterialManager.setSoundTemplate unsigned int IObjectTemplate_ptrproxy -> void
: Unknown
;Material.maxDamageLoss float -> float
: Unknown
;Material.minDamageLoss float -> float
: Unknown
;Material.name <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Material.overrideNeverPenetrate bool -> bool
: Unknown
;Material.penetrationDeviation float -> float
: Unknown
;Material.projectileCollisionHardness float -> float
: Unknown
;Material.resistance float -> float
: Unknown
;Material.type int -> int
: Unknown
== menuTeamManager ==
;MenuTeamManager.addKit <nowiki>std::string</nowiki> -> void
: Unknown
;MenuTeamManager.addTeam <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;MenuTeamManager.addWeapon <nowiki>std::string</nowiki> int int -> void
: Unknown
;MenuTeamManager.setTeamId int -> void
: Unknown
== minimap ==
;Minimap.setCommanderOffset Vec2 -> void
: Unknown
;Minimap.setCurrOrderList int -> void
: Unknown
;Minimap.setDestinationBlend int -> void
: Unknown
;Minimap.setFilterColor float float float -> void
: Unknown
;Minimap.setFullScreenZoom int -> void
: Unknown
;Minimap.setPaintAllKits -> void
: Unknown
;Minimap.setPaintAllVehicles -> void
: Unknown
;Minimap.setPaintKit int -> void
: Unknown
;Minimap.setPaintVehicle int -> void
: Unknown
;Minimap.setSourceBlend int -> void
: Unknown
;Minimap.setZoom -> void
: Unknown
;Minimap.toggleShowKits -> void
: Unknown
== nametags ==
;Nametags.createBar NametagItemIDs int int -> void
: Unknown
;Nametags.createIcon NametagItemIDs -> void
: Unknown
;Nametags.deathFadeOutTime float -> float
: Unknown
;Nametags.deployableDistance double -> double
: Unknown
;Nametags.enemyDotLimit float -> float
: Unknown
;Nametags.enemyTagDelayTime double -> double
: Unknown
;Nametags.enemyTagFadeInTime double -> double
: Unknown
;Nametags.enemyTagFadeOutTime double -> double
: Unknown
;Nametags.getCullDistance TagType -> Vec2
: Unknown
;Nametags.manDownFadeOutTime float -> float
: Unknown
;Nametags.maxCallDistance float -> float
: Unknown
;Nametags.maxFriendlyDistance float -> float
: Unknown
;Nametags.setCullDistance TagType Vec2 -> void
: Unknown
;Nametags.setTexture int <nowiki>std::string</nowiki> int -> void
: Unknown
;Nametags.vehicleNametagOffset float -> float
: Unknown
;Nametags.vehicleNametagOffsetFactor float -> float
: Unknown
== networkableInfo ==
;NetworkableInfo.createNewInfo <nowiki>std::string</nowiki> -> void
	:Used in objects\common\Networkables.con
	:Creates a custom NetworkableInfo. Use with NetworkableInfo.setPredictionMode etc
;NetworkableInfo.deleteInfo <nowiki>std::string</nowiki> -> void
: Unknown
;NetworkableInfo.setBasePriority float -> void
: Unknown
;NetworkableInfo.setForceNetworkableId bool -> void
: Unknown
;NetworkableInfo.setIsUnique bool -> void
: Unknown
;NetworkableInfo.setPredictionMode PredictionMode -> void
	:
	:NetworkableInfo.setPredictionMode
;Network.globalPredictionMode PredictionMode -> PredictionMode
: Unknown
== object ==
;Object.absolutePosition Vec3 -> Vec3
: Unknown
;Object.absolutePositionSecondary Vec3 -> Vec3
: Unknown
;Object.absoluteTransformation Mat4 -> Mat4
: Unknown
;Object.active world::IObject_ptrproxy -> world::IObject_ptrproxy
: Unknown
;Object.addAbsolutePoint -> void
: Unknown
;Object.attenuationRange1 float -> float
: Unknown
;Object.attenuationRange2 float -> float
: Unknown
;Object.color Vec3 -> Vec3
: Unknown
;Object.coneAngle1 float -> float
: Unknown
;Object.coneAngle2 float -> float
: Unknown
;Object.create world::IObjectTemplate_ptrproxy Vec3 Vec3 -> world::IObject_ptrproxy
: Unknown
;Object.delete world::IObject_ptrproxy -> void
: Unknown
;Object.deleteAll -> <nowiki>std::string</nowiki>
: Unknown
;Object.direction Vec3 -> Vec3
: Unknown
;Object.disableChildren bool -> bool
: Unknown
;ObjectDrawer.collectPlanesDistance float -> float
: Unknown
;ObjectDrawer.drawDebugPlanes bool -> bool
: Unknown
;ObjectDrawer.faceForwardThreshold float -> float
: Unknown
;ObjectDrawer.showCullStats bool -> bool
: Unknown
;ObjectDrawer.useExactTest bool -> bool
: Unknown
;ObjectDrawer.useOcclusion bool -> bool
: Unknown
;Object.forceStart world::IObject_ptrproxy -> void
: Unknown
;Object.forceStop world::IObject_ptrproxy -> void
: Unknown
;Object.fov float -> float
: Unknown
;Object.geometry.color Vec4 -> Vec4
: Unknown
;Object.geometry.GenerateLightmapForThisInstance bool -> bool
: Unknown
;Object.geometry.loadMesh <nowiki>std::string</nowiki> -> void
: Unknown
;Object.geometry.subGeometry int -> int
: Unknown
;Object.geometry.subGeometryCount -> int
: Unknown
;Object.geometry.technique <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Object.geometry.template -> IGeometryTemplate*
: Unknown
;Object.getControlPointId -> int
: Unknown
;Object.getGroundPos Vec3 -> Vec3
: Unknown
;Object.getLightSourceMask -> int
: Unknown
;Object.getVisibleTeam -> int
: Unknown
;Object.group int -> int
: Unknown
;Object.hasCollision bool -> bool
: Unknown
;Object.hasUpdate bool -> bool
: Unknown
;Object.HDRIntensity float -> float
: Unknown
;Object.info world::IObject_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;Object.initGrid Vec2 Vec2 int -> void
: Unknown
;Object.isInGrid bool -> bool
: Unknown
;Object.isOvergrowth bool -> bool
: Unknown
;Object.isSaveable bool -> bool
: Unknown
;Object.isVisible bool -> bool
: Unknown
;Object.layer int -> int
: Unknown
;Object.list -> <nowiki>std::string</nowiki>
: Unknown
;Object.listObjectsOfTemplate world::IObjectTemplate_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;Object.loadAll <nowiki>std::string</nowiki> -> bool
: Unknown
;ObjectManager.drawStats int -> int
: Unknown
;Object.name <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Object.notInAI bool -> bool
: Unknown
;Object.printScript world::IObject_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;Object.rotation Vec3 -> Vec3
: Unknown
;Object.rotationSecondary Vec3 -> Vec3
: Unknown
;Object.saveAll <nowiki>std::string</nowiki> -> bool
: Unknown
;Object.scale Vec3 -> Vec3
: Unknown
;Object.setActive bool -> void
: Unknown
;Object.setAsSkyLight -> void
: Unknown
;Object.setControlPointId int -> void
: Unknown
;Object.setIsDisabledRecursive bool -> void
: Unknown
;Object.setIsInTweakModeRecursive bool -> void
: Unknown
;Object.setIsSaveableRecursive bool -> void
: Unknown
;Object.setIsVisibleRecursive bool -> void
: Unknown
;Object.setLightSourceMask int -> void
: Unknown
;Object.setObjectToGround world::IObject_ptrproxy -> Vec3
: Unknown
;Object.setTeam int -> void
: Unknown
;Object.setVisibleTeam int -> void
: Unknown
;Object.spawnOffset Vec3 -> Vec3
: Unknown
;Object.start world::IObject_ptrproxy -> void
: Unknown
;Object.stop world::IObject_ptrproxy -> void
: Unknown
;Object.team int -> int
: Unknown
;Object.template -> const IObjectTemplate*
: Unknown
== objectTemplate ==
;ObjectTemplate.3dMapIcon int -> int
	:Used in GenericFirearms (Mine etc) .tweak
	:"The image number sequence referenced in \menu\nametag\Objects.dds. Use the vBF2 file and count the images. 9 is the mine icon. Using this system
	: you could have custom 3D Mine Icons as long as they are the same size as the original."
;ObjectTemplate.ability.hasAmmoAbility bool -> bool
: Unknown
;ObjectTemplate.ability.hasHealingAbility bool -> bool
: Unknown
;ObjectTemplate.ability.hasRepairingAbility bool -> bool
: Unknown
;ObjectTemplate.ability.radarRadius int -> int
: Unknown
;ObjectTemplate.abilityHud.ammoSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.abilityHud.healingSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.abilityHud.repairingSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.abilityInVehicleMaterial int -> int
: Unknown
;ObjectTemplate.abilityInVehicleRadius float -> float
: Unknown
;ObjectTemplate.abilityInVehicleStrength float -> float
: Unknown
;ObjectTemplate.abilityRestoreRate float -> float
: Unknown
;ObjectTemplate.acceleration Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.acceleration float -> float
: Unknown
;ObjectTemplate.accumulate bool -> bool
: Unknown
;ObjectTemplate.active world::IObjectTemplate_ptrproxy -> world::IObjectTemplate_ptrproxy
: Unknown
;ObjectTemplate.activeSafe <nowiki>std::string</nowiki> world::IObjectTemplate_ptrproxy -> void
: Unknown
;ObjectTemplate.addAmmoType int int float -> void
: Unknown
;ObjectTemplate.addChild bool -> bool
: Unknown
;ObjectTemplate.addEmitterSpeed bool -> bool
: Unknown
;ObjectTemplate.addKitVehicleMod <nowiki>std::string</nowiki> int -> void
: Unknown
;ObjectTemplate.addLinePoint Vec2 -> void
: Unknown
;ObjectTemplate.addPcoPosId int -> void
: Unknown
;ObjectTemplate.addTargetObjectTypeToWatch int -> void
: Unknown
;ObjectTemplate.addTemplate <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.addToCollisionGroup U32 -> void
: Unknown
;ObjectTemplate.addToProjectileList bool -> bool
: Unknown
;ObjectTemplate.addTriggerableTarget <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.addVehicleType <nowiki>std::string</nowiki> int float -> void
: Unknown
;ObjectTemplate.addVehicleType VehicleCategory -> void
: Unknown
;ObjectTemplate.addWorkOnMaterial int -> void
: Unknown
;ObjectTemplate.affectingType int -> int
: Unknown
;ObjectTemplate.affectLightmappedObjects bool -> bool
: Unknown
;ObjectTemplate.AgeScaleFactorFromAcceleration Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorFromAltitude Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorFromEngine Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorFromRotationalSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorFromSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorFromSpeedInDof Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorRange Vec2 -> Vec2
: Unknown
;ObjectTemplate.AgeScaleFactorUsed bool -> bool
: Unknown
;ObjectTemplate.airFlowAffect float -> float
: Unknown
;ObjectTemplate.airFriction float -> float
: Unknown
;ObjectTemplate.airResistance float -> float
: Unknown
;ObjectTemplate.airResistanceGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.aiTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.alignEffectTransformation bool -> bool
: Unknown
;ObjectTemplate.alignRotationToSpeed bool -> bool
: Unknown
;ObjectTemplate.allowDucking bool -> bool
: Unknown
;ObjectTemplate.allowInsideDynamicLights bool -> bool
: Unknown
;ObjectTemplate.allowInsideStaticSun bool -> bool
: Unknown
;ObjectTemplate.alphaCull float -> float
: Unknown
;ObjectTemplate.alphaIntensityFromAcceleration Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityFromAltitude Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityFromEngine Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityFromRotationalSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityFromSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityFromSpeedInDof Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityRange Vec2 -> Vec2
: Unknown
;ObjectTemplate.alphaIntensityUsed bool -> bool
: Unknown
;ObjectTemplate.alphaOverTime OverTimeDistribution -> OverTimeDistribution
: Unknown
;ObjectTemplate.alternateTemplate0 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.alternateTemplate1 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.alternateTemplate2 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.alternateTemplate3 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.alternateTemplate4 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.altSoldierExitPosition Vec3 -> Vec3
: Unknown
;ObjectTemplate.ammo.abilityCost float -> float
: Unknown
;ObjectTemplate.ammo.abilityDrain float -> float
: Unknown
;ObjectTemplate.ammo.abilityMaterial int -> int
: Unknown
;ObjectTemplate.ammo.abilityRadius float -> float
: Unknown
;ObjectTemplate.ammo.abilityStrength float -> float
: Unknown
;ObjectTemplate.ammo.ammoType int -> int
: Unknown
;ObjectTemplate.ammo.autoReload bool -> bool
: Unknown
;ObjectTemplate.ammo.changeMagAt float -> float
: Unknown
;ObjectTemplate.ammo.firstShotExtraTime float -> float
: Unknown
;ObjectTemplate.ammo.instantReloadOnEnable bool -> bool
: Unknown
;ObjectTemplate.ammo.lastShotExtraTime float -> float
: Unknown
;ObjectTemplate.ammo.magLinkWeapon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: "Weapons, Vehicles .tweak"
:Allows two weapons to share the same amount of bullets and magazines. Enter the weapon name to maglink. The weapon that's referenced must also have the same code. Weapons with fire selector code causes it to not work properly (citation needed)
;ObjectTemplate.ammo.magSize int -> int
:Weapons .tweak
:"Number of bullets in a magazine. -1 for Infinity, maximum non-infinity allowed is 1023, any more will cause a crash. Bug: In the Battlerecorder, it doesn't pickup a gun that fires for 10 seconds on with 1000 bullets for some reason. Tested with the L4Bren on Auto."
;ObjectTemplate.ammo.minimumTimeUntilReload float -> float
: Unknown
;ObjectTemplate.ammo.nrOfMags int -> int
:Number of magazines allowed for a weapon.
;ObjectTemplate.ammo.onlyActiveWhileFiring bool -> bool
:Prevents the Medibag and Ammo Bag from being thrown when firing. Used in PR's Medikit and Repair Bag
;ObjectTemplate.ammo.reloadAmount int -> int
: Unknown
;ObjectTemplate.ammo.reloadTime float -> float
:Time in seconds of how long it takes to reload. Must be the same number as the reload animation time from AnimationSystem1p.inc to sync properly.
;ObjectTemplate.ammo.reloadWithoutPlayer bool -> bool
:"If enabled, weapon will autoreload regardless client settings for autoreload. 1(Enabled), 0(Disabled)"
;ObjectTemplate.ammo.replenishingType ReplenishingType -> ReplenishingType
: Unknown
;ObjectTemplate.ammo.toggleWhenNoAmmo bool -> bool
:Weapons .tweak
:"When no ammo, switch to previous selected weapon."
;ObjectTemplate.ammoStorageSize float -> float
: Unknown
;ObjectTemplate.anchor Vec3 -> Vec3
: Unknown
;ObjectTemplate.anchorOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.animatedUVRotation int -> int
: Unknown
;ObjectTemplate.animatedUVRotationIndex int -> int
: Unknown
;ObjectTemplate.animatedUVRotationRadius float -> float
: Unknown
;ObjectTemplate.animatedUVRotationReverse bool -> bool
: Unknown
;ObjectTemplate.animatedUVRotationScale Vec2 -> Vec2
: Unknown
;ObjectTemplate.animatedUVTranslation bool -> bool
: Unknown
;ObjectTemplate.animatedUVTranslationIndex int -> int
: Unknown
;ObjectTemplate.animatedUVTranslationMax Vec2 -> Vec2
: Unknown
;ObjectTemplate.animatedUVTranslationReverse bool -> bool
: Unknown
;ObjectTemplate.animatedUVTranslationSize Vec2 -> Vec2
: Unknown
;ObjectTemplate.animatedUVTranslationSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.animation.animateOnZoom bool -> bool
: Unknown
;ObjectTemplate.animation.loopingFire float -> float
: Unknown
;ObjectTemplate.animation.shiftDelay float -> float
: Unknown
;ObjectTemplate.animation.useShiftAnimation bool -> bool
: Unknown
;ObjectTemplate.animationEnable bool -> bool
: Unknown
;ObjectTemplate.animationFrameCount int -> int
: Unknown
;ObjectTemplate.animationFrameCountX int -> int
: Unknown
;ObjectTemplate.animationFrameHeight int -> int
: Unknown
;ObjectTemplate.animationFrameWidth int -> int
: Unknown
;ObjectTemplate.animationPlayOnce bool -> bool
: Unknown
;ObjectTemplate.animationRandomizedStartFrame bool -> bool
: Unknown
;ObjectTemplate.animationSpeed float -> float
: Unknown
;ObjectTemplate.animationSystem1P <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.animationSystem3P <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.antenna.accelerationFactor float -> float
: Unknown
;ObjectTemplate.antenna.damping float -> float
: Unknown
;ObjectTemplate.antenna.maxSwayAngle Vec2 -> Vec2
: Unknown
;ObjectTemplate.antenna.skeleton <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.antenna.speedFactor float -> float
: Unknown
;ObjectTemplate.antenna.stiffness float -> float
: Unknown
;ObjectTemplate.areaValueTeam1 U32 -> U32
: Unknown
;ObjectTemplate.areaValueTeam2 U32 -> U32
: Unknown
;ObjectTemplate.armingDelay float -> float
:Weapons .tweak
:Delay in seconds until the collision event is active. Used in the tripflares which has a 15 second delay before passing through it will trigger the collision. Also could just be the seconds before the grenade explodes though not sure
;ObjectTemplate.armor.addArmorEffect int <nowiki>std::string</nowiki> Vec3 -> void
: Unknown
;ObjectTemplate.armor.addArmorEffectSpectacular int <nowiki>std::string</nowiki> Vec3 -> void
: Unknown
;ObjectTemplate.armor.addWreckArmorEffect int <nowiki>std::string</nowiki> Vec3 -> void
: Unknown
;ObjectTemplate.armor.alignLastEffectToHitDirection bool -> bool
: Unknown
;ObjectTemplate.armor.angleMod float -> float
: Unknown
;ObjectTemplate.armor.attackDamage float -> float
: Unknown
;ObjectTemplate.armor.canBeDestroyed bool -> bool
: Unknown
;ObjectTemplate.armor.canBeRepairedWhenWreck bool -> bool
:"Vehicles .tweak, Weapons .tweak"
:"Used in the AA Ship Boats. Basically, when it's a wreck, it can be repaired back to life."
;ObjectTemplate.armor.criticalDamage float -> float
: Unknown
;ObjectTemplate.armor.deepWaterDamageDelay float -> float
: Unknown
;ObjectTemplate.armor.deepWaterLevel float -> float
: Unknown
;ObjectTemplate.armor.defaultMaterial int -> int
: Unknown
;ObjectTemplate.armor.destroyOnSpectacularDeath bool -> bool
: Unknown
;ObjectTemplate.armor.explosionDamage float -> float
: Unknown
;ObjectTemplate.armor.explosionForce float -> float
: Unknown
;ObjectTemplate.armor.explosionForceMax float -> float
: Unknown
;ObjectTemplate.armor.explosionForceMod float -> float
: Unknown
;ObjectTemplate.armor.explosionMaterial int -> int
: Unknown
;ObjectTemplate.armor.explosionRadius float -> float
: Unknown
;ObjectTemplate.armor.hideChildrenOnSpectacularDeath bool -> bool
: Unknown
;ObjectTemplate.armor.hitPoints float -> float
:Vehicles .tweak
:The health of the vehicle. 0 = Dead. 
;ObjectTemplate.armor.hpLostWhileCriticalDamage float -> float
: Unknown
;ObjectTemplate.armor.hpLostWhileInDeepWater float -> float
: Unknown
;ObjectTemplate.armor.hpLostWhileInWater float -> float
: Unknown
;ObjectTemplate.armor.hpLostWhileUpSideDown float -> float
: Unknown
;ObjectTemplate.armor.maxHitPoints float -> float
: Unknown
;ObjectTemplate.armor.showDamageAsDirt float -> float
: Unknown
;ObjectTemplate.armor.speedMod float -> float
: Unknown
;ObjectTemplate.armor.timeToStayAfterDestroyed float -> float
:Vehicles .tweak
:"Interesting code. If set to PR's Jets and Helis, when they explode from wreck, the non-flaming wreck model stays though it shows in the minimap as an occupied vehicle."
;ObjectTemplate.armor.timeToStayAsWreck float -> float
: Unknown
;ObjectTemplate.armor.useMMOnDeath bool -> bool
:Use the Material Manager on Death. Not too sure about this one
;ObjectTemplate.armor.waterDamageDelay float -> float
: Unknown
;ObjectTemplate.armor.waterLevel float -> float
: Unknown
;ObjectTemplate.armor.wreckDelay float -> float
: Unknown
;ObjectTemplate.armor.wreckExplosionDamage float -> float
: Unknown
;ObjectTemplate.armor.wreckExplosionForce float -> float
: Unknown
;ObjectTemplate.armor.wreckExplosionForceMax float -> float
: Unknown
;ObjectTemplate.armor.wreckExplosionForceMod float -> float
: Unknown
;ObjectTemplate.armor.wreckExplosionMaterial int -> int
: Unknown
;ObjectTemplate.armor.wreckExplosionRadius float -> float
: Unknown
;ObjectTemplate.armor.wreckHitPoints float -> float
: Unknown
;ObjectTemplate.artPos bool -> bool
: Unknown
;ObjectTemplate.attachClimberRadius float -> float
: Unknown
;ObjectTemplate.attachToEventObject bool -> bool
: Unknown
;ObjectTemplate.attackSpeed float -> float
: Unknown
;ObjectTemplate.attenuationRange1 float -> float
:Used in .tweak Effect Files for Lightsource Templates
:"How wide you want the lightsource effect to be, used with ObjectTemplate.isDynamic 1. Range1 = X, which is the horizontal range. Max is 100, more than that will trigger an error message"
;ObjectTemplate.attenuationRange2 float -> float
:Used in .tweak Effect Files for Lightsource Templates
:"The height at which the lightsource will begin to drop. Range2 = Y, which is the vertical range. Max is 100 like above. To know the difference, set one to 50 and one to 100 and count the number of seconds the lightsource effect will last and compare."
;ObjectTemplate.audio.newStyleAudio bool -> bool
: Unknown
;ObjectTemplate.audio.transformationRelativeRoot bool -> bool
: Unknown
;ObjectTemplate.audioReset -> void
: Unknown
;ObjectTemplate.automaticPitchStabilization bool -> bool
: Unknown
;ObjectTemplate.automaticReset bool -> bool
: Unknown
;ObjectTemplate.automaticYawStabilization bool -> bool
: Unknown
;ObjectTemplate.autoUseAbility int -> int
: Unknown
;ObjectTemplate.averageTimeBetweenTests float -> float
: Unknown
;ObjectTemplate.awakeTime float -> float
: Unknown
;ObjectTemplate.blendMode <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.blockInputOnRotBundle <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.blurryVisionHoldTime float -> float
: Unknown
;ObjectTemplate.blurryVisionTime float -> float
: Unknown
;ObjectTemplate.boneName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.bounceDamping float -> float
: Unknown
;ObjectTemplate.bounceLength float -> float
: Unknown
;ObjectTemplate.bounceSensitivity float -> float
: Unknown
;ObjectTemplate.bounceStrength float -> float
: Unknown
;ObjectTemplate.boundingRadiusModifierWhenOccupied float -> float
: Unknown
;ObjectTemplate.cameraId int -> int
: Unknown
;ObjectTemplate.cameraShakeMaxSpeed float -> float
: Unknown
;ObjectTemplate.cameraShakeSensitivity float -> float
: Unknown
;ObjectTemplate.cameraShakeStartSpeed float -> float
: Unknown
;ObjectTemplate.cameraSwayDofMax float -> float
: Unknown
;ObjectTemplate.cameraSwayDofMin float -> float
: Unknown
;ObjectTemplate.cameraSwayRightMax float -> float
: Unknown
;ObjectTemplate.cameraSwayRightMin float -> float
: Unknown
;ObjectTemplate.cameraSwayRodLength float -> float
: Unknown
;ObjectTemplate.cameraSwaySensitivity float -> float
: Unknown
;ObjectTemplate.cameraSwaySpringDamping float -> float
: Unknown
;ObjectTemplate.cameraSwaySpringStrength float -> float
: Unknown
;ObjectTemplate.canFireGuiIndex int -> int
: Unknown
;ObjectTemplate.cannotFireGuiIndex int -> int
: Unknown
;ObjectTemplate.cannotFireTimer float -> float
: Unknown
;ObjectTemplate.canPickup bool -> bool
:Weapons
:"Allows explosives to be picked up using the wrench/repair object, example: at_mine"
;ObjectTemplate.canReverse bool -> bool
: Unknown
;ObjectTemplate.capMaxSpeed bool -> bool
: Unknown
;ObjectTemplate.castsDynamicShadow bool -> bool
:"Vehicles, Weapons and Soldiers"
:Enables the rendering of shadows.
;ObjectTemplate.castsStaticShadow bool -> bool
: Unknown
;ObjectTemplate.centerOfCollisionOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.centerOfMassOffset Vec3 -> Vec3
To offset the center of mass using 0/0/0 - X/Y/Z. Setting it to X/0.5/Z will make a Logistics Truck survive a direct ram to a Van while setting to 0 makes the truck crash. Tested while holding shift.
;ObjectTemplate.chance float -> float
:AmbientObjects.con
:"Chance that the triggerable effect may play when the player steps inside the radius. 1 means it will always play, while 0 means it will never play."
;ObjectTemplate.changeLodAt float -> float
: Unknown
;ObjectTemplate.chaseAngle float -> float
: Unknown
;ObjectTemplate.chaseDistance float -> float
: Unknown
;ObjectTemplate.chaseOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.clearTemplateList -> void
: Unknown
;ObjectTemplate.clientHitDetection bool -> bool
: Unknown
;ObjectTemplate.climbableAngle float -> float
: Unknown
;ObjectTemplate.climbersAttachForce float -> float
: Unknown
;ObjectTemplate.climbingSpeed float -> float
: Unknown
;ObjectTemplate.clockwise bool -> bool
: Unknown
;ObjectTemplate.cockpitLod int -> int
: Unknown
;ObjectTemplate.cockpitLod U32 -> U32
: Unknown
;ObjectTemplate.cockpitSubGeom int -> int
: Unknown
;ObjectTemplate.cockpitSubGeom U32 -> U32
: Unknown
;ObjectTemplate.collision.bouncing bool -> bool
: Unknown
;ObjectTemplate.collision.hasCollisionEffect bool -> bool
: Unknown
;ObjectTemplate.collision.maxStickAngle float -> float
: Unknown
;ObjectTemplate.collision.replenishingStrength float -> float
: Unknown
;ObjectTemplate.collision.replenishingType ReplenishingType -> ReplenishingType
: Unknown
;ObjectTemplate.collision.restoreHP float -> float
: Unknown
;ObjectTemplate.collision.resurrectDamage float -> float
: Unknown
;ObjectTemplate.collision.stickToStaticObjects bool -> bool
: Unknown
;ObjectTemplate.collision.stickToTerrain bool -> bool
: Unknown
;ObjectTemplate.collision.stickToVehicles bool -> bool
: Unknown
;ObjectTemplate.collisionEffectName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.collisionEnable bool -> bool
: Unknown
;ObjectTemplate.collisionGroups U32 -> U32
: Unknown
;ObjectTemplate.collisionMesh <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.collisionMesh <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.collisionPart int -> int
: Unknown
;ObjectTemplate.collisionSpeedAlongNormal float -> float
: Unknown
;ObjectTemplate.collisionSpeedAlongPlane float -> float
: Unknown
;ObjectTemplate.collisionStartRadius float -> float
: Unknown
;ObjectTemplate.color Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.color Vec3ColorFloat -> Vec3ColorFloat
: Unknown
;ObjectTemplate.color1 Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.color2 Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.colorBlendGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.coneAngle1 float -> float
: Unknown
;ObjectTemplate.coneAngle2 float -> float
: Unknown
;ObjectTemplate.coneDirection Vec3 -> Vec3
: Unknown
;ObjectTemplate.coneInnerAngle float -> float
: Unknown
;ObjectTemplate.coneOuterAngle float -> float
: Unknown
;ObjectTemplate.coneOuterVolume float -> float
: Unknown
;ObjectTemplate.constantForce float -> float
: Unknown
;ObjectTemplate.constantRpm bool -> bool
: Unknown
;ObjectTemplate.continousRotationSpeed Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.controlPointId int -> int
: Unknown
;ObjectTemplate.ControlPointId U32 -> U32
: Unknown
;ObjectTemplate.controlPointName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.controlsCategory dice::hfe::world::VehicleCategory -> dice::hfe::world::VehicleCategory
: Unknown
;ObjectTemplate.coolDownPerSec float -> float
: Unknown
;ObjectTemplate.coolingFactor float -> float
: Unknown
;ObjectTemplate.copyLinksCount int -> int
: Unknown
;ObjectTemplate.create <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> IObjectTemplate*
: Unknown
;ObjectTemplate.createComponent <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.createdInEditor bool -> bool
: Unknown
;ObjectTemplate.createInvisible bool -> bool
	:
	:Creates the object as invisible. Collisions and Functions still work. Tested on the at_mine
;ObjectTemplate.createNotInGrid bool -> bool
: Unknown
;ObjectTemplate.createVisibleInEditor bool -> bool
: Unknown
;ObjectTemplate.crewKitIndex int -> int
	:kits.con (example: gb82_pilot.con)
	:"Defines what Geom to use for the kit. Looks up the Geom1 etc in the .skinnedmesh which is located in the Meshes folder. For example
	: arg82/Meshes/arg82_kits1.skinnedmeshes. Open with BfMeshViewer to know what each number looks like."
;ObjectTemplate.crosshairFireTime float -> float
: Unknown
;ObjectTemplate.cullRadiusScale float -> float
	:"Weapons
	: Vehicle
	: Statics etc"
	:
;ObjectTemplate.CVMChase bool -> bool
	:Vehicles .tweak files
	:Used to set at what distance the object is culled from display. Each number represents a distance of 25m. For example: ObjectTemplate.cullRadiusScale 6 = VD of 150m
;ObjectTemplate.CVMExternTrace bool -> bool
	:Vehicles .tweak files
	:
;ObjectTemplate.CVMFlyBy bool -> bool
	:Vehicles .tweak files
	:
;ObjectTemplate.CVMFrontChase bool -> bool
	:Vehicles .tweak files
	:
;ObjectTemplate.CVMInside bool -> bool
	:Vehicles .tweak files
	:
;ObjectTemplate.CVMNose bool -> bool
	:Vehicles .tweak files
	:
;ObjectTemplate.CVMTrace bool -> bool
	:Vehicles .tweak files
	:
;ObjectTemplate.cycles int -> int
: Unknown
;ObjectTemplate.damage float -> float
: Unknown
;ObjectTemplate.damagedAmbientSoundLimit float -> float
: Unknown
;ObjectTemplate.damageForBeingOutSideWorld float -> float
: Unknown
;ObjectTemplate.damageMandownSoldiers bool -> bool
: Unknown
;ObjectTemplate.damageOwner bool -> bool
: Unknown
;ObjectTemplate.damageSpeed float -> float
: Unknown
;ObjectTemplate.damageWhenLost float -> float
: Unknown
;ObjectTemplate.dampenSprintRotationalForceInAirMod float -> float
: Unknown
;ObjectTemplate.dampHorizontalVel float -> float
: Unknown
;ObjectTemplate.dampHorizontalVelFactor float -> float
: Unknown
;ObjectTemplate.damping float -> float
: Unknown
;ObjectTemplate.deAcceleration Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.debugAutoRotate bool -> bool
: Unknown
;ObjectTemplate.debugForceGearUp bool -> bool
: Unknown
;ObjectTemplate.decalTextureName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.decreaseAngleToZero bool -> bool
: Unknown
;ObjectTemplate.decreaseAngleToZeroSpeed float -> float
: Unknown
;ObjectTemplate.decreaseAngleToZeroVerticalVel float -> float
: Unknown
;ObjectTemplate.defaultAngleOfAttack float -> float
: Unknown
;ObjectTemplate.defaultWeaponIndex int -> int
: Unknown
;ObjectTemplate.degradeDropStrength float -> float
: Unknown
;ObjectTemplate.degradeThrowStrength float -> float
: Unknown
;ObjectTemplate.degradeThrowStrength2 float -> float
: Unknown
;ObjectTemplate.delay RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.delayBeforeCycle float -> float
: Unknown
;ObjectTemplate.delayBeforeEnd float -> float
: Unknown
;ObjectTemplate.delayBeforeStart float -> float
: Unknown
;ObjectTemplate.delayToUse float -> float
: Unknown
;ObjectTemplate.delete world::IObjectTemplate_ptrproxy -> void
: Unknown
;ObjectTemplate.deleteComponent <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.deployAnimationTime float -> float
: Unknown
;ObjectTemplate.destroyableWindowsTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.destroyOnExit bool -> bool
: Unknown
;ObjectTemplate.destroyWhenEmptyStorage bool -> bool
: Unknown
;ObjectTemplate.detonateAfterProjectileStopped bool -> bool
: Unknown
;ObjectTemplate.detonateAfterProjectileStoppedMinSpeed float -> float
: Unknown
;ObjectTemplate.detonation.allowFriendlyFireDetonation bool -> bool
: Unknown
;ObjectTemplate.detonation.detectionRadius float -> float
: Unknown
;ObjectTemplate.detonation.detonateDistanceToTarget float -> float
: Unknown
;ObjectTemplate.detonation.detonateOnWaterCollision bool -> bool
: Unknown
;ObjectTemplate.detonation.effectRotation Vec3 -> Vec3
: Unknown
;ObjectTemplate.detonation.endEffectTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.detonation.explosionConeAngle float -> float
: Unknown
;ObjectTemplate.detonation.explosionDamage float -> float
: Unknown
;ObjectTemplate.detonation.explosionForce float -> float
: Unknown
;ObjectTemplate.detonation.explosionInnerConeRadius float -> float
: Unknown
;ObjectTemplate.detonation.explosionLineOfSightMinimumDamage float -> float
: Unknown
;ObjectTemplate.detonation.explosionMaterial int -> int
: Unknown
;ObjectTemplate.detonation.explosionRadius float -> float
: Unknown
;ObjectTemplate.detonation.explosionSoldierLineOfSight float -> float
: Unknown
;ObjectTemplate.detonation.explosionSoldierLineOfSightHealRate float -> float
: Unknown
;ObjectTemplate.detonation.explosionSoldierLineOfSightTimer float -> float
: Unknown
;ObjectTemplate.detonation.explosionYMod float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMaxAlpha float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMaxHealTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMaxHoldTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMaxRampTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMinAlpha float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMinHealTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangAdditiveGlowMinHoldTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMaxAlpha float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMaxHealTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMaxHoldTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMaxRampTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMinAlpha float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMinHealTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangBillboardMinHoldTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMaxAlpha float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMaxHealTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMaxHoldTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMaxRampTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMinAlpha float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMinHealTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangMotionBlurMinHoldTime float -> float
: Unknown
;ObjectTemplate.detonation.flashbangRadiusWithNightVision float -> float
: Unknown
;ObjectTemplate.detonation.invisibleAtEndEffect bool -> bool
: Unknown
;ObjectTemplate.detonation.maxDepthForExplosion float -> float
: Unknown
;ObjectTemplate.detonation.minDetonationSpeed float -> float
: Unknown
;ObjectTemplate.detonation.playMaterialEffectAtSurface bool -> bool
: Unknown
;ObjectTemplate.detonation.radiusDetonateWithAirVehicles bool -> bool
: Unknown
;ObjectTemplate.detonation.replenishingStrength float -> float
: Unknown
;ObjectTemplate.detonation.replenishingType ReplenishingType -> ReplenishingType
: Unknown
;ObjectTemplate.detonation.showMineIndicationIcon bool -> bool
: Unknown
;ObjectTemplate.detonation.stopAtEndEffect bool -> bool
: Unknown
;ObjectTemplate.detonation.timeUntilCanDetonate float -> float
: Unknown
;ObjectTemplate.detonation.triggerAngle float -> float
: Unknown
;ObjectTemplate.detonation.triggerRadius float -> float
: Unknown
;ObjectTemplate.detonation.triggerTime float -> float
: Unknown
;ObjectTemplate.detonation.triggerType RadiusTriggerType -> RadiusTriggerType
: Unknown
;ObjectTemplate.detonation.triggerVictimMinSpeed float -> float
: Unknown
;ObjectTemplate.detonation.useCollisionNormal bool -> bool
: Unknown
;ObjectTemplate.detonation.useMMOnEndEffect bool -> bool
: Unknown
;ObjectTemplate.deviation.devModCrouch float -> float
: Unknown
;ObjectTemplate.deviation.devModLie float -> float
: Unknown
;ObjectTemplate.deviation.devModStand float -> float
: Unknown
;ObjectTemplate.deviation.devModZoom float -> float
: Unknown
;ObjectTemplate.deviation.fireDevAdd float -> float
: Unknown
;ObjectTemplate.deviation.fireDevMax float -> float
: Unknown
;ObjectTemplate.deviation.fireDevSub float -> float
: Unknown
;ObjectTemplate.deviation.minDev float -> float
: Unknown
;ObjectTemplate.deviation.miscDevAddJump float -> float
: Unknown
;ObjectTemplate.deviation.miscDevMax float -> float
: Unknown
;ObjectTemplate.deviation.miscDevSub float -> float
: Unknown
;ObjectTemplate.deviation.radius float -> float
: Unknown
;ObjectTemplate.deviation.setFireDev float float float -> void
: Unknown
;ObjectTemplate.deviation.setMiscDev float float float -> void
: Unknown
;ObjectTemplate.deviation.setSpeedDev float float float -> void
: Unknown
;ObjectTemplate.deviation.setTurnDev float float float -> void
: Unknown
;ObjectTemplate.deviation.speedDevAddForward float -> float
: Unknown
;ObjectTemplate.deviation.speedDevAddStrafe float -> float
: Unknown
;ObjectTemplate.deviation.speedDevMax float -> float
: Unknown
;ObjectTemplate.deviation.speedDevSub float -> float
: Unknown
;ObjectTemplate.deviation.subProjectileDev float -> float
: Unknown
;ObjectTemplate.deviation.turnDevAddPitch float -> float
: Unknown
;ObjectTemplate.deviation.turnDevAddYaw float -> float
: Unknown
;ObjectTemplate.deviation.turnDevMax float -> float
: Unknown
;ObjectTemplate.deviation.turnDevSub float -> float
: Unknown
;ObjectTemplate.differential float -> float
: Unknown
;ObjectTemplate.direction Vec3 -> Vec3
: Unknown
;ObjectTemplate.directionalScale float -> float
: Unknown
;ObjectTemplate.disableIfEnemyInsideRadius bool -> bool
: Unknown
;ObjectTemplate.disableInputWhileDucking bool -> bool
: Unknown
;ObjectTemplate.disableSpawnPointsOnEnter bool -> bool
: Unknown
;ObjectTemplate.disableWhenEmptyVehicle bool -> bool
: Unknown
;ObjectTemplate.disableWhenEmptyVehicleDelay float -> float
: Unknown
;ObjectTemplate.disableWhenLosingControl bool -> bool
: Unknown
;ObjectTemplate.disableWhenWreck bool -> bool
: Unknown
;ObjectTemplate.dismountAngle float -> float
: Unknown
;ObjectTemplate.dismountCheckOffset float -> float
: Unknown
;ObjectTemplate.distance float -> float
: Unknown
;ObjectTemplate.distanceCannotEnter float -> float
: Unknown
;ObjectTemplate.distToMinDamage float -> float
: Unknown
;ObjectTemplate.distToStartLoseDamage float -> float
: Unknown
;ObjectTemplate.dontAllowExit bool -> bool
: Unknown
;ObjectTemplate.dontClearTeamOnExit bool -> bool
: Unknown
;ObjectTemplate.drag float -> float
	:
	:"How much the drag from the body of a vehicle affects its speed. Without it
	: a vehicle will have an infinite top speed."
;ObjectTemplate.drag RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.dragModifier Vec3 -> Vec3
: Unknown
;ObjectTemplate.dragModifier float -> float
: Unknown
;ObjectTemplate.dragOffset Vec3 -> Vec3
	:
	:To offset the drag using 0/0/0 - X/Y/Z
;ObjectTemplate.dragOverTime OverTimeDistribution -> OverTimeDistribution
: Unknown
;ObjectTemplate.drawOrder <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.dropHeadwear <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.dropStrength float -> float
: Unknown
;ObjectTemplate.effectChangeWaterHeight float -> float
: Unknown
;ObjectTemplate.effectOnSpawn <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.effectTemplateBaseName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.elasticity float -> float
: Unknown
;ObjectTemplate.emitDelay float -> float
: Unknown
;ObjectTemplate.emitDirection Vec3 -> Vec3
: Unknown
;ObjectTemplate.emitDirectionZFromSpeedDof bool -> bool
: Unknown
;ObjectTemplate.emitFrequency float -> float
: Unknown
;ObjectTemplate.emitFrequencyScaleFactorLowerBound float -> float
: Unknown
;ObjectTemplate.emitPrio <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.emitRadius Vec3 -> Vec3
: Unknown
;ObjectTemplate.emitRangeX RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.emitRangeY RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.emitRangeZ RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.emitScaleFactorFromAcceleration Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorFromAltitude Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorFromEngine Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorFromRotationalSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorFromSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorFromSpeedInDof Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorRange Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitScaleFactorUsed bool -> bool
: Unknown
;ObjectTemplate.emitSpeed float -> float
: Unknown
;ObjectTemplate.emitSpeedGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.emitSpeedScaleFromAcceleration Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleFromAltitude Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleFromEngine Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleFromRotationalSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleFromSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleFromSpeedInDof Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleRange Vec2 -> Vec2
: Unknown
;ObjectTemplate.emitSpeedScaleUsed bool -> bool
: Unknown
;ObjectTemplate.emitterSpeedScale float -> float
: Unknown
;ObjectTemplate.emitterType <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.emitTime float -> float
: Unknown
;ObjectTemplate.enabled bool -> bool
: Unknown
;ObjectTemplate.enemyTicketLossWhenCaptured int -> int
: Unknown
;ObjectTemplate.engineInfluence float -> float
: Unknown
;ObjectTemplate.engineName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.engineType int -> int
	:
	:"What kind of vehicle the engine is for. Car
	: tank
	: plane ship or helicopter."
;ObjectTemplate.entryRadius float -> float
: Unknown
;ObjectTemplate.events int -> int
: Unknown
;ObjectTemplate.exitSpeedMod float -> float
: Unknown
;ObjectTemplate.fadeInFactor float -> float
: Unknown
;ObjectTemplate.fadeOutFactor float -> float
: Unknown
;ObjectTemplate.fire.addBarrelName <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.fire.addFireRate int -> void
	:"Weapons
	: Vehicles .tweak"
	:"Defines the fire mode selector. You can add three lines max of each one. 0 = Single
	: 1 = Burst
	: 2 = Auto"
;ObjectTemplate.fire.addTimeEvent WeaponTrigger WeaponAction float -> void
: Unknown
;ObjectTemplate.fire.altFireInput io::PlayerInputMap -> io::PlayerInputMap
	:
	:Which PlayerInput map to use for the right-click function. Usually PIAlt
;ObjectTemplate.fire.batchSize int -> int
: Unknown
;ObjectTemplate.fire.burstSize int -> int
: Unknown
;ObjectTemplate.fire.busyUntilButtonRelease bool -> bool
: Unknown
;ObjectTemplate.fire.detonatorObject <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.fire.dropLod int -> int
: Unknown
;ObjectTemplate.fire.dropWeaponAfterFiringDelay float -> float
: Unknown
;ObjectTemplate.fire.dropWeaponAfterReloadDelay float -> float
: Unknown
;ObjectTemplate.fire.fireInCameraDof bool -> bool
: Unknown
;ObjectTemplate.fire.fireInCameraDofLocked bool -> bool
: Unknown
;ObjectTemplate.fire.fireInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.fire.fireLaunchDelay float -> float
: Unknown
;ObjectTemplate.fire.fireLaunchDelaySoft float -> float
: Unknown
;ObjectTemplate.fire.fireStartDelay RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.fire.hideLod int -> int
: Unknown
;ObjectTemplate.fire.hideWeaponAfterFiringDelay float -> float
: Unknown
;ObjectTemplate.fire.hideWeaponAfterReloadDelay float -> float
: Unknown
;ObjectTemplate.fire.ignoreFireButton io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.fire.isBarrel <nowiki>std::string</nowiki> -> bool
: Unknown
;ObjectTemplate.fire.maxProjectilesInWorld int -> int
	:
	:"The max amount of projectiles in the weapon that can be set before the engine cleans up each one. If the limit is 10
	: deploying one any further will delete an existing projectile. Used for explosives
	: mines and maybe bullets."
;ObjectTemplate.fire.onlyFireWhenProne bool -> bool
	:
	:"Restricts the weapon to fire only when prone. Though when firing during prone
	: a player can then stand and run to deploy an explosive for example. FH2 uses these for the machine gunner kits"
;ObjectTemplate.fire.projectileStartPosition Vec3 -> Vec3
	:
	:Position in X/Y/Z from the crosshair or PCO from where the projectile will launch.
;ObjectTemplate.fire.projectileStartRotation Vec3 -> Vec3
: Unknown
;ObjectTemplate.fire.pullbackTime float -> float
: Unknown
;ObjectTemplate.fire.radioMessageDelay float -> float
: Unknown
;ObjectTemplate.fire.randomRotationSpeed float -> float
: Unknown
;ObjectTemplate.fire.removeBarrelName <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.fire.roundsPerMinute int -> int
:"Used in GenericFirearms (Weapons, Projectiles)"
:"The rate of fire, measured in Rounds Per Minute (RPM). Must be dividable by 1800. Check: http://researchmaniacs.com/Math/Divisible-By/What-is-1800-divisible-by.html"
;ObjectTemplate.fire.showWeaponAfterReloadDelay float -> float
: Unknown
;ObjectTemplate.fire.timeToReachMaxStrengthSlow float -> float
: Unknown
;ObjectTemplate.fire.toggleWeaponTime float -> float
: Unknown
;ObjectTemplate.fire.triggerChargesTime float -> float
: Unknown
;ObjectTemplate.fire.useDummyProjectiles bool -> bool
: Unknown
;ObjectTemplate.fixAxisSpring bool -> bool
: Unknown
;ObjectTemplate.flagTemplateTeam0 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.flagTemplateTeam1 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.flagTemplateTeam2 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.flapLift float -> float
: Unknown
;ObjectTemplate.flicker float -> float
: Unknown
;ObjectTemplate.floaterMod float -> float
: Unknown
;ObjectTemplate.floatMaxLift float -> float
: Unknown
;ObjectTemplate.floatMinLift float -> float
: Unknown
;ObjectTemplate.follow.changePitch float -> float
: Unknown
;ObjectTemplate.follow.changeYaw float -> float
: Unknown
;ObjectTemplate.follow.maxPitch float -> float
: Unknown
;ObjectTemplate.follow.maxYaw float -> float
: Unknown
;ObjectTemplate.follow.minDist float -> float
: Unknown
;ObjectTemplate.followStiffness float -> float
: Unknown
;ObjectTemplate.force float -> float
: Unknown
;ObjectTemplate.forceSustainedFire bool -> bool
: Unknown
;ObjectTemplate.forceToWaterSurface bool -> bool
: Unknown
;ObjectTemplate.ForSoldierOnly bool -> bool
: Unknown
;ObjectTemplate.fov float -> float
: Unknown
;ObjectTemplate.gasCloudDamage float -> float
: Unknown
;ObjectTemplate.gasCloudRadiusTime float -> float
: Unknown
;ObjectTemplate.gasCloudType geom::GasCloudType -> geom::GasCloudType
: Unknown
;ObjectTemplate.gasMaskSprintFactor float -> float
: Unknown
;ObjectTemplate.gearChangeTime float -> float
: Unknown
;ObjectTemplate.gearDown float -> float
: Unknown
;ObjectTemplate.gearDownDelay float -> float
: Unknown
;ObjectTemplate.gearDownHeight float -> float
: Unknown
;ObjectTemplate.gearDownSpeed float -> float
: Unknown
;ObjectTemplate.gearUp float -> float
: Unknown
;ObjectTemplate.gearUpDelay float -> float
: Unknown
;ObjectTemplate.gearUpHeight float -> float
: Unknown
;ObjectTemplate.gearUpSpeed float -> float
: Unknown
;ObjectTemplate.geometry <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.geometry.dropGeom int -> int
: Unknown
;ObjectTemplate.geometry.kit int -> int
: Unknown
;ObjectTemplate.geometry1P <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.geometry3P <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.geometryPart int -> int
: Unknown
;ObjectTemplate.getHeatBarType -> int
: Unknown
;ObjectTemplate.getPosition int -> Math::Vec3
: Unknown
;ObjectTemplate.getRotation int -> Math::Vec3
: Unknown
;ObjectTemplate.getTemplate int -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.globalEffectLevel float -> float
: Unknown
;ObjectTemplate.gravity float -> float
	:
	:Sets the gravity for the map. Can use minus values as well
;ObjectTemplate.gravityGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.gravityModifier float -> float
	:
	:Sets the gravity for the vehicle. Can use minus values as well which makes the projectile go upwards
;ObjectTemplate.gravityModifier RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.gravityModifierOverTime OverTimeDistribution -> OverTimeDistribution
: Unknown
;ObjectTemplate.grip PhysicsGripFlags -> PhysicsGripFlags
:
:"Set only for wheels. 
:- Roll grip for wheels that are not powered.
:- Engine grip for wheels that are powered.
:- Engine dummy grip for wheel you want to make looking like they are powered
: but actually aren't."
;ObjectTemplate.groundContactVolume float -> float
: Unknown
;ObjectTemplate.group U32 -> U32
: Unknown
;ObjectTemplate.halfVolumeDistance float -> float
: Unknown
;ObjectTemplate.handleCollisionSpeed float -> float
: Unknown
;ObjectTemplate.hasAltEffect bool -> bool
: Unknown
;ObjectTemplate.hasCollisionPhysics bool -> bool
	:
	:"Check for all objects that has a collision mesh. Allows it to be hit by both bullets
	: players and vehicles"
;ObjectTemplate.HasGreyCapturingState bool -> bool
: Unknown
;ObjectTemplate.hasMobilePhysics bool -> bool
	:
	:Check for objects and parts that can move.
;ObjectTemplate.hasOnTimeEffect bool -> bool
: Unknown
;ObjectTemplate.hasOverDamage bool -> bool
: Unknown
;ObjectTemplate.hasPartner bool -> bool
: Unknown
;ObjectTemplate.hasPointPhysics bool -> void
: Unknown
;ObjectTemplate.hasRelativeOffset bool -> bool
: Unknown
;ObjectTemplate.hasResponsePhysics bool -> void
: Unknown
;ObjectTemplate.hasRestrictedExit bool -> bool
: Unknown
;ObjectTemplate.hasRotationalPointPhysics bool -> void
: Unknown
;ObjectTemplate.HDRIntensity float -> float
: Unknown
;ObjectTemplate.healSpeed float -> float
: Unknown
;ObjectTemplate.healStorageSize float -> float
: Unknown
;ObjectTemplate.heatAddWhenFire float -> float
: Unknown
;ObjectTemplate.heatIncrement float -> float
: Unknown
;ObjectTemplate.height float -> float
: Unknown
;ObjectTemplate.heightOffset float -> float
: Unknown
;ObjectTemplate.helpHud.altHelpSoundKey <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.altHelp<nowiki>std::string</nowiki>Key <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.closeToDistance int -> int
: Unknown
;ObjectTemplate.helpHud.closeToHelpSoundKeyEnemy <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.closeToHelpSoundKeyFriendly <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.closeToHelpSoundKeyNeutral <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.closeToHelp<nowiki>std::string</nowiki>KeyEnemy <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.closeToHelp<nowiki>std::string</nowiki>KeyFriendly <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.closeToHelp<nowiki>std::string</nowiki>KeyNeutral <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.helpSoundKey <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.help<nowiki>std::string</nowiki>Key <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.lowAmmoHelpSoundKey <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.lowAmmoHelp<nowiki>std::string</nowiki>Key <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.lowArmorHelpSoundKey <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.helpHud.lowArmorHelp<nowiki>std::string</nowiki>Key <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.hideFirstPerson bool -> bool
: Unknown
;ObjectTemplate.hoistFlag bool -> bool
: Unknown
;ObjectTemplate.hoistMinMax Vec2 -> Vec2
: Unknown
;ObjectTemplate.holdObject bool -> bool
: Unknown
;ObjectTemplate.horizontalDampAngle float -> float
: Unknown
;ObjectTemplate.horizontalDampAngleFactor float -> float
: Unknown
;ObjectTemplate.horizontalSpeedMagnifier float -> float
: Unknown
;ObjectTemplate.hullHeight float -> float
: Unknown
;ObjectTemplate.ik.poleVectorLeft Vec3 -> Vec3
: Unknown
;ObjectTemplate.ik.poleVectorRight Vec3 -> Vec3
: Unknown
;ObjectTemplate.ik.positionLeft Vec3 -> Vec3
: Unknown
;ObjectTemplate.ik.positionRight Vec3 -> Vec3
: Unknown
;ObjectTemplate.ik.rotationLeft Vec3 -> Vec3
: Unknown
;ObjectTemplate.ik.rotationRight Vec3 -> Vec3
: Unknown
;ObjectTemplate.inertiaModifier Vec3 -> Vec3
: Unknown
;ObjectTemplate.info world::IObjectTemplate_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.inheritHeatFromPrimary bool -> bool
: Unknown
;ObjectTemplate.initiallyWalkable bool -> bool
: Unknown
;ObjectTemplate.input io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.inputToPitch io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.inputToRoll io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.inputToYaw io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.insideDamageFrequency float -> float
: Unknown
;ObjectTemplate.insideDamageThreshold float -> float
: Unknown
;ObjectTemplate.insideFOV float -> float
: Unknown
;ObjectTemplate.insideStaticSunAmbientColor Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.insideStaticSunColor Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.insideStaticSunDamageColor Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.insideStaticSunDirection Vec3 -> Vec3
: Unknown
;ObjectTemplate.intensity float -> float
: Unknown
;ObjectTemplate.intensity RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.intensityAtSpeed float -> float
: Unknown
;ObjectTemplate.intensityOverTime OverTimeDistribution -> OverTimeDistribution
: Unknown
;ObjectTemplate.inventorySize U32 -> U32
: Unknown
;ObjectTemplate.inverseHeatBar bool -> bool
: Unknown
;ObjectTemplate.invertGear bool -> bool
: Unknown
;ObjectTemplate.invisible bool -> bool
: Unknown
;ObjectTemplate.is3dSound bool -> bool
	:
	:"If the .wav file is Mono
	: setting it to 1 will tell the engine to play it on both channels. If applied to a .wav that is Stereo
	: it will play on the entire map. Same with .ogg files though it's usually experiementation."
;ObjectTemplate.isCounterForce bool -> bool
: Unknown
;ObjectTemplate.isDestructable bool -> bool
	:
	:Check only if object is a destroyable static object.
;ObjectTemplate.isDynamic bool -> bool
: Unknown
;ObjectTemplate.isGasMask bool -> bool
: Unknown
;ObjectTemplate.isHemisphere bool -> bool
: Unknown
;ObjectTemplate.isLocalSystem bool -> bool
	:
	:"Makes the effect follow the projectile and allows it to arch. Used for the M67 ""Zippo"" Tank Flamethrower Effect. Without it
	: the flame effect just shoots straight but not following the projectile"
;ObjectTemplate.isLooping bool -> bool
: Unknown
;ObjectTemplate.isNightVision bool -> bool
: Unknown
;ObjectTemplate.isNotSaveable bool -> bool
: Unknown
;ObjectTemplate.isOpenVehicle bool -> bool
	:
	:"Allows the ragdoll to slide off when killed from a vehicle position. Used in Technicals. If this is option
	: the passenger animation must have a die animation specified otherwise the ragdolls will float in the air."
;ObjectTemplate.isOvergrowth bool -> bool
: Unknown
;ObjectTemplate.isPortalPassing bool -> bool
: Unknown
;ObjectTemplate.isSelectable bool -> bool
: Unknown
;ObjectTemplate.isSleeping bool -> bool
: Unknown
;ObjectTemplate.isStatic bool -> bool
: Unknown
;ObjectTemplate.isStaticSystem bool -> bool
: Unknown
;ObjectTemplate.isUnderwaterEffect bool -> bool
: Unknown
;ObjectTemplate.isUnstrategicControlPoint bool -> bool
: Unknown
;ObjectTemplate.itemIndex int -> int
	:
	:"What number in the keyboard is mapped to what weapon/tool. Max is 9
	: not sure about 0. Also positions the weapon icon square."
;ObjectTemplate.itemType int -> int
: Unknown
;ObjectTemplate.keepProjectiles float -> float
	:Weapons
	:Time to keep the projectile in the world in seconds after you or the weapon dies
;ObjectTemplate.killHeatSeekingMissile bool -> bool
: Unknown
;ObjectTemplate.kitTeam int -> int
: Unknown
;ObjectTemplate.kitType hfe::KitType -> hfe::KitType
: Unknown
;ObjectTemplate.lesserYawAtSpeed float -> float
: Unknown
;ObjectTemplate.liftRegulated bool -> bool
: Unknown
;ObjectTemplate.LightAffectionFactor float -> float
: Unknown
;ObjectTemplate.lightMapIntensityOffset float -> float
: Unknown
;ObjectTemplate.lightType <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.linkAttachMovement float -> float
: Unknown
;ObjectTemplate.linkAttachTime float -> float
: Unknown
;ObjectTemplate.linkedEffectContainer <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.list <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.listenerObstruction float -> float
	:Vehicles .tweak
	:How muffled is the sound. Lower value is least muffled.
;ObjectTemplate.listTemplateClasses -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.listTemplates -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.loadAll -> bool
: Unknown
;ObjectTemplate.localPredictOnClient bool -> bool
	:
	:"Used with Grenades and if there's any effect
	: projectiles. Seems like it tells the server to predict what's going to happen. Maybe used with the Networkable Setting?"
;ObjectTemplate.lodDistance float -> float
: Unknown
;ObjectTemplate.LodDistance <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.loopCount int -> int
: Unknown
;ObjectTemplate.looping bool -> bool
: Unknown
;ObjectTemplate.loseControlWhenEnemyClose bool -> bool
: Unknown
;ObjectTemplate.loseControlWhenNotClose bool -> bool
: Unknown
;ObjectTemplate.lowSamples int -> int
: Unknown
;ObjectTemplate.maintainCameraOnEnter bool -> bool
: Unknown
;ObjectTemplate.maintainCameraOnExit bool -> bool
: Unknown
;ObjectTemplate.manDownCameraOffsetInDof float -> float
: Unknown
;ObjectTemplate.manDownCameraOffsetInUp float -> float
: Unknown
;ObjectTemplate.mapMaterial uint <nowiki>std::string</nowiki> uint -> void
: Unknown
;ObjectTemplate.maskOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.maskType hfe::MaskObjectType -> hfe::MaskObjectType
: Unknown
;ObjectTemplate.mass float -> float
	:"Used in Vehicles
	: Deployables etc"
	:Mass is the weight of the vehicle in KG and also taking into account the GravityModifier value
;ObjectTemplate.material int -> int
: Unknown
;ObjectTemplate.maxAngleOfAttack float -> float
: Unknown
;ObjectTemplate.maxCorner Vec3 -> Vec3
: Unknown
;ObjectTemplate.maxDistance float -> float
: Unknown
;ObjectTemplate.maxDistanceUnderWaterSurface float -> float
: Unknown
;ObjectTemplate.maxGasCloudRadius float -> float
: Unknown
;ObjectTemplate.maxNrOfObjectSpawned U32 -> U32
: Unknown
;ObjectTemplate.maxResetSpeed Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.MaxRopeLength float -> float
	:
	:Fastropes confirmed ?!?!?!?!
;ObjectTemplate.maxRotation Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.maxSpawnDelay float -> float
: Unknown
;ObjectTemplate.maxSpeed Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.maxSpeed float -> float
: Unknown
;ObjectTemplate.maxTracerScaler float -> float
	:Used in Projectiles (Weapons)
	:How long the tracer effect can be depending on projectile speed. Refs: http://www.battlefieldsingleplayer.com/forum/index.php?showtopic=8592&mode=threaded&pid=84936
;ObjectTemplate.maxTriggerDistance float -> float
: Unknown
;ObjectTemplate.maxVertRegAngle float -> float
: Unknown
;ObjectTemplate.MaxZiplineLength float -> float
: Unknown
;ObjectTemplate.mediumSamples int -> int
: Unknown
;ObjectTemplate.minCorner Vec3 -> Vec3
: Unknown
;ObjectTemplate.minDamage float -> float
: Unknown
;ObjectTemplate.minDistance float -> float
: Unknown
;ObjectTemplate.minDistanceUnderWaterSurface float -> float
: Unknown
;ObjectTemplate.minGasCloudRadius float -> float
: Unknown
;ObjectTemplate.minimapNameOffset Vec2 -> Vec2
: Unknown
;ObjectTemplate.minimumTimeBetweenTriggering float -> float
	:AmbientObjects.con (Map)
	:The time when the trigger will repeat again after entering the trigger radius. Happens after the effect plays. In seconds. Depends also on ObjectTemplate.chance
;ObjectTemplate.minNrToTakeControl U32 -> U32
: Unknown
;ObjectTemplate.minRotation Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.minSpawnDelay float -> float
: Unknown
;ObjectTemplate.minTimeBetweenActivation float -> float
: Unknown
;ObjectTemplate.minTracerScaler float -> float
: Unknown
;ObjectTemplate.minTrailVelocity float -> float
: Unknown
;ObjectTemplate.minYNormal float -> float
: Unknown
;ObjectTemplate.movementSpeed float -> float
: Unknown
;ObjectTemplate.movementType int -> int
: Unknown
;ObjectTemplate.moveToWaterSurface bool -> bool
: Unknown
;ObjectTemplate.name -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.nameTagOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.nearCullingEnable bool -> bool
: Unknown
;ObjectTemplate.networkableInfo <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:Networkables.con
	:"Needs to be set for objects that won't work online without them. Depends on the way it's set and if it crashes immediately
	: is laggy
	: or crashes unexpectantly"
;ObjectTemplate.neverDrawAs1p bool -> bool
	:"Vehicle
	: Weapons
	: Effects"
	:Makes the effect not draw in front of you when in 1p mode. Link: http://www.realitymod.com/forum/f388-pr-bf2-community-modding/113277-1p-animations-pcos-3.html
;ObjectTemplate.newCar2.brakeTorque float -> float
: Unknown
;ObjectTemplate.newCar2.engineBrakeTorque float -> float
: Unknown
;ObjectTemplate.newCar2.engineFeedbackMod float -> float
: Unknown
;ObjectTemplate.newCar2.frictionMod float -> float
: Unknown
;ObjectTemplate.newCar2.frictionTorque float -> float
: Unknown
;ObjectTemplate.newCar2.maxRpm float -> float
: Unknown
;ObjectTemplate.newCar2.minRpm float -> float
: Unknown
;ObjectTemplate.newCar2.slopeTorqueMod float -> float
: Unknown
;ObjectTemplate.newCar2.useClutchedTorque bool -> bool
: Unknown
;ObjectTemplate.newCar2.wheelInertia float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLatDriveFrictionMod float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLatFrictionMod float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLatMinDynamicFriction float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLatPeakAt float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLatScale float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLongDriveFrictionMod float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLongFrictionMod float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLongMinDynamicFriction float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLongPeakAt float -> float
: Unknown
;ObjectTemplate.newCar2.wheelLongScale float -> float
: Unknown
;ObjectTemplate.noEffectAtPerpSpeed float -> float
: Unknown
;ObjectTemplate.noPassengerTimeToLive int -> int
: Unknown
;ObjectTemplate.noPhysics bool -> bool
: Unknown
;ObjectTemplate.noPropellerEffectAtSpeed float -> float
: Unknown
;ObjectTemplate.nosePos Vec3 -> Vec3
: Unknown
;ObjectTemplate.notCycledIfOccupied bool -> bool
: Unknown
;ObjectTemplate.noVertRegAngle float -> float
: Unknown
;ObjectTemplate.nrOfObjectToSpawn int -> int
: Unknown
;ObjectTemplate.nrOfRespawns int -> int
: Unknown
;ObjectTemplate.numberOfGears int -> int
: Unknown
;ObjectTemplate.NumberOfLinks int -> int
: Unknown
;ObjectTemplate.numNetworkedEffects int -> int
: Unknown
;ObjectTemplate.numPlanes int -> int
: Unknown
;ObjectTemplate.objectShadows bool -> bool
: Unknown
;ObjectTemplate.objectTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.onlyTakeableByTeam U32 -> U32
: Unknown
;ObjectTemplate.onlyWhenOccupied bool -> bool
: Unknown
;ObjectTemplate.otherCollisionLod int -> int
: Unknown
;ObjectTemplate.overheatPenalty float -> float
: Unknown
;ObjectTemplate.pan float -> float
: Unknown
;ObjectTemplate.ParticleMaxSize float -> float
	:Used in Vehicle .con and .tweak files
	:"Defines what materials the vehicle should use
	: which references the materialdefine file. Use BfMeshViewer to find out what numbers belong to what sides."
;ObjectTemplate.particleSystemTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:Same as above
	:Same as above
;ObjectTemplate.particleType <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.pcoFlags int -> int
: Unknown
;ObjectTemplate.pcoId int -> int
: Unknown
;ObjectTemplate.penetrate.allowLiquidPenetration bool -> bool
: Unknown
;ObjectTemplate.penetrate.allowSolidPenetration bool -> bool
	: 
	:
;ObjectTemplate.penetrate.neverPenetrate bool -> bool
: Unknown
;ObjectTemplate.physicsFrequency int -> int
: Unknown
;ObjectTemplate.physicsType PhysicsType -> PhysicsType
	:Vehicles
	:"None' for no collision
	: 'Point' for projectile (Ignores mesh)
	: 'Mesh' if object has collision mesh"
;ObjectTemplate.pitch float -> float
: Unknown
;ObjectTemplate.pitchEnvelope <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.pitchOffset float -> float
: Unknown
;ObjectTemplate.pivotOffset Vec2 -> Vec2
: Unknown
;ObjectTemplate.PivotPosition Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.playAtEventPosition bool -> bool
: Unknown
;ObjectTemplate.playAtPlayerPosition bool -> bool
: Unknown
;ObjectTemplate.portalPassingPosition Vec3 -> Vec3
: Unknown
;ObjectTemplate.poseCameraPosition int Vec3 -> void
: Unknown
;ObjectTemplate.position Vec3 -> Vec3
: Unknown
;ObjectTemplate.positionalSpeedInDof RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.positionalSpeedInRight RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.positionalSpeedInUp RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.positionOffset Math::Vec3 -> Math::Vec3
: Unknown
;ObjectTemplate.postProcess.tvDistortionFreq float -> float
: Unknown
;ObjectTemplate.postProcess.tvDistortionRoll float -> float
: Unknown
;ObjectTemplate.postProcess.tvDistortionScale float -> float
: Unknown
;ObjectTemplate.postProcess.tvInterference float -> float
: Unknown
;ObjectTemplate.preCacheObject bool -> bool
: Unknown
;ObjectTemplate.preWarmTime float -> float
: Unknown
;ObjectTemplate.printScript world::IObjectTemplate_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.projectileTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:"In Weapons
	: Vehicles .tweak GenericFirearm"
	:Defines the projectile that the GenericFirearm should use. Looks for the GenericProjectile that is defined in all .tweak files. 
;ObjectTemplate.projectOnHeightmap bool -> bool
: Unknown
;ObjectTemplate.projectorApplyMask bool -> bool
: Unknown
;ObjectTemplate.projectorAspect float -> float
: Unknown
;ObjectTemplate.projectorFar float -> float
: Unknown
;ObjectTemplate.projectorFov float -> float
: Unknown
;ObjectTemplate.projectorNear float -> float
: Unknown
;ObjectTemplate.projectorTexture <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.propRotAxis int -> int
: Unknown
;ObjectTemplate.pureRotational bool -> bool
: Unknown
;ObjectTemplate.QualityLevel <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.radialDirection float -> float
: Unknown
;ObjectTemplate.radio.destroyedMessage <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.radio.failMessage <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.radio.repairedMessage <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.radio.spottedMessage <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.radio.useMessage <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.radius float -> float
: Unknown
;ObjectTemplate.radiusOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.ragdollLandedDelay float -> float
: Unknown
;ObjectTemplate.randomAgeFactor RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.randomColorIntensity float -> float
: Unknown
;ObjectTemplate.randomDirectionAngle Vec3 -> Vec3
: Unknown
;ObjectTemplate.randomIntensity float -> float
: Unknown
;ObjectTemplate.randomizeGeomPart bool -> bool
: Unknown
;ObjectTemplate.randomRadialDirection float -> float
: Unknown
;ObjectTemplate.randomRotation float -> float
: Unknown
;ObjectTemplate.randomRotation Vec3 -> Vec3
: Unknown
;ObjectTemplate.randomRotationSpeed Vec3 -> Vec3
: Unknown
;ObjectTemplate.randomRotationSpeed float -> float
: Unknown
;ObjectTemplate.randomSize float -> float
: Unknown
;ObjectTemplate.randomSpeed float -> float
: Unknown
;ObjectTemplate.randomTimeToLive float -> float
: Unknown
;ObjectTemplate.rcType RemoteControlledObjectType -> RemoteControlledObjectType
: Unknown
;ObjectTemplate.readBinary <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.recoil.cameraRecoilSize float -> float
: Unknown
;ObjectTemplate.recoil.cameraRecoilSpeed float -> float
: Unknown
;ObjectTemplate.recoil.goBackOnRecoil bool -> bool
: Unknown
;ObjectTemplate.recoil.hasRecoilForce bool -> bool
: Unknown
;ObjectTemplate.recoil.recoilForce float -> float
: Unknown
;ObjectTemplate.recoil.recoilForceLeftRight RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.recoil.recoilForceUp RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.recoil.recoilGraphExponent float -> float
: Unknown
;ObjectTemplate.recoil.recoilGraphFrameCount int -> int
: Unknown
;ObjectTemplate.recoil.recoilGraphTotalMovement float -> float
: Unknown
;ObjectTemplate.recoil.recoilSize float -> float
: Unknown
;ObjectTemplate.recoil.recoilSpeed float -> float
: Unknown
;ObjectTemplate.recoil.recoilSpeedGB float -> float
: Unknown
;ObjectTemplate.recoil.zoomModifier float -> float
: Unknown
;ObjectTemplate.refillAmmoSpeed float -> float
: Unknown
;ObjectTemplate.regulatePitch Vec2 -> Vec2
: Unknown
;ObjectTemplate.regulatePitchInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.regulateRoll Vec2 -> Vec2
: Unknown
;ObjectTemplate.regulateRollInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.regulateToLift float -> float
: Unknown
;ObjectTemplate.regulateVerticalPos Vec2 -> Vec2
: Unknown
;ObjectTemplate.regulateVerticalPosInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.regulateYaw Vec2 -> Vec2
: Unknown
;ObjectTemplate.regulateYawInput io::PlayerInputMap -> io::PlayerInputMap
	:In the effects .tweak when creating an effect
	:Allows an effect template to be used with custom settings.
;ObjectTemplate.regWhenMinInput float -> float
: Unknown
;ObjectTemplate.relativePositionInDof RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.relativePositionInRight RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.relativePositionInUp RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.relativePositionOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.rememberExcessInput bool -> bool
: Unknown
;ObjectTemplate.remoteEngineInput int -> int
: Unknown
;ObjectTemplate.removeTemplate int -> void
: Unknown
;ObjectTemplate.replaceItem <nowiki>std::string</nowiki> -> void
	:In the .con and .tweak
	:
;ObjectTemplate.respawnDelay float -> float
	:In the .con and .tweak
	:
;ObjectTemplate.restoreRotationOnExit bool -> bool
: Unknown
;ObjectTemplate.restoreSpeed float -> float
: Unknown
;ObjectTemplate.reverbLevel float -> float
: Unknown
;ObjectTemplate.ropeScaleFactor float -> float
: Unknown
;ObjectTemplate.rotateAsAnimatedUV bool -> bool
: Unknown
;ObjectTemplate.rotateAsAnimatedUVObject <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.rotateAsAnimatedUVReverse bool -> bool
: Unknown
;ObjectTemplate.rotateUV bool -> bool
: Unknown
;ObjectTemplate.rotation float -> float
: Unknown
;ObjectTemplate.rotationalForce Vec3 -> Vec3
: Unknown
;ObjectTemplate.rotationalSpeedInDof RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.rotationalSpeedInRight RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.rotationalSpeedInUp RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.rotationAxle int -> int
: Unknown
;ObjectTemplate.rotationGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.rotationSpeed Vec3 -> Vec3
: Unknown
;ObjectTemplate.rotationSpeed float -> float
: Unknown
;ObjectTemplate.rotationSpeedMod float -> float
: Unknown
;ObjectTemplate.rotationSpeedModBlur float -> float
: Unknown
;ObjectTemplate.save world::IObjectTemplate_ptrproxy -> bool
: Unknown
;ObjectTemplate.saveAll -> bool
: Unknown
;ObjectTemplate.saveInSeparateFile bool -> bool
: Unknown
;ObjectTemplate.scale Vec3 -> Vec3
: Unknown
;ObjectTemplate.seatAnimationSystem <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:In Vehicles .tweak
	:Defines the location of the .inc animation file for the seat. Example: Passenger.inc
;ObjectTemplate.seatInformation <nowiki>std::string</nowiki> Vec3 Vec3 -> void
: Unknown
;ObjectTemplate.seatLeftRotationLimit float -> float
: Unknown
;ObjectTemplate.seatParent <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.seatPosition Vec3 -> Vec3
: Unknown
;ObjectTemplate.seatRightRotationLimit float -> float
: Unknown
;ObjectTemplate.seatRotation Vec3 -> Vec3
	:In Vehicles .tweak
	:Allows the PCO to be rotated. Uses X/Y/Z. Relevant to Seat X Y Z Arrow. See BF2Editor Vehicle for more info. For example -10/0/0 wil rotate the player backwards.
;ObjectTemplate.secondaryProjectileTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.seek.directionBonus float -> float
: Unknown
;ObjectTemplate.seek.maxAngleLock float -> float
: Unknown
;ObjectTemplate.seek.maxDistLock float -> float
: Unknown
;ObjectTemplate.seek.reLockTime float -> float
: Unknown
;ObjectTemplate.seek.targetType TargetType -> TargetType
: Unknown
;ObjectTemplate.seek.trackingDelay float -> float
: Unknown
;ObjectTemplate.selfLights bool -> bool
: Unknown
;ObjectTemplate.selfShadowIntensity float -> float
: Unknown
;ObjectTemplate.selfShadows bool -> bool
: Unknown
;ObjectTemplate.setActiveTemplate int -> void
: Unknown
;ObjectTemplate.setAIEnterOnSpawn bool -> void
: Unknown
;ObjectTemplate.setAllowSpawnCloseToVehicle bool -> void
: Unknown
;ObjectTemplate.setAnimationFrameHeightRelative float -> void
: Unknown
;ObjectTemplate.setAnimationFrameWidthRelative float -> void
: Unknown
;ObjectTemplate.setAxisFixation Math::Vec3 -> void
: Unknown
;ObjectTemplate.setCollisionMesh <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.setEnterOnSpawn bool -> void
: Unknown
;ObjectTemplate.setExplodePartAtDestroy bool -> void
: Unknown
;ObjectTemplate.setGearRatios float float float -> void
: Unknown
;ObjectTemplate.setHasTarget bool -> void
: Unknown
;ObjectTemplate.setHealth int float float -> void
: Unknown
;ObjectTemplate.setHeatBarType heatBarType -> void
: Unknown
;ObjectTemplate.setMinSpawnHeight float -> void
: Unknown
;ObjectTemplate.setNumWindows int -> void
: Unknown
;ObjectTemplate.setObjectTemplate int <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.setOnlyForAI bool -> void
: Unknown
;ObjectTemplate.setOnlyForHuman bool -> void
: Unknown
;ObjectTemplate.setPosition Math::Vec3 int -> void
: Unknown
;ObjectTemplate.setPositionalFixation Math::Vec3 -> void
: Unknown
;ObjectTemplate.setRotation Math::Vec3 int -> void
: Unknown
;ObjectTemplate.setScatterSpawnPositions bool -> void
: Unknown
;ObjectTemplate.setSkeletonCollisionBone <nowiki>std::string</nowiki> int Vec3 -> void
: Unknown
;ObjectTemplate.setSoldierExitLocation Vec3 Vec3 -> void
: Unknown
;ObjectTemplate.setSpawnAsParaTroper bool -> void
: Unknown
;ObjectTemplate.setSpawnDelay float -> void
: Unknown
;ObjectTemplate.setSpawnPositionOffset Math::Vec3 -> void
: Unknown
;ObjectTemplate.setSpawnPreventionDelay float -> void
: Unknown
;ObjectTemplate.setSpawnRotation Math::Vec3 -> void
: Unknown
;ObjectTemplate.setTeamGeometry int <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.setToolTipType dice::hfe::world::ToolTipType -> void
: Unknown
;ObjectTemplate.setVehicleType dice::hfe::world::VehicleType -> void
: Unknown
;ObjectTemplate.shadowIntensity float -> float
: Unknown
;ObjectTemplate.shakeFactor float -> float
: Unknown
;ObjectTemplate.sharedStorageSize float -> float
: Unknown
;ObjectTemplate.showInFirstPerson bool -> bool
: Unknown
;ObjectTemplate.showInThirdPerson bool -> bool
: Unknown
;ObjectTemplate.showOnMinimap bool -> bool
: Unknown
;ObjectTemplate.signalTriggerId int -> int
: Unknown
;ObjectTemplate.sinkingSpeedMod float -> float
: Unknown
;ObjectTemplate.size float -> float
: Unknown
;ObjectTemplate.size RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.sizeGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.sizeModifier Vec3 -> Vec3
: Unknown
;ObjectTemplate.sizeModifierX float -> float
: Unknown
;ObjectTemplate.sizeModifierY float -> float
: Unknown
;ObjectTemplate.sizeModifierZ float -> float
: Unknown
;ObjectTemplate.sizeOverTime OverTimeDistribution -> OverTimeDistribution
: Unknown
;ObjectTemplate.skeleton <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.skeleton1P <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.skeleton3P <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.snapToZeroOnNoInput bool -> bool
: Unknown
;ObjectTemplate.softness float -> float
: Unknown
;ObjectTemplate.soldierExitPosition Vec3 -> Vec3
: Unknown
;ObjectTemplate.soldierExitRotation Vec3 -> Vec3
: Unknown
;ObjectTemplate.sound.maxSoundsPerBurst int -> int
: Unknown
;ObjectTemplate.sound.noisy bool -> bool
: Unknown
;ObjectTemplate.soundFilename <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.soundFilter <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.soundIntensityFromAcceleration Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityFromAltitude Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityFromEngine Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityFromRotationalSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityFromSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityFromSpeedInDof Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityRange Vec2 -> Vec2
: Unknown
;ObjectTemplate.soundIntensityUsed bool -> bool
: Unknown
;ObjectTemplate.soundRadius float -> float
: Unknown
;ObjectTemplate.spawnDelay float -> void
: Unknown
;ObjectTemplate.spawnDelayAtStart bool -> bool
: Unknown
;ObjectTemplate.spawnOffset Vec3 -> Vec3
: Unknown
;ObjectTemplate.speccolor Vec3ColorFloatIntensity -> Vec3ColorFloatIntensity
: Unknown
;ObjectTemplate.specialToggleWeaponInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.speed float -> float
: Unknown
;ObjectTemplate.speedFromParticle float -> float
: Unknown
;ObjectTemplate.speedFromPhysics bool -> bool
: Unknown
;ObjectTemplate.spinWhenNoEngineInAir float -> float
: Unknown
;ObjectTemplate.sprintDissipationTime float -> float
: Unknown
;ObjectTemplate.sprintFactor float -> float
: Unknown
;ObjectTemplate.sprintGear1Dampen float -> float
: Unknown
;ObjectTemplate.sprintGear2Dampen float -> float
: Unknown
;ObjectTemplate.sprintGear3Dampen float -> float
: Unknown
;ObjectTemplate.sprintGear4Dampen float -> float
: Unknown
;ObjectTemplate.sprintGear5Dampen float -> float
: Unknown
;ObjectTemplate.sprintLimit float -> float
: Unknown
;ObjectTemplate.sprintLossAtJump float -> float
: Unknown
;ObjectTemplate.sprintRecoverTime float -> float
: Unknown
;ObjectTemplate.sprintStaminaDissipationFactor float -> float
: Unknown
;ObjectTemplate.startAgeFromAcceleration Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeFromAltitude Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeFromEngine Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeFromRotationalSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeFromSpeed Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeFromSpeedInDof Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeRange Vec2 -> Vec2
: Unknown
;ObjectTemplate.startAgeUsed bool -> bool
: Unknown
;ObjectTemplate.startAtCreation bool -> bool
: Unknown
;ObjectTemplate.startAutoRotateOnEnter bool -> bool
: Unknown
;ObjectTemplate.startDelay float -> float
: Unknown
;ObjectTemplate.startDistance float -> float
: Unknown
;ObjectTemplate.startLodPercentageOfLodDistance float -> float
: Unknown
;ObjectTemplate.startOnEffects int -> int
: Unknown
;ObjectTemplate.startProbability float -> float
: Unknown
;ObjectTemplate.startRotation RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.startTeam int -> int
: Unknown
;ObjectTemplate.stopOnEffects int -> int
: Unknown
;ObjectTemplate.stopType int -> int
: Unknown
;ObjectTemplate.strategicObject.3dMapIcon int -> int
: Unknown
;ObjectTemplate.strategicObject.destroyedIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.strategicObject.intactIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.strategicObject.isOnePiece bool -> bool
: Unknown
;ObjectTemplate.strategicObject.part int -> int
: Unknown
;ObjectTemplate.strategicObject.strategicObjectName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.strength float -> float
: Unknown
;ObjectTemplate.supplyGroupId int -> int
: Unknown
;ObjectTemplate.supplyGroupNeeded int int bool -> void
: Unknown
;ObjectTemplate.supplyValueNeededTeam1 int -> int
: Unknown
;ObjectTemplate.supplyValueNeededTeam2 int -> int
: Unknown
;ObjectTemplate.supplyValueTeam1 int -> int
: Unknown
;ObjectTemplate.supplyValueTeam2 int -> int
: Unknown
;ObjectTemplate.supportsEmitter bool -> bool
: Unknown
;ObjectTemplate.supportsGlow bool -> bool
: Unknown
;ObjectTemplate.supportsPerPixel bool -> bool
: Unknown
;ObjectTemplate.supportsPerVertex bool -> bool
: Unknown
;ObjectTemplate.target.connectionEffect <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.target.connectionEffectOnlyWhenZoomed bool -> bool
: Unknown
;ObjectTemplate.target.disableFireWhenActiveMissile bool -> bool
: Unknown
;ObjectTemplate.target.disableGuidanceOnReload bool -> bool
: Unknown
;ObjectTemplate.target.lockAngle float -> float
: Unknown
;ObjectTemplate.target.lockDelay float -> float
: Unknown
;ObjectTemplate.target.loseLockDelay float -> float
: Unknown
;ObjectTemplate.target.maxDistance float -> float
: Unknown
;ObjectTemplate.target.maxVelocity float -> float
: Unknown
;ObjectTemplate.target.minVelocity float -> float
: Unknown
;ObjectTemplate.target.onLockChangeToWeapon bool <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.target.sendVehicleLockWarning bool -> bool
: Unknown
;ObjectTemplate.target.setTargetAtMaxDistance bool -> bool
: Unknown
;ObjectTemplate.target.targetInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.target.targetObjectTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.target.targetSystem TargetSystem -> TargetSystem
: Unknown
;ObjectTemplate.target.updateInterval float -> float
: Unknown
;ObjectTemplate.target.useCameraDirectionToTarget bool -> bool
: Unknown
;ObjectTemplate.target.useDynamicVelocity bool -> bool
: Unknown
;ObjectTemplate.target.velocityModifier float -> float
: Unknown
;ObjectTemplate.targetType TargetType -> TargetType
: Unknown
;ObjectTemplate.team int -> int
: Unknown
;ObjectTemplate.team U32 -> U32
: Unknown
;ObjectTemplate.team int -> void
: Unknown
;ObjectTemplate.teamChange bool -> bool
: Unknown
;ObjectTemplate.teamFromClosestCP bool -> bool
: Unknown
;ObjectTemplate.teamOnVehicle bool -> bool
: Unknown
;ObjectTemplate.template <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.templateHasBeenUsed bool -> bool
: Unknown
;ObjectTemplate.textureName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.textureOffsetVelocity float -> float
: Unknown
;ObjectTemplate.textureTileFactor float -> float
: Unknown
;ObjectTemplate.throwStrength float -> float
: Unknown
;ObjectTemplate.throwStrength2 float -> float
: Unknown
;ObjectTemplate.Timeout float -> float
: Unknown
;ObjectTemplate.timeToGetControl float -> float
: Unknown
;ObjectTemplate.timeToLive RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.timeToLive float -> float
: Unknown
;ObjectTemplate.timeToLiveAfterDeath float -> float
: Unknown
;ObjectTemplate.timeToLoseControl float -> float
: Unknown
;ObjectTemplate.timeToRemoveTK float -> float
: Unknown
;ObjectTemplate.toggleMouseLook bool -> bool
: Unknown
;ObjectTemplate.toggleWeapon bool -> bool
: Unknown
;ObjectTemplate.tolerance float -> float
: Unknown
;ObjectTemplate.torque float -> float
: Unknown
;ObjectTemplate.tracerConvergeDistance float -> float
	:Used in Projectiles (Weapons)
	:"At what distance the tracers (which start from the gunbarrel) and the projectile
	: which start from the camera
	: converges. Only relevant if FireInCameraDof is checked."
;ObjectTemplate.tracerInterval int -> int
	:Used in Projectiles (Weapons)
	:"Set one for tracer on every shot
	: 2 for every other and so on."
;ObjectTemplate.tracerScaler float -> float
	:Used in Projectiles (Weapons)
	:How long the tracer effect will be as default.
;ObjectTemplate.tracerSizeModifier float -> float
	:Used in Projectiles (Weapons)
	:How fat the tracer will be.
;ObjectTemplate.tracerTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.trackTurnAcceleration float -> float
: Unknown
;ObjectTemplate.trackTurnHighAmplitude float -> float
: Unknown
;ObjectTemplate.trackTurnHighOffset float -> float
: Unknown
;ObjectTemplate.trackTurnLowAmplitude float -> float
: Unknown
;ObjectTemplate.trackTurnLowOffset float -> float
: Unknown
;ObjectTemplate.trackTurnSpeed float -> float
: Unknown
;ObjectTemplate.trailEffectTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.Transparency RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.transparencyGraph Vec4 -> Vec4
: Unknown
;ObjectTemplate.treeCollisionDiameter float -> float
: Unknown
;ObjectTemplate.triggerForEachActivatingPlayer bool -> bool
: Unknown
;ObjectTemplate.triggerId int -> int
: Unknown
;ObjectTemplate.triggerRadius float -> float
: Unknown
;ObjectTemplate.turnVelocity float -> float
: Unknown
;ObjectTemplate.type world::IObjectTemplate_ptrproxy -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.type int -> int
: Unknown
;ObjectTemplate.uavVehicleFlightHeight float -> float
: Unknown
;ObjectTemplate.uavVehicleRadius float -> float
: Unknown
;ObjectTemplate.uavVehicleSampleResolution float -> float
: Unknown
;ObjectTemplate.uavVehicleSpeed float -> float
: Unknown
;ObjectTemplate.uavVehicleTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.unableToChangeTeam bool -> bool
: Unknown
;ObjectTemplate.unlockIndex int -> int
: Unknown
;ObjectTemplate.unlockLevel int -> int
: Unknown
;ObjectTemplate.update world::IObjectTemplate_ptrproxy -> void
: Unknown
;ObjectTemplate.updateAll -> void
: Unknown
;ObjectTemplate.upDropBoost float -> float
: Unknown
;ObjectTemplate.upThrowBoost float -> float
: Unknown
;ObjectTemplate.upThrowBoost2 float -> float
: Unknown
;ObjectTemplate.useAbsoluteDirection bool -> bool
: Unknown
;ObjectTemplate.useButtonRadius float -> float
: Unknown
;ObjectTemplate.useCameraOrientation bool -> bool
: Unknown
;ObjectTemplate.usedByAi bool -> bool
: Unknown
;ObjectTemplate.useDeAcceleration bool -> bool
: Unknown
;ObjectTemplate.usedOnTransparentMaterials bool -> bool
: Unknown
;ObjectTemplate.usedOnTransparentSurface bool -> bool
: Unknown
;ObjectTemplate.useGeomPart int -> int
: Unknown
;ObjectTemplate.useProjectileCamera bool -> bool
: Unknown
;ObjectTemplate.vehicleCameraShake CameraShakeTriggers -> CameraShakeTriggers
: Unknown
;ObjectTemplate.vehicleCategory dice::hfe::world::VehicleCategory -> dice::hfe::world::VehicleCategory
: Unknown
;ObjectTemplate.vehicleFov float -> float
: Unknown
;ObjectTemplate.vehicleHud.AbilityIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.addAbilityIcon <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.vehicleHud.addShowOnCamMode int -> void
: Unknown
;ObjectTemplate.vehicleHud.addVehicleIcon <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.vehicleHud.disableOnSprint bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.displaySelectionOnEnter bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.enablePostProcessingOnGuiIndex bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.getShowOnCamMode int -> bool
: Unknown
;ObjectTemplate.vehicleHud.guiIndex int -> int
	:Vehicles and Weapons .tweak
	:Defines the Vehicle General User Inferface Index to use like the Blackhawk green HUD. Gui Index is located in the .cons of menu\HUD\HudSetup\Vehicles
;ObjectTemplate.vehicleHud.hasTurretIcon bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.hudName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.injurySound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.isCoDriver bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.maxClimbSpeed int -> int
: Unknown
;ObjectTemplate.vehicleHud.miniMapIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.miniMapIconLeaderSize <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.miniMapIconSize int -> int
: Unknown
;ObjectTemplate.vehicleHud.pantingSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.showCrossHair bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.showInfo bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.showOnCamMode int -> int
: Unknown
;ObjectTemplate.vehicleHud.spottedIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.spottedIconSize int -> int
: Unknown
;ObjectTemplate.vehicleHud.standardHelpEnabled bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.typeIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.useChildHud bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.usePlayerIcon bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.useSelectionIcons bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.useVehicleCommRose bool -> bool
: Unknown
;ObjectTemplate.vehicleHud.vehicleIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.vehicleHud.vehicleIconPos Vec2 -> Vec2
: Unknown
;ObjectTemplate.vehicleHud.vehicleType int -> int
: Unknown
;ObjectTemplate.velocity float -> float
	:"Used in GenericFirearms (Weapons
	: Projectiles)"
	:"The speed of the projectile
	: measured in Rate of Fire (ROF). Lower ROF are affected by gravity/bullet drop while higher ones fire with lower bullet drop"
;ObjectTemplate.visibleOn3dMap bool -> bool
: Unknown
;ObjectTemplate.volume float -> float
	:
	:The loudness of the sound.
;ObjectTemplate.volumeEnvelope <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.volumeGroup int -> int
: Unknown
;ObjectTemplate.warningHud.firstWarningSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:Used in Vehicle .tweak
	:Defines the 1st warning sound when getting locked onto. Uses the file path pointing to a .wav or an .ogg file along with usual sound configuration code. 'Beep Beep Beep'
;ObjectTemplate.warningHud.secondWarningSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:Used in Vehicle .tweak
	:Defines the 2nd warning sound when getting locked onto. Uses the file path pointing to a .wav or an .ogg file along with usual sound configuration code. 'Beeeeeeeeeeep'
;ObjectTemplate.warningHud.warningIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:Used in Vehicle .tweak
	:Defines the location of the warning icon. Example: ObjectTemplate.WarningHud.warningIcon Ingame\GeneralIcons\Action_Icons\mylaserlockicon.tga
;ObjectTemplate.warningHud.warningType int -> int
: Unknown
;ObjectTemplate.waterHeight float -> float
: Unknown
;ObjectTemplate.waterSurfaceOffset float -> float
: Unknown
;ObjectTemplate.weaponHud.addShowOnCamMode int -> void
: Unknown
;ObjectTemplate.weaponHud.altCrosshairIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.altGuiIndex int -> int
: Unknown
;ObjectTemplate.weaponHud.altWeaponIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.ammoBarBackIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.ammoBarFrontIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.ammoIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.clipIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.crosshairIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.crosshairIconSize int -> int
: Unknown
;ObjectTemplate.weaponHud.deviationFactor int -> int
: Unknown
;ObjectTemplate.weaponHud.disableOnSprint bool -> bool
	:Used in Weapons/Vehicles .tweak
	:
;ObjectTemplate.weaponHud.displaySelectOnActivation bool -> bool
: Unknown
;ObjectTemplate.weaponHud.enableMouse bool -> bool
: Unknown
;ObjectTemplate.weaponHud.enablePostProcessingOnGuiIndex int -> int
	:Used in Weapons/Vehicles .tweak
	:Makes the GuiIndex have a black and white effect. Use with all objectTemplate.postProcess.tv code to adjust the TV effect
;ObjectTemplate.weaponHud.firstLockSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:
	:The first lock sound that plays when there is a lock in progress on the jet
;ObjectTemplate.weaponHud.getShowOnCamMode int -> bool
: Unknown
;ObjectTemplate.weaponHud.guiIndex int -> int
	:"Used in Weapons
	: Vehicle .tweak"
	:Defines the Weapon General User Inferface Index to use like the repair bar. Gui Index is located in the .cons of menu\HUD\HudSetup\Vehicles
;ObjectTemplate.weaponHud.hasFireRate bool -> bool
	:Used in Weapons .tweak
	:
;ObjectTemplate.weaponHud.hasMag bool -> bool
: Unknown
;ObjectTemplate.weaponHud.hasRangeFinder bool -> bool
: Unknown
;ObjectTemplate.weaponHud.hudName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.maxVisualDeviation int -> int
: Unknown
;ObjectTemplate.weaponHud.minVisualDeviation int -> int
: Unknown
;ObjectTemplate.weaponHud.overheatSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:"Used in Weapons
	: Vehicle .tweak"
	:"For the overheat sound. Adding it makes the engine reference the <nowiki>std::string</nowiki> defined with MenuSound.con. Usually it's S_Weapon_Handheld_Overheat
	: S_Vehicle_Handheld_Overheat but can be anything and custom ones can be used if needed"
;ObjectTemplate.weaponHud.secondLockSound <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:"Used in Weapons
	: Vehicle .tweak"
	:The second lock sound that plays when the lock has been set
;ObjectTemplate.weaponHud.selectIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.showAmmo bool -> bool
: Unknown
;ObjectTemplate.weaponHud.ShowClips bool -> bool
: Unknown
;ObjectTemplate.weaponHud.showInfo bool -> bool
: Unknown
;ObjectTemplate.weaponHud.showOnCamMode int -> int
: Unknown
;ObjectTemplate.weaponHud.specialAbilityIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponHud.switchGuiOnCamera bool -> bool
: Unknown
;ObjectTemplate.weaponHud.weaponIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.weaponType int -> int
: Unknown
;ObjectTemplate.widnBlowTime float -> float
: Unknown
;ObjectTemplate.windAffectionFactor float -> float
: Unknown
;ObjectTemplate.windAgingFactor float -> float
: Unknown
;ObjectTemplate.windBlowTime float -> float
: Unknown
;ObjectTemplate.windDirection Vec3 -> Vec3
: Unknown
;ObjectTemplate.windFalloff float -> float
: Unknown
;ObjectTemplate.windIsDynamic bool -> bool
: Unknown
;ObjectTemplate.windowSizeVector Vec3 -> Vec3
	:"Used in Projectiles
	: Vehicles
	: Effect"
	:
;ObjectTemplate.windRadialFalloff float -> float
: Unknown
;ObjectTemplate.windSpeed float -> float
: Unknown
;ObjectTemplate.windSpeedAgeDistance float -> float
: Unknown
;ObjectTemplate.windType <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ObjectTemplate.wingLift float -> float
	:"Planes
	: Helis"
	:How much speed will affect object lifting on control surface.
;ObjectTemplate.wingToRegulatorRatio float -> float
: Unknown
;ObjectTemplate.workOnSoldiers bool -> bool
	:Supply Objects
	:Allows the soldier to receive HP/Ammo depending on the type of supply set
;ObjectTemplate.workOnVehicles bool -> bool
	:Supply Objects
	:Allows the vehicle to receive HP/Ammo depending on the type of supply set
;ObjectTemplate.worldFOV float -> float
: Unknown
;ObjectTemplate.writeBinary <nowiki>std::string</nowiki> -> void
: Unknown
;ObjectTemplate.writeZ bool -> bool
: Unknown
;ObjectTemplate.yawSpeed float -> float
: Unknown
;ObjectTemplate.ziplineSoldierHeight float -> float
: Unknown
;ObjectTemplate.zoom.addZoomFactor float -> void
: Unknown
;ObjectTemplate.zoom.allowUntoggledFire bool -> bool
: Unknown
;ObjectTemplate.zoom.changeCameraId int -> int
: Unknown
;ObjectTemplate.zoom.changeCameraViewMode CameraViewMode -> CameraViewMode
: Unknown
;ObjectTemplate.zoom.changeFovDelay float -> float
: Unknown
;ObjectTemplate.zoom.disableMuzzleWhenZoomed bool -> bool
: Unknown
;ObjectTemplate.zoom.mouseSpeedMod float -> float
: Unknown
;ObjectTemplate.zoom.onlyZoomWhenProne bool -> bool
: Unknown
;ObjectTemplate.zoom.startCameraId int -> int
: Unknown
;ObjectTemplate.zoom.startCameraViewMode CameraViewMode -> CameraViewMode
: Unknown
;ObjectTemplate.zoom.useProjectileCamera bool -> bool
: Unknown
;ObjectTemplate.zoom.zoomDelay float -> float
: Unknown
;ObjectTemplate.zoom.zoomInput io::PlayerInputMap -> io::PlayerInputMap
: Unknown
;ObjectTemplate.zoom.zoomLod int -> int
: Unknown
;ObjectTemplate.zoom.zoomOutAfterFire bool -> bool
: Unknown
;ObjectTemplate.zRotation RandomDistribution -> RandomDistribution
: Unknown
;ObjectTemplate.zRotationSnap float -> float
: Unknown
;Object.togglePause -> void
: Unknown
== overgrowth ==
;Overgrowth.addMaterial <nowiki>std::string</nowiki> uint -> bool
: Unknown
;Overgrowth.addType <nowiki>std::string</nowiki> -> bool
: Unknown
;Overgrowth.closeDistFade float -> float
: Unknown
;Overgrowth.closeDistPercentage float -> float
: Unknown
;Overgrowth.editorEnable float -> float
: Unknown
;Overgrowth.exportToTerrainTexture -> void
: Unknown
;Overgrowth.generateAll -> void
: Unknown
;Overgrowth.generateAtlas -> void
: Unknown
;Overgrowth.getActiveMaterialName -> <nowiki>std::string</nowiki>
: Unknown
;Overgrowth.getGeometryList -> <nowiki>std::string</nowiki>
: Unknown
;Overgrowth.getLodDistance -> float
: Unknown
;Overgrowth.getMaterialList -> <nowiki>std::string</nowiki>
: Unknown
;Overgrowth.getTypeList -> <nowiki>std::string</nowiki>
: Unknown
;Overgrowth.lodTimer float -> float
: Unknown
;Overgrowth.paintMaterial float float float -> void
: Unknown
;Overgrowth.paintShadowmap float float float -> void
: Unknown
;Overgrowth.path <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Overgrowth.postLoad -> void
: Unknown
;Overgrowth.preLoad -> void
: Unknown
;Overgrowth.removeActiveMaterial -> bool
: Unknown
;Overgrowth.removeActiveType -> bool
: Unknown
;Overgrowth.save -> void
: Unknown
;Overgrowth.setActiveMaterial <nowiki>std::string</nowiki> -> void
: Unknown
;Overgrowth.setActiveType <nowiki>std::string</nowiki> -> void
: Unknown
;OvergrowthType.density float -> float
: Unknown
;OvergrowthType.geometry <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;OvergrowthType.minRadiusToOthers float -> float
: Unknown
;OvergrowthType.minRadiusToSame float -> float
: Unknown
;OvergrowthType.normalScale float -> float
: Unknown
;OvergrowthType.randomScale Vec2 -> Vec2
: Unknown
;OvergrowthType.rotationScale float -> float
: Unknown
;Overgrowth.viewDistance float -> float
: Unknown
;Overgrowth.viewDistanceScale float -> float
: Unknown
;Particles.enableOldParticles bool -> bool
: Unknown
;Particles.enableParticles bool -> bool
: Unknown
== particleSystemManager ==
;ParticleSystemManager.affectedByWind bool -> bool
: Unknown
;ParticleSystemManager.drawBoundingBoxEnable bool -> bool
: Unknown
;ParticleSystemManager.drawStats bool -> bool
: Unknown
;ParticleSystemManager.generateTexture -> bool
: Unknown
;ParticleSystemManager.overdrawScale float -> float
: Unknown
;ParticleSystemManager.particleSystemShaderQuality uint -> uint
: Unknown
;ParticleSystemManager.qualityLevel int -> int
: Unknown
;ParticleSystemManager.resetStats -> void
: Unknown
;ParticleSystemManager.startFadePercentageOfViewDistance float -> float
: Unknown
;ParticleSystemManager.startLodPercentageOfLodDistance float -> float
: Unknown
;ParticleSystemManager.viewDistance float -> float
: Unknown
;Physics.airDensityZeroAtHeight float -> float
: Unknown
;Physics.gravity float -> float
: Unknown
;Physics.listProperties -> <nowiki>std::string</nowiki>
: Unknown
;Physics.wind Vec3 -> Vec3
: Unknown
== Player ==
;Player.active IPlayer* -> IPlayer*
: Unknown
;Player.create <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> IPlayer*
: Unknown
;Player.isAi bool -> bool
: Unknown
;Player.isAlive bool -> bool
: Unknown
;Player.isNetwork bool -> bool
: Unknown
;Player.kit int -> int
: Unknown
;Player.list -> <nowiki>std::string</nowiki>
: Unknown
;Player.listPlayerClasses -> <nowiki>std::string</nowiki>
: Unknown
;Player.moveTo Vec3 -> <nowiki>std::string</nowiki>
: Unknown
;Player.name -> <nowiki>std::string</nowiki>
: Unknown
;Player.pickup <nowiki>std::string</nowiki> -> void
: Unknown
;Player.saveAll <nowiki>std::string</nowiki> -> bool
: Unknown
;Player.setFov float float -> void
: Unknown
;Player.setVehicleWithInputId IObject_ptrproxy int -> bool
: Unknown
;Player.spawnGroup int -> int
: Unknown
;Player.team int -> int
: Unknown
;Player.vehicle IObject_ptrproxy -> IObject_ptrproxy
: Unknown
;Portal.debugLevel int -> int
: Unknown
;Portal.showStats bool -> bool
: Unknown
== profile ==
;Profile.activateCharacterProfile <nowiki>std::string</nowiki> -> bool
: Unknown
;Profile.activatePlayerProfile <nowiki>std::string</nowiki> -> bool
: Unknown
;Profile.activeCharacterProfile <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Profile.activeMod <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Profile.activePlayerProfile <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Profile.addCharacterProfile <nowiki>std::string</nowiki> -> bool
: Unknown
;Profile.addModSetting <nowiki>std::string</nowiki> -> bool
: Unknown
;Profile.applySettings -> void
: Unknown
;Profile.createPlayerProfile <nowiki>std::string</nowiki> -> bool
: Unknown
;Profile.defaultKit int -> int
: Unknown
;Profile.getIndexForKit <nowiki>std::string</nowiki> int -> void
: Unknown
;Profile.playerName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Profile.rank int -> int
: Unknown
;Profile.setIndexForKit <nowiki>std::string</nowiki> int int -> void
: Unknown
;Profile.tagIcon <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Profile.tagText <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Profile.visualUnlockLevel int -> int
: Unknown
== pythonHost ==
;PythonHost.reinitialize -> bool
: Unknown
;PythonHost.sendCommand <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
== radio ==
;Radio.answer bool -> void
: Unknown
;Radio.callForAmmo -> void
: Unknown
;Radio.callForMedic -> void
: Unknown
;Radio.callForRepair -> void
: Unknown
;RadioInterface.selectOrder <nowiki>std::string</nowiki> -> bool
: Unknown
;RadioInterface.set<nowiki>std::string</nowiki>Map <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;Radio.sendKitMessage -> void
: Unknown
;Radio.sendSpottedMessage bool world::VehicleType -> void
: Unknown
;Radio.setSpottedMenuActive -> void
: Unknown
;RadioVehicleInterface.selectOrder <nowiki>std::string</nowiki> -> bool
: Unknown
;RadioVehicleInterface.set<nowiki>std::string</nowiki>Map <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;RagDoll.active bool -> void
: Unknown
;RagDoll.addAngularConstraint int int int -> void
: Unknown
;RagDoll.addBone int int -> void
: Unknown
;RagDoll.addCapsuleCollision int int -> void
: Unknown
;RagDoll.addConstraint int int -> void
: Unknown
;RagDoll.addDihedralAngleConstraint int int int -> void
: Unknown
;RagDoll.addDistanceLessThanConstraint int int float -> void
: Unknown
;RagDoll.addForce int Vec3 -> void
: Unknown
;RagDoll.addJointConstraint int int -> void
: Unknown
;RagDoll.addParticle int float -> void
: Unknown
;RagDoll.drawConstraints bool -> void
: Unknown
;RagDoll.gravity float -> void
: Unknown
;RagDoll.linkMode int int -> void
: Unknown
;RagDoll.lockBone int int -> void
: Unknown
;RagDoll.removeConstraint int int -> void
: Unknown
;RagDoll.reset -> void
: Unknown
;RagDoll.save -> void
: Unknown
;RagDoll.setParticleCollisionCriteria float float -> void
: Unknown
;RagDoll.skeleton <nowiki>std::string</nowiki> -> void
: Unknown
;RagDoll.toSkeleton int int int -> void
: Unknown
== renderer ==
;Renderer.allowA2M bool -> bool
: Unknown
;Renderer.allowOnDemandPostProcessing bool -> bool
: Unknown
;Renderer.ambientIlluminationRange Vec4 -> Vec4
: Unknown
;Renderer.ambientSun bool -> bool
: Unknown
;Renderer.clearColor BaseVector3<int> -> BaseVector3<int>
: Unknown
;Renderer.coronaFadeSpeed float -> float
: Unknown
;Renderer.disableFadeOnRoads bool -> bool
: Unknown
;Renderer.distanceCullConst float -> float
: Unknown
;Renderer.distanceCullConstPCO float -> float
: Unknown
;Renderer.divAccum float -> float
: Unknown
;Renderer.draw1pMeshes bool -> bool
: Unknown
;Renderer.draw1pZOnly bool -> bool
: Unknown
;Renderer.drawBundledMeshes bool -> bool
: Unknown
;Renderer.drawConsole bool -> bool
: Turns off access to the in-game console if set to 0
;Renderer.drawDeferred bool -> bool
: Unknown
;Renderer.drawFps int -> int
: Displays the current frames per seconds and the time in milliseconds between frames
;Renderer.drawGraphs bool -> bool
: Unknown
;Renderer.drawHud bool -> bool
: Turns the heads up display (HUD) on or off
;Renderer.drawNametags bool -> bool
: Unknown
;Renderer.drawObjects bool -> bool
: Unknown
;Renderer.drawOvergrowth bool -> bool
: Unknown
;Renderer.drawParticles bool -> bool
: Unknown
;Renderer.drawPostProduction bool -> bool
: Unknown
;Renderer.drawRoads bool -> bool
: Unknown
;Renderer.drawSkinnedMeshes bool -> bool
: Unknown
;Renderer.drawSkyDome bool -> bool
: Unknown
;Renderer.drawStaticMeshes bool -> bool
: Unknown
;Renderer.drawSunFlare bool -> bool
: Unknown
;Renderer.drawTerrain bool -> bool
: Unknown
;Renderer.drawTrees bool -> bool
: Unknown
;Renderer.drawUndergrowth bool -> bool
: Unknown
;Renderer.drawWatermark bool -> bool
: Unknown
;Renderer.dumpScreen <nowiki>std::string</nowiki> -> void
: Unknown
;Renderer.enableHWOcclusion bool -> bool
: Unknown
;Renderer.fakeHDRBlendingFactor float -> float
: Unknown
;Renderer.fakeHDRBlendingTimeDark double -> double
: Unknown
;Renderer.fakeHDRBlendingTimeLight double -> double
: Unknown
;Renderer.fakeHDREnabled bool -> bool
: Unknown
;Renderer.fakeHDRHorizWeights <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.fakeHDRPassGate float -> float
: Unknown
;Renderer.fakeHDRVertWeights <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.fakeHDRWeights <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.fieldOfView1p float -> float
: Unknown
;Renderer.fogColor Vec3 -> Vec3
: Unknown
;Renderer.fogStartEndAndBase Vec4 -> Vec4
: Unknown
;Renderer.forceBundledMeshLod int -> int
: Unknown
;Renderer.forceSkinnedMeshLod int -> int
: Unknown
;Renderer.forceStaticMeshMaxPolyPercentage int -> int
: Unknown
;Renderer.forceStaticMeshSkipLod int -> int
: Unknown
;Renderer.getQualityLodDistanceBM int -> float
: Unknown
;Renderer.getQualityLodDistanceSKM int -> float
: Unknown
;Renderer.getQualityLodDistanceSTM int -> float
: Unknown
;Renderer.globalBundleMeshLodDistanceScale float -> float
: Unknown
;Renderer.globalSkinnedMeshLodDistanceScale float -> float
: Unknown
;Renderer.globalStaticMeshLodDistanceScale float -> float
: Unknown
;Renderer.glowEnabled bool -> bool
: Unknown
;Renderer.glowStrength float -> float
: Unknown
;Renderer.isNightMap bool -> bool
: Unknown
;Renderer.lightBlurStrength float -> float
: Unknown
;Renderer.listScreenModes -> void
: Unknown
;Renderer.makeTopWorldScreen U32 <nowiki>std::string</nowiki> Vec3 -> void
: Unknown
;Renderer.minCullDistance float -> float
: Unknown
;Renderer.nightMode uint -> uint
: Unknown
;Renderer.nightVisionEnabled bool -> bool
: Unknown
;Renderer.nightVisionGradient <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.nightVisionMaxPower float -> float
: Unknown
;Renderer.nightVisionRegenRPS float -> float
: Unknown
;Renderer.occlusionObjectsMaxFrames int -> int
: Unknown
;Renderer.occlusionTerrainMaxFrames int -> int
: Unknown
;Renderer.presentAsync bool -> bool
: Unknown
;Renderer.presentSpinIfBusy bool -> bool
: Unknown
;Renderer.qualityLodEnabled bool -> bool
: Unknown
;Renderer.renderAheadLimit uint -> uint
: Unknown
;Renderer.roadDepthBias float -> float
: Unknown
;Renderer.roadLodDistMod float -> float
: Unknown
;Renderer.roadSlopeScaleDepthBias float -> float
: Unknown
;Renderer.screenDumpPath <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.screenMode int -> int
: Unknown
;Renderer.setQualityLodDistanceALL int float -> void
: Unknown
;Renderer.setQualityLodDistanceBM int float -> void
: Unknown
;Renderer.setQualityLodDistanceSKM int float -> void
: Unknown
;Renderer.setQualityLodDistanceSTM int float -> void
: Unknown
;Renderer.soldier.debugCharacterMode int -> int
: Unknown
;Renderer.soldier.debugDrawCollision bool -> bool
: Unknown
;Renderer.soldier.debugDrawSkeletons bool -> bool
: Unknown
;Renderer.stopRenderMovie -> void
: Unknown
;Renderer.tearGasStrength float -> float
: Unknown
;Renderer.tvAmbient float -> float
: Unknown
;Renderer.tvColor Vec3 -> Vec3
: Unknown
;Renderer.tvEnabled bool -> bool
: Unknown
;Renderer.tvGranularity float -> float
: Unknown
;Renderer.tvInterference float -> float
: Unknown
;Renderer.tweakFarPlane1p float -> float
: Unknown
;Renderer.tweakNearPlane float -> float
: Unknown
;Renderer.tweakNearPlane1p float -> float
: Unknown
;Renderer.vsync bool -> bool
: Unknown
;Renderer.waterAnimSpeed float -> float
	:
	:Sets the water speed.
;Renderer.waterColor Vec3 -> Vec3
: Unknown
;Renderer.waterFogColor Vec3 -> Vec3
: Unknown
;Renderer.waterFogStartEndAndBase Vec4 -> Vec4
: Unknown
;Renderer.watermarkFilename <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.watermarkPos Vec2 -> Vec2
: Unknown
;Renderer.watermarkScale float -> float
: Unknown
;Renderer.waterNormalMap <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Renderer.waterScroll Vec2 -> Vec2
: Unknown
;Renderer.waterSpecularColor Vec4 -> Vec4
: Unknown
;Renderer.waterSpecularPower float -> float
: Unknown
;Renderer.xpPerfFlags int -> int
: Unknown
;Renderer.xpPerfFlags2 int -> int
: Unknown
;ReservedSlots.addNick <nowiki>std::string</nowiki> -> void
: Unknown
;ReservedSlots.clear -> void
: Unknown
;ReservedSlots.configFile <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;ReservedSlots.list -> <nowiki>std::string</nowiki>
: Unknown
;ReservedSlots.load -> bool
: Unknown
;ReservedSlots.removeNick <nowiki>std::string</nowiki> -> void
: Unknown
;ReservedSlots.save -> bool
: Unknown
== scoreboard==
;Scoreboard.setToggleShow int -> void
: Unknown
;Scoreboard.singleClick int -> void
: Unknown
== scoreManager ==
;ScoreManager.ammo int -> int
: Unknown
;ScoreManager.ammoScoreLimit float -> float
: Unknown
;ScoreManager.assistKill int -> int
: Unknown
;ScoreManager.controlPointCapture int -> int
: Unknown
;ScoreManager.death int -> int
: Unknown
;ScoreManager.driverPassenger int -> int
: Unknown
;ScoreManager.flagCapture int -> int
: Unknown
;ScoreManager.flagReturn int -> int
: Unknown
;ScoreManager.heal int -> int
: Unknown
;ScoreManager.healScoreLimit float -> float
: Unknown
;ScoreManager.inDirectKill int -> int
: Unknown
;ScoreManager.kill int -> int
: Unknown
;ScoreManager.objective int -> int
: Unknown
;ScoreManager.repair int -> int
: Unknown
;ScoreManager.repairScoreLimit float -> float
: Unknown
;ScoreManager.soldierRevive int -> int
: Unknown
;ScoreManager.teamDamage int -> int
: Unknown
;ScoreManager.teamDamageLimit float -> float
: Unknown
;ScoreManager.teamVehicleDamage int -> int
: Unknown
;ScoreManager.teamVehicleDamageLimit float -> float
: Unknown
;ScoreManager.TK int -> int
: Unknown
;ScoreManager.vehicleRevive int -> int
: Unknown
;SettingsManager.boolGet <nowiki>std::string</nowiki> -> bool
: Unknown
;SettingsManager.boolSet <nowiki>std::string</nowiki> bool -> bool
: Unknown
;SettingsManager.floatGet <nowiki>std::string</nowiki> -> float
: Unknown
;SettingsManager.floatSet <nowiki>std::string</nowiki> float -> bool
: Unknown
;SettingsManager.intGet <nowiki>std::string</nowiki> -> int
: Unknown
;SettingsManager.intSet <nowiki>std::string</nowiki> int -> bool
: Unknown
;SettingsManager.<nowiki>std::string</nowiki>Get <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SettingsManager.<nowiki>std::string</nowiki>Set <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;SettingsManager.U32Get <nowiki>std::string</nowiki> -> U32
: Unknown
;SettingsManager.U32Set <nowiki>std::string</nowiki> U32 -> bool
: Unknown
== shadermanager ==
;Shadermanager.byPassDiceStates bool -> bool
: Unknown
;Shadermanager.compileDebugTerrain bool -> bool
: Unknown
;Shadermanager.compilePartialPrecisionTypes bool -> bool
: Unknown
;Shadermanager.compileSkipOptimizations bool -> bool
: Unknown
;Shadermanager.compileUsePartialPrecision bool -> bool
: Unknown
;Shadermanager.compileUsePreShaders bool -> bool
: Unknown
;Shadermanager.compileUsePS2A bool -> bool
: Unknown
;Shadermanager.compileWithDebug bool -> bool
: Unknown
;Shadermanager.listEffects -> void
: Unknown
;Shadermanager.reloadAllEffects -> void
: Unknown
;Shadermanager.reloadEffect <nowiki>std::string</nowiki> -> void
: Unknown
;ShadowManager.allowAlphaShadows bool -> bool
: Unknown
;ShadowManager.alphaShadowThreshold float -> float
: Unknown
;ShadowManager.dropShadowClipHeightOffset float -> float
: Unknown
;ShadowManager.dynamic1pShadowsEnabled bool -> bool
: Unknown
;ShadowManager.dynamicShadowsEnabled bool -> bool
: Unknown
;ShadowManager.dynamicStaticMeshShadowsEnabled bool -> bool
: Unknown
;ShadowManager.lightmapIntensityBias float -> float
: Unknown
;ShadowManager.occludedSkyNightIntensity float -> float
: Unknown
;ShadowManager.shadow80Line float -> float
: Unknown
;ShadowManager.shadowFromBundledMeshLod int -> int
: Unknown
;ShadowManager.shadowFromSkinnedMeshLod int -> int
: Unknown
;ShadowManager.shadowFromStaticMeshLod int -> int
: Unknown
;ShadowManager.shadowFromTerrainLod int -> int
: Unknown
;ShadowManager.shadowIntensityBias float -> float
: Unknown
;ShadowManager.shadowMapBitDepth int -> int
: Unknown
;ShadowManager.shadowMapDepthBias float -> float
: Unknown
;ShadowManager.shadowMapDepthDistance float -> float
: Unknown
;ShadowManager.shadowMapIncludeStaticMeshes bool -> bool
: Unknown
;ShadowManager.shadowMapObjectSize int -> int
: Unknown
;ShadowManager.shadowMapSize int -> int
: Unknown
;ShadowManager.shadowMapSlopeBias float -> float
: Unknown
;ShadowManager.shadowMergeDynamicShadowFrustums bool -> bool
: Unknown
;ShadowManager.shadowOccluderOversizeFactor float -> float
: Unknown
;ShadowManager.shadowOverrideQuality int -> int
: Unknown
;ShadowManager.shadowPSMFovY float -> float
: Unknown
;ShadowManager.shadowPSMUseSlideback bool -> bool
: Unknown
;ShadowManager.shadowPSMUseUnitCubeClipping bool -> bool
: Unknown
;ShadowManager.shadowPSMZFarOffset float -> float
: Unknown
;ShadowManager.shadowPSMZMinInfinityZ float -> float
: Unknown
;ShadowManager.shadowPSMZNearOffset float -> float
: Unknown
;ShadowManager.shadowShowFrustums bool -> bool
: Unknown
;ShadowManager.shadowSunExtrusionLength float -> float
: Unknown
;ShadowManager.shadowSunHeightOverFade Vec2 -> Vec2
: Unknown
;ShadowManager.shadowSunScalePower float -> float
: Unknown
;ShadowManager.shadowTestBelowRayLenght float -> float
: Unknown
;ShadowManager.shadowTSMFocus float -> float
: Unknown
;ShadowManager.shadowUpdateFactor float -> float
: Unknown
;ShadowManager.shadowUpdatesEnabled bool -> bool
: Unknown
;ShadowManager.shadowUseSweepTest bool -> bool
: Unknown
;ShadowManager.useLSSMOptimizations bool -> bool
: Unknown
;ShadowManager.usePSMOptimizations bool -> bool
: Unknown
;SkinnedMeshRenderer.shaderQuality ShaderQuality -> ShaderQuality
: Unknown
;SkyDome.cloudLerpFactors Vec2 -> Vec2
: Unknown
;SkyDome.cloudTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SkyDome.cloudTexture <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SkyDome.cloudTexture2 <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SkyDome.domePosition Vec3 -> Vec3
: Unknown
;SkyDome.domeRotation float -> float
: Unknown
;SkyDome.domeSize float -> float
: Unknown
;SkyDome.fadeCloudsDistances Vec2 -> Vec2
: Unknown
;SkyDome.flareDirection Vec3 -> Vec3
: Unknown
;SkyDome.flareFadeAdd float -> float
: Unknown
;SkyDome.flareFadeMul float -> float
: Unknown
;SkyDome.flareTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SkyDome.flareTexture <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
	:Map: Sky.con
	:"The texture of the sunflare/actual sunflare. When switching to a map with no sunflare
	: it will still use the previous maps one. So for maps like Fallujah West/Saaremaa
	: an invisible texture needs to be defined instead to prevent the sunflare bug. Usage: Skydome.flareTexture common\textures\sunflare\Sunglow_no"
;SkyDome.hasCloudLayer bool -> bool
: Unknown
;SkyDome.hasCloudLayer2 bool -> bool
: Unknown
;SkyDome.lightingBlend float -> float
: Unknown
;SkyDome.lightingColor Vec3 -> Vec3
: Unknown
;SkyDome.scrollDirection Vec2 -> Vec2
: Unknown
;SkyDome.scrollDirection2 Vec2 -> Vec2
: Unknown
;SkyDome.skyTemplate <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SkyDome.skyTexture <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sound.addMenuSound <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> float -> void
: Unknown
;Sound.addSound <nowiki>std::string</nowiki> -> void
: Unknown
;Sound.addTrigger <nowiki>std::string</nowiki> -> void
: Unknown
;Sound.dopplerEffect float -> float
: Unknown
;Sound.getAllSoundTemplates -> <nowiki>std::string</nowiki>
: Unknown
;Sound.getProperty <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sound.getVolumeForGroup int -> float
: Unknown
;Sound.initialize int <nowiki>std::string</nowiki> int -> SoundInitResult
: Unknown
;Sound.interactiveMode bool -> bool
: Unknown
;Sound.listenerReverb float -> float
: Unknown
;Sound.loadMusic <nowiki>std::string</nowiki> -> bool
: Unknown
;Sound.masterVolume float -> float
: Unknown
;Sound.playMusic -> bool
: Unknown
;Sound.playSound <nowiki>std::string</nowiki> -> void
: Unknown
;Sound.removeAllTriggers -> void
: Unknown
;Sound.setProperty <nowiki>std::string</nowiki> float -> void
: Unknown
;Sound.setReverb <nowiki>std::string</nowiki> -> void
: Unknown
;Sound.setVolumeForGroup int float -> void
: Unknown
;Sound.showSoundSources bool -> bool
: Unknown
;Sound.showStats bool -> bool
: Unknown
;Sound.startEngines bool -> bool
: Unknown
;Sound.stopMusic float -> bool
: Unknown
;Sound.stopSound <nowiki>std::string</nowiki> -> void
: Unknown
;Sound.tinnitusSetup <nowiki>std::string</nowiki> float float -> void
: Unknown
;Sound.tweakTemplate <nowiki>std::string</nowiki> float float -> void
: Unknown
;Sound.windSetup <nowiki>std::string</nowiki> float -> void
: Unknown
;SpawnManager.commitSuicide -> void
: Unknown
;SpawnManager.listSpawnGroups -> void
: Unknown
;SpawnManager.selectNextUnlock int -> void
: Unknown
;SpawnManager.setPlayerKit int -> void
: Unknown
;SpawnManager.setPlayerTeam int -> void
: Unknown
;SpawnManager.toggleMembers bool -> void
: Unknown
;SquadInterface.selectOrder <nowiki>std::string</nowiki> -> bool
: Unknown
;SquadInterface.set<nowiki>std::string</nowiki>Map <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;SquadLeaderInterface.selectOrder <nowiki>std::string</nowiki> -> bool
: Unknown
;SquadLeaderInterface.set<nowiki>std::string</nowiki>Map <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;SquadLeader.sendOrder int bool -> void
: Unknown
;SquadLeader.sendRequest int bool -> void
: Unknown
;SquadLeader.sendRequestForOrder -> void
: Unknown
;Squad.leaveSquad -> void
: Unknown
;SquadManager.changeSquadName <nowiki>std::string</nowiki> bool -> void
: Unknown
;SquadManager.joinSquad int -> void
: Unknown
;SquadManager.leaveSquad int -> void
: Unknown
;SquadManager.listSquadMembers int int -> <nowiki>std::string</nowiki>
: Unknown
;SquadManager.listSquads int -> <nowiki>std::string</nowiki>
: Unknown
;SquadManager.makeMeCommander -> void
: Unknown
;SquadManager.popNextCommanderApplicant int -> void
: Unknown
;SquadMenu.applyInviteList -> void
: Unknown
;SquadMenu.createSquad -> void
: Unknown
;SquadMenu.doubleClickInvite -> void
: Unknown
;SquadMenu.doubleClickNew -> void
: Unknown
;SquadMenu.setShowInviteList bool -> void
: Unknown
;SquadMenu.setSquadCreateSelect bool -> void
: Unknown
;SquadMenu.setSquadNameSelect -> void
: Unknown
;SquadMenu.singleClickInvite -> void
: Unknown
;SquadMenu.singleClickNew -> void
: Unknown
;SquadMenu.squadCreateLockToggle -> void
: Unknown
;StaticMeshRenderer.allowAnisoFiltering bool -> bool
: Unknown
;StaticMeshRenderer.convertLightmapName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;StaticMeshRenderer.enableLightIndexes bool -> bool
: Unknown
;StaticMeshRenderer.enableLightMapAtlas bool -> bool
: Unknown
;StaticMeshRenderer.enableNewLightmapNames bool -> bool
: Unknown
;StaticMeshRenderer.enableRendering bool -> bool
: Unknown
;StaticMeshRenderer.enableUnifiedIndexlist bool -> bool
: Unknown
;StaticMeshRenderer.loadAllLightMapFiles <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;StaticMeshRenderer.loadAllLightMapFilesDLL <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> bool
: Unknown
;StaticMeshRenderer.materialCullingEnabled bool -> bool
: Unknown
;StaticMeshRenderer.maxLightMappedLod int -> int
: Unknown
;StaticMeshRenderer.noLods bool -> bool
: Unknown
== sv ==
;Sv.adminScript <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.allowExternalViews bool -> bool
: Unknown
;Sv.allowFreeCam bool -> bool
: Unknown
;Sv.allowNATNegotiation bool -> bool
: Unknown
;Sv.allowNoseCam bool -> bool
: Unknown
;Sv.autoBalanceTeam bool -> bool
: Unknown
;Sv.autoDemoHook <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.autoRecord bool -> bool
: Unknown
;Sv.communityLogoURL <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.configFile <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.coopBotCount int -> int
: Unknown
;Sv.coopBotDifficulty float -> float
: Unknown
;Sv.coopBotRatio float -> float
: Unknown
;Sv.demoDownloadURL <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.demoIndexURL <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.demoQuality int -> int
: Unknown
;Sv.endDelay int -> int
: Unknown
;Sv.endOfRoundDelay int -> int
: Unknown
;Sv.friendlyFireWithMines bool -> bool
: Unknown
;Sv.gameSpyPort int -> int
: Unknown
;Sv.hitIndicator bool -> bool
: Unknown
;Sv.interfaceIP <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.internet bool -> <nowiki>std::string</nowiki>
	:
	:1 = Adds the server to the server list. Tested this with the PRBF2_repo_w32ded.exe shortcut tool
;Sv.load -> bool
: Unknown
;Sv.manDownTime float -> float
: Unknown
;Sv.maxConnectionType ConnectionType -> ConnectionType
: Unknown
;Sv.maxPlayers int -> <nowiki>std::string</nowiki>
	:
	:Increases the player number count in the W32 Dedicated to the number specified. Effect Unknown. Maximum allowed is 100 though not sure if it's a BF2 thing or not
;Sv.minPlayersForVoting int -> int
: Unknown
;Sv.notEnoughPlayersRestartDelay float -> float
: Unknown
;Sv.noVehicles float -> float
: Unknown
;Sv.numPlayersNeededToStart int -> int
: Unknown
;Sv.numReservedSlots int -> <nowiki>std::string</nowiki>
: Unknown
;Sv.password <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.punkBuster bool -> bool
: Unknown
;Sv.radioBlockedDurationTime int -> int
: Unknown
;Sv.radioMaxSpamFlagCount int -> int
: Unknown
;
: Unknown
;Sv.ranked bool -> bool
: Unknown
;Sv.roundsPerMap int -> int
: Unknown
;Sv.save -> bool
: Unknown
;Sv.scoreLimit int -> int
: Unknown
;Sv.serverIP <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.serverName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.serverPort int -> <nowiki>std::string</nowiki>
: Unknown
;Sv.soldierFriendlyFire int -> int
: Unknown
;Sv.soldierSplashFriendlyFire int -> int
: Unknown
;Sv.spawnTime float -> float
: Unknown
;Sv.sponsorLogoURL <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.sponsorText <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.startDelay int -> int
: Unknown
;Sv.teamRatioPercent float -> float
: Unknown
;Sv.teamVoteOnly bool -> bool
: Unknown
;Sv.ticketRatio int -> int
: Unknown
;Sv.timeBeforeRestartMap float -> float
: Unknown
;Sv.timeLimit int -> int
: Unknown
;Sv.tkNumPunishToKick int -> int
: Unknown
;Sv.tkPunishByDefault bool -> bool
: Unknown
;Sv.tkPunishEnabled bool -> bool
: Unknown
;Sv.useGlobalRank bool -> bool
: Unknown
;Sv.useGlobalUnlocks bool -> bool
: Unknown
;Sv.vehicleFriendlyFire int -> int
: Unknown
;Sv.vehicleSplashFriendlyFire int -> int
: Unknown
;Sv.voipBFClientPort int -> int
: Unknown
;Sv.voipBFServerPort int -> int
: Unknown
;Sv.voipEnabled bool -> bool
: Unknown
;Sv.voipQuality int -> int
: Unknown
;Sv.voipServerPort int -> int
: Unknown
;Sv.voipServerRemote bool -> bool
: Unknown
;Sv.voipServerRemoteIP <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.voipSharedPassword <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Sv.voteTime int -> int
: Unknown
;Sv.votingEnabled bool -> bool
: Unknown
;Sv.welcomeMessage <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;SwiffHost.addAward int int int -> void
: Unknown
;SwiffHost.addCredit <nowiki>std::string</nowiki> int -> void
: Unknown
;SwiffHost.addGameMode <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;SwiffHost.addRank int int int -> void
: Unknown
;SwiffHost.enableScroller bool -> void
: Unknown
;SwiffHost.loadImage <nowiki>std::string</nowiki> -> bool
: Unknown
;SwiffHost.serverBrowserFrameSkips int -> int
: Unknown
;SwiffHost.setScrollerRect int int int -> void
: Unknown
;SwiffHost.setScrollFadeSpeed int -> void
: Unknown
;SwiffHost.setScrollSpeed float -> void
: Unknown
;Terrain.ambientColor Vec3 -> Vec3
: Unknown
;Terrain.create <nowiki>std::string</nowiki> -> void
: Unknown
;TerrainCuller.baseCellSize int -> int
: Unknown
;TerrainCuller.checkInside bool -> bool
: Unknown
;TerrainCuller.cullerType int -> int
: Unknown
;TerrainCuller.detailCullMaxLevel int -> int
: Unknown
;TerrainCuller.lod0SwitchStart float -> float
: Unknown
;TerrainCuller.lod0SwitchStop float -> float
: Unknown
;TerrainCuller.lod1SwitchStart float -> float
: Unknown
;TerrainCuller.lod1SwitchStop float -> float
: Unknown
;TerrainCuller.lod2Start float -> float
: Unknown
;TerrainCuller.lodSwitchDistance int -> int
: Unknown
;TerrainCuller.updateLodLevel bool -> bool
: Unknown
;TerrainCuller.useStitchedLods bool -> bool
: Unknown
;Terrain.forceRenderStyle int -> int
: Unknown
;Terrain.GIColor Vec3 -> Vec3
: Unknown
;Terrain.GIColorHigh Vec3 -> Vec3
: Unknown
;Terrain.GIColorLow Vec3 -> Vec3
: Unknown
;Terrain.init -> void
: Unknown
;Terrain.load <nowiki>std::string</nowiki> -> void
: Unknown
;Terrain.refreshTerrainSampling -> void
: Unknown
;Terrain.sunColor Vec3 -> Vec3
: Unknown
;Terrain.terrainWaterColor Vec3 -> Vec3
: Unknown
;Terrain.waterAlphaAdd float -> float
: Unknown
;Terrain.waterAlphaHeightMul float -> float
: Unknown
;Terrain.waterAnimSpeed float -> float
: Unknown
;Terrain.waterColor Vec3 -> Vec3
: Unknown
;Terrain.waterNormalMap <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Terrain.waterQuality int -> int
: Unknown
;Terrain.waterReflectivity float -> float
: Unknown
;Terrain.waterScroll Vec2 -> Vec2
: Unknown
;Terrain.waterSpecularColor Vec4 -> Vec4
: Unknown
;Terrain.waterSpecularPower float -> float
: Unknown
;Terrain.waterSunIntensity float -> float
: Unknown
;Terrain.waterTransparency float -> float
: Unknown
;Texturemanager.customTextureSuffix <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;Undergrowth.dynamicShadowsEnable bool -> bool
: Unknown
;Undergrowth.enabled bool -> bool
: Unknown
;Undergrowth.load <nowiki>std::string</nowiki> -> void
: Unknown
;Undergrowth.reload -> void
: Unknown
;Undergrowth.simpleShaderEnable bool -> bool
: Unknown
;Undergrowth.test uint -> uint
: Unknown
;Undergrowth.test2 float -> float
: Unknown
;Undergrowth.viewDistanceFade float -> float
: Unknown
;Undergrowth.viewDistanceScale float -> float
: Unknown
;Undergrowth.zPassPatchCount uint -> uint
: Unknown
;Vars.set <nowiki>std::string</nowiki> <nowiki>std::string</nowiki> -> void
: Unknown
;VideoSettings.setAntialiasing <nowiki>std::string</nowiki> -> void
: Unknown
;VideoSettings.setDynamicLightingQuality int -> void
: Unknown
;VideoSettings.setDynamicShadowsQuality int -> void
: Unknown
;VideoSettings.setEffectsQuality int -> void
: Unknown
;VideoSettings.setGeometryQuality int -> void
: Unknown
;VideoSettings.setLightingQuality int -> void
: Unknown
;VideoSettings.setResolution <nowiki>std::string</nowiki> -> void
: Unknown
;VideoSettings.setTerrainQuality int -> void
: Unknown
;VideoSettings.setTextureFilteringQuality int -> void
: Unknown
;VideoSettings.setTextureQuality int -> void
: Unknown
;VideoSettings.setVideoOptionScheme int -> void
: Unknown
;VideoSettings.setViewDistanceScale float -> void
: Unknown
;weatherManager.doubleStrikeMaxDelay float -> float
: Unknown
;weatherManager.doubleStrikeMinDelay float -> float
: Unknown
;weatherManager.doubleStrikeProbability float -> float
: Unknown
;weatherManager.inFadeSegments float -> float
: Unknown
;weatherManager.lightningBlendOutTime float -> float
: Unknown
;weatherManager.lightningColor Vec4 -> Vec4
: Unknown
;weatherManager.lightningDuration float -> float
: Unknown
;weatherManager.lightningGroundPenetration float -> float
: Unknown
;weatherManager.lightningMaxInterval float -> float
: Unknown
;weatherManager.lightningMaxPos Vec3 -> Vec3
: Unknown
;weatherManager.lightningMinInterval float -> float
: Unknown
;weatherManager.lightningMinPos Vec3 -> Vec3
: Unknown
;weatherManager.lightningPertubation float -> float
: Unknown
;weatherManager.lightningScale Vec2 -> Vec2
: Unknown
;weatherManager.lightningSegments int -> int
: Unknown
;weatherManager.lightningSFXDelay float -> float
: Unknown
;weatherManager.lightningSFXName <nowiki>std::string</nowiki> -> <nowiki>std::string</nowiki>
: Unknown
;weatherManager.outFadeSegments float -> float
: Unknown
;weatherManager.skyBlendOutTime float -> float
: Unknown
;weatherManager.stormEnabled bool -> bool
: Unknown
;windManager.globalWindDirection Vec3 -> Vec3
: Unknown
;windManager.globalWindSpeed float -> float
: Unknown
;
: Unknown
;All Vars.Set Codes
	:Usage
	:Description
;EngineRunningTimer 5.000000
: Unknown
;Anim-soldier-1p-speed-crouch 1.700000
: Unknown
;Anim-soldier-1p-speed-prone 3.000000
: Unknown
;Anim-soldier-spring-clamp 0.001000
: Unknown
;Anim-soldier-spring-zoom-factor 6.000000
: Unknown
;Anim_offsetBackwardTime 0.500000
: Unknown
;Anim_playCameraAnimations 1
: Unknown
;Anim_playSoldierAnimations 1
: Unknown
;Anim_playSoldierPostAnimations 1
: Unknown
;Anim_playVehicleAnimations 1
: Unknown
;Anim_playWeaponAnimations 1
: Unknown
;Anim_skipSync 0
: Unknown
;Anim_smoothSet 10.000000
: Unknown
;Anim_startJumpAtSpeed 2.500000
: Unknown
;Anim_startLandAtHeight 1.000000
: Unknown
;Anim_startLandAtSpeed -0.500000
: Unknown
;Anim_startLeftOffset 0.200000
: Unknown
;Anim_startRightOffset 0.700000
: Unknown
;Anim_test 0.250000
: Unknown
;Armor-invunerable-time 1.000000
: Unknown
;Armor-invunerable-time-afterwreck 1.000000
: Unknown
;Armor-max-soldier-wrecktime 60.000000
: Unknown
;Armor-water-safetycheck-time 2.500000
: Unknown
;CFric 1.000000
: Unknown
;CRest 1.000000
: Unknown
;Cam-dist 2.000000
: Unknown
;Cam-fast 10.000000
: Unknown
;Cam-interpolate-attachobject 1.200000
: Unknown
;Cam-normal 1.000000
: Unknown
;Cam-slow 0.100000
: Unknown
;Cam-stiffness 1.500000
: Unknown
;Cam_use_acc 0.000000
: Unknown
;Camera-check-closevehicle-freq 1.000000
: Unknown
;Camera-expshake-amp 5.000000
: Unknown
;Camera-expshake-freq 10.000000
: Unknown
;Camera-expshake-insidevehicle-mod 5.000000
: Unknown
;Camera-expshake-time 0.400000
: Unknown
;Camera-movement-speed-on-crouch 0.150000
: Unknown
;Camera-movement-speed-on-prone 0.100000
: Unknown
;Camera-movement-speed-on-stand 0.100000
: Unknown
;Camera-recoil-amplitude 0.600000
: Unknown
;Camera-recoil-speedmod 1.000000
: Unknown
;Camera-recoil-type 0
: Unknown
;Camera-shake-amp 2.0
: Unknown
;Camera-shake-amplitude 0.200000
: Unknown
;Camera-shake-distance 7.000000
: Unknown
;Camera-shake-freq 10.0
: Unknown
;Camera-shake-frequency 10.000000
: Unknown
;Camera-shake-time 0.2
: Unknown
;Camera-surface-snap-offset 0.090000
: Unknown
;Coll-cull-sphere-obb 1
: Unknown
;Coll-depth 3.000000
: Unknown
;Coll-draw-cyl 0
: Unknown
;Coll-draw-int 0
: Unknown
;Coll-draw-line-width 0.010000
: Unknown
;Coll-draw-lines 0
: Unknown
;Coll-draw-point-physics-radius 0.000000
: Unknown
;Coll-draw-soldier 0
: Unknown
;Coll-draw-tested_faces 0
: Unknown
;Coll-dump-all-tests 0
: Unknown
;Coll-edge 1
: Unknown
;Coll-edge-limit 0.866000
: Unknown
;Coll-forceOff-debugmeshes 0
: Unknown
;Coll-load-debugmeshes 0
: Unknown
;Coll-normal-limit 0.100000
: Unknown
;Coll-obb-cull-mode 1
: Unknown
;Coll-obb-cull-radius 0.577350
: Unknown
;Coll-obb-cull-vertex-limit 10
: Unknown
;Coll-soldier-collision-adjust-mod 2.000000
: Unknown
;Coll-soldier-collision-test-count 8
: Unknown
;Coll-soldier-collision-test-count-start-backAt 3
: Unknown
;Coll-soldier-collision-test-radius-mod 0.999000
: Unknown
;Coll-soldier-crouch-height 1.400000
: Unknown
;Coll-soldier-crush-depth 0.050000
: Unknown
;Coll-soldier-debug-proj-hit 0
: Unknown
;Coll-soldier-extend-ray 0.900000
: Unknown
;Coll-soldier-overrun-impact-mod 2.500000
: Unknown
;Coll-soldier-pivot-height 1.000000
: Unknown
;Coll-soldier-prone-height 0.800000
: Unknown
;Coll-soldier-radius 0.250000
: Unknown
;Coll-soldier-stand-height 1.700000
: Unknown
;Coll-static-vertex-limit 20
: Unknown
;Coll-use-cyl 1
: Unknown
;Coll-use-cyl-normal 1
: Unknown
;Coll-use-face 1
: Unknown
;Coll-use-fast-sphere-at-length 0.010000
: Unknown
;Coll-vel-dot-norm 0
: Unknown
;Collision-debug-default-terrain 0
: Unknown
;Collision-impact-speed-limit 4.000000
: Unknown
;Collision-skip-multcolls 1
: Unknown
;Collision-skip-multcolls-debug 0
: Unknown
;Collision-skip-multcolls-th 0.010000
: Unknown
;Collision-test-lod-distance-factor 0.060000
: Unknown
;Collision-test-lod-min-distance 25.000000
: Unknown
;Collision-test-projectile-lod-distance-factor 3.000000
: Unknown
;Collision-use-cubic-speedmod 0
: Unknown
;Collision-use-mod-on-soldier 1
: Unknown
;Conn-packetsize-override 0
: Unknown
;Damage-angle-mod-choke 0.000000
: Unknown
;Deathcam-terrainoffset 0.800000
: Unknown
;Debug-draw-test-ray 0
: Unknown
;Debug-engine 0 bool -> bool
	:Activate in Console in Debugger
	:"Shows the RPM
	: Speed
	: Acceleration in a 3d text. May need !restart to work and is somewhat buggy"
;Debug-outputNewObject 0
: Unknown
;Debug-spring 0 bool -> bool
	:Activate in Console in Debugger and normal
	:"Shows lines when approaching a vehicle. You can see what direction the vehicle will go when turning
	: and has a bunch of other information regarding wheels"
;Demo-cam-360-capture 0
: Unknown
;Demo-cam-360-capture-move 0.000000
: Unknown
;Demo-cam-mouse-wheel-scale 0.850000
: Unknown
;Demo-cam-offset 1
: Unknown
;Demo-cam-offset-min 0.200000
: Unknown
;Demo-cam-offset-slow 0.800000
: Unknown
;Demo-cam-offset-speed 1.000000
: Unknown
;Demo-fspeed 100.000000
: Unknown
;Demo-slomo-cam 0.000000
: Unknown
;Detonation-collface-offset 0.070000
: Unknown
;Detonation-collface-offset-speedmod 0.050000
: Unknown
;Detonation-collface-offset-speedmod-max 500.000000
: Unknown
;Engine-audio-material-tweak 10.000000
: Unknown
;Engine-audio-sway-amplitude-first 0.050000
: Unknown
;Engine-audio-sway-amplitude-last 0.010000
: Unknown
;Engine-audio-sway-frequency-first 80.000000
: Unknown
;Engine-audio-sway-frequency-last 35.000000
: Unknown
;Engine-audio-sway-time-first 0.700000
: Unknown
;Engine-audio-sway-time-last 0.700000
: Unknown
;Engine-inertia 0.050000
: Unknown
;Engine-inertia2 0.990000
: Unknown
;Engine-inertia3 0.960000
: Unknown
;Engine-slope-no-gear-up-limit 0.174000
: Unknown
;Engine-slope-torque-mod-1st-gear 0.000000
: Unknown
;Engine-sound-smooth-time 0.100000
: Unknown
;Event-delay 0
: Unknown
;Event-delay-ticks 32
: Unknown
;Explosion-camshake-insidevehicle-mod 0.200000
: Unknown
;Explosion-camshake-maxdamage 150.000000
: Unknown
;Explosion-camshake-maxforce 20.000000
: Unknown
;Explosion-camshake-mod 4.000000
: Unknown
;Explosion-camshake-ownvehicle-mod 0.100000
: Unknown
;Explosion-hotspot 0.200000
: Unknown
;Explosion-hotspot-ray 0.020000
: Unknown
;Explosion-hotspot-ray-max 0.500000
: Unknown
;Explosion-latencyComp 1
: Unknown
;Explosion-soldier-expforce-ymod 5.000000
: Unknown
;Fb-mod 1.000000
: Unknown
;Feedback-mod 1.000000
: Unknown
;Fire-delay-after-jump 1.100000
: Unknown
;Fire-delay-from-prone 0.600000
: Unknown
;Flying_height 110.000000
: Unknown
;Follow-component-prediction-factor 0.100000
: Unknown
;Force-reg-limit 20.000000
: Unknown
;Hack-ignore-asserts 1
: Unknown
;Hc_dump 0
: Unknown
;Hc_freeze 0
: Unknown
;Hc_normals 0
: Unknown
;Hc_water 0
: Unknown
;IgnoreFriendlyTimer 1.000000
: Unknown
;Jump-delay-after-prone 1.200000
	:Vars.set
	:Delay in seconds after prone to block the jump input. Setting it to 0 allows jumping when pressing space while moving from prone to standing
;Ladder-bottom-marginal 0.050000
: Unknown
;Ladder-climb-speed-mod 0.045000
: Unknown
;Ladder-down-angle-limit 35.000000
: Unknown
;Ladder-down-ray-mag 0.200000
: Unknown
;Ladder-down-ray-mag-skid 0.300000
: Unknown
;Ladder-end-camera-offset 0.400000
: Unknown
;Ladder-exit-offset 0.750000
: Unknown
;Ladder-getoff-ray-min 0.300000
: Unknown
;Ladder-getoff-speed-mod 1.150000
: Unknown
;Ladder-offset-top 0.360000
: Unknown
;Ladder-ray-debug 0
: Unknown
;Ladder-ray-debug2 0
: Unknown
;Ladder-skid-speed-mod 4.000000
: Unknown
;Ladder-soldier-dist 0.600000
: Unknown
;Ladder-soldier-start-getoff 1.800000
: Unknown
;Ladder-step-size 0.300000
: Unknown
;Ladder-top-exit-offset 0.750000
: Unknown
;Ladder-up-ray-mag-skid 1.700000
: Unknown
;Ladder-water-limit 1.200000
: Unknown
;Local-prediction 0
: Unknown
;Local-prediction-confirmtime 30
: Unknown
;Local-prediction-lerpTime 1.000000
: Unknown
;Local-prediction-minDelay 0.150000
: Unknown
;MaxDistKillMissile 15.000000
: Unknown
;Network-engine-fullPrecision 0
: Unknown
;Network-spring-fullPrecision 0
: Unknown
;ObjectManager-cullHandleUpdateOnClientFactor 0.500000
: Unknown
;Objectspawner-draw-lines 0
: Unknown
;Objectspawner-inner-circle 0.300000
: Unknown
;Objectspawner-num-tries 7
: Unknown
;Old-turn-limit 1.000000
: Unknown
;Old-turn-mod 1.500000
: Unknown
;Opt-late-loading 0
: Unknown
;Opt-nosound 1
: Unknown
;OverheadCamera-acceleration 250.000000
: Unknown
;OverheadCamera-maxPositionDelta 7.000000
: Unknown
;P-pos-damp 0.990000
: Unknown
;P-pos-damp-water 0.900000
: Unknown
;P-rot-damp 0.990000
: Unknown
;P-rot-damp-water 0.900000
: Unknown
;Parachute-collapse-angle 0.300000
: Unknown
;Parachute-collapse-time 0.050000
: Unknown
;Parachute-collapse-time-water 0.050000
: Unknown
;Parachute-debug 0
: Unknown
;Parachute-spawn-debug 0
: Unknown
;Parachute-start-landing-height 8.000000
: Unknown
;Pco-exitpos-testlod 2
: Unknown
;Pco-min-playing-ticks 20
: Unknown
;Pco-show-gcs-stats 0
: Unknown
;Pco-unmanned-max-minor-axis 0.400000
: Unknown
;Pco-unmanned-min-major-axis 0.600000
: Unknown
;Phy-ang-vel 0.500000
: Unknown
;Phy-break-mod 0.950000
: Unknown
;Phy-bsp-stats 0
: Unknown
;Phy-contact-adjust-gravity-count 2
: Unknown
;Phy-convert-collision-meshes 0
: Unknown
;Phy-damage-frame-count 3
: Unknown
;Phy-damage-scale 100.000000
: Unknown
;Phy-damage-scale-limit 0.500000
: Unknown
;Phy-draw-soldier-bullet-collision 0
: Unknown
;Phy-engine-inertia 0.050000
: Unknown
;Phy-engine-slope 1.000000
: Unknown
;Phy-force-awake 0
: Unknown
;Phy-force-sleeping 0
: Unknown
;Phy-fri-dyn 0.800000
: Unknown
;Phy-fri-exp 3
: Unknown
;Phy-fri-lat 5.000000
: Unknown
;Phy-fri-mod 1.000000
: Unknown
;Phy-fri-mul 1.000000
: Unknown
;Phy-fri-stat 1.200000
: Unknown
;Phy-fri-wheel 0.990000
: Unknown
;Phy-fri-wheel2 1.000000
: Unknown
;Phy-gas 1.000000
: Unknown
;Phy-gravity-compensation-size 0.500000
: Unknown
;Phy-gravity-contact-mod 0.100000
: Unknown
;Phy-hand-break-adjust 0.050000
: Unknown
;Phy-hand-break-release 10
: Unknown
;Phy-hand-break-rpm 0.100000
: Unknown
;Phy-i-mod 1.500000
: Unknown
;Phy-imp-mod 1.000000
: Unknown
;Phy-imp-wakeup 1.000000
: Unknown
;Phy-impulse-limit 0.050000
: Unknown
;Phy-latencyComp-debug -1.000000
: Unknown
;Phy-latencyComp-default 0.050000
: Unknown
;Phy-latencyComp-max 0.300000
: Unknown
;Phy-latencyComp-maxRenderAheadTime 0.033333
: Unknown
;Phy-latencyComp-pingFactor 0.500000
: Unknown
;Phy-latencyComp-useClientWindow 1
: Unknown
;Phy-latencyComp-useInput 1
: Unknown
;Phy-latencyComp-useRenderAhead 0
: Unknown
;Phy-lin-acc 1.600000
: Unknown
;Phy-lin-mod 0.500000
: Unknown
;Phy-lin-vel 0.500000
: Unknown
;Phy-list-physics-nodes 0
: Unknown
;Phy-list-response-physics 0
: Unknown
;Phy-max-imp 1000.000000
: Unknown
;Phy-max-speed 1500.000000
: Unknown
;Phy-new-collision-meshes 0
: Unknown
;Phy-print -1
: Unknown
;Phy-proj-collision-count 3
: Unknown
;Phy-proj-collision-depth 0.050000
: Unknown
;Phy-proj-precision 0.001000
: Unknown
;Phy-proj-spring-on-up-axis 1
: Unknown
;Phy-sep-fifty-fifty 10.000000
: Unknown
;Phy-soldier-acceleration 0.120000
: Unknown
;Phy-soldier-air-movement-factor 0
: Unknown
;Phy-soldier-crawl-speed 0.800000
: Unknown
;Phy-soldier-crouch-speed 2.000000
: Unknown
;Phy-soldier-crush-minposspeedsqr 12.000000
: Unknown
;Phy-soldier-crush-minrotspeedsqr 0.010000
: Unknown
;Phy-soldier-crush-minvehicleposspeedsqr 2.000000
: Unknown
;Phy-soldier-deceleration 0.350000
: Unknown
;Phy-soldier-elasticity 0.000000
: Unknown
;Phy-soldier-feet-contact-normal 0.500000
: Unknown
;Phy-soldier-feet-level -0.040000
: Unknown
;Phy-soldier-friction 1.000000
: Unknown
;Phy-soldier-imp-feet 1.000000
: Unknown
;Phy-soldier-inair-speed 2.000000
: Unknown
;Phy-soldier-jump-factor 0.800000
: Unknown
;Phy-soldier-jump-length-factor 0.980000
: Unknown
;Phy-soldier-look-factor-x 5.000000
: Unknown
;Phy-soldier-look-factor-y 5.000000
: Unknown
;Phy-soldier-resistance 0.020000
: Unknown
;Phy-soldier-run-speed 3.900000
: Unknown
;Phy-soldier-skydive-speed 15.000000
: Unknown
;Phy-soldier-skydiveat-speed -10.000000
: Unknown
;Phy-soldier-speed-factor 0.850000
: Unknown
;Phy-soldier-sprint-dissipation-time 10.000000
: Unknown
;Phy-soldier-sprint-limit 0.500000
: Unknown
;Phy-soldier-sprint-recover-time 120.000000
: Unknown
;Phy-soldier-sprint-speed 7.000000
: Unknown
;Phy-soldier-start-float 0.990000
: Unknown
;Phy-soldier-stop-float 0.900000
: Unknown
;Phy-soldier-swim-speed 2.100000
: Unknown
;Phy-soldier-swimcrawl-speed 3.645000
: Unknown
;Phy-soldier-take-fall-damage 1
: Unknown
;Phy-soldier-walk-speed 1.500000
: Unknown
;Phy-spring-client-debug 0
: Unknown
;Phy-spring-server-debug 1
: Unknown
;Phy-tank-engine-inertia 0.070000
: Unknown
;Phy-turn 0.100000
: Unknown
;Phy-wing-water-mod 10.000000
: Unknown
;Phy-wreck 1
: Unknown
;Pose-crawl-crouch 0.500000
: Unknown
;Pose-crawl-run 0.500000
: Unknown
;Pose-crawl-sprint 0.500000
: Unknown
;Pose-crawl-swim 0.500000
: Unknown
;Pose-crawl-swimCrawl 0.500000
: Unknown
;Pose-crawl-walk 0.500000
: Unknown
;Pose-crouch-crawl 0.500000
: Unknown
;Pose-crouch-run 0.250000
: Unknown
;Pose-crouch-sprint 0.250000
: Unknown
;Pose-crouch-swim 0.500000
: Unknown
;Pose-crouch-swimCrawl 0.500000
: Unknown
;Pose-crouch-walk 0.250000
: Unknown
;Pose-run-crawl 0.500000
: Unknown
;Pose-run-crouch 0.250000
: Unknown
;Pose-run-sprint 0.250000
: Unknown
;Pose-run-swim 0.500000
: Unknown
;Pose-run-swimCrawl 0.500000
: Unknown
;Pose-run-walk 0.250000
: Unknown
;Pose-sprint-crawl 0.500000
: Unknown
;Pose-sprint-crouch 0.250000
: Unknown
;Pose-sprint-run 0.250000
: Unknown
;Pose-sprint-swim 0.500000
: Unknown
;Pose-sprint-swimCrawl 0.500000
: Unknown
;Pose-sprint-walk 0.250000
: Unknown
;Pose-walk-crawl 0.500000
: Unknown
;Pose-walk-crouch 0.250000
: Unknown
;Pose-walk-run 0.250000
: Unknown
;Pose-walk-sprint 0.250000
: Unknown
;Pose-walk-swim 0.500000
: Unknown
;Pose-walk-swimCrawl 0.500000
: Unknown
;Prone-delay-after-jump 1.200000
: Unknown
;Prone-delay-from-stand 1.200000
: Unknown
;Ragdoll-max-inherit-speed 5.000000
: Unknown
;Ragdoll_bodyBoneSize 0.120000
: Unknown
;Ragdoll_boneSize 0.100000
: Unknown
;Ragdoll_clientMaxUpdateTime 0.002000
: Unknown
;Ragdoll_collMid 0.999900
: Unknown
;Ragdoll_completeCollRadius 1.500000
: Unknown
;Ragdoll_dT 0.011111
: Unknown
;Ragdoll_enableForce 0
: Unknown
;Ragdoll_expRotateForce 13.000000
: Unknown
;Ragdoll_gravityOverTime 0.500000
: Unknown
;Ragdoll_iterations 2
: Unknown
;Ragdoll_kneeBoneSize 0.050000
: Unknown
;Ragdoll_legBackAngle -0.100000
: Unknown
;Ragdoll_legForwardAngle 10.000000
: Unknown
;Ragdoll_legForwardFactor 0.000000
: Unknown
;Ragdoll_legPointForwardAngle 0.500000
: Unknown
;Ragdoll_legPointForwardFactor 0.010000
: Unknown
;Ragdoll_net_boneEnable 15
: Unknown
;Ragdoll_net_debug 0
: Unknown
;Ragdoll_net_interpolate 0.100000
: Unknown
;Ragdoll_sleep 5.000000
: Unknown
;Ragdoll_sleepDelta 0.020000
: Unknown
;Ragdoll_slowMotion 1.000000
: Unknown
;Ragdoll_useAngularConstraints 1
: Unknown
;Ragdoll_useCapsuleCollision 1
: Unknown
;Ragdoll_useConstraints 1
: Unknown
;Ragdoll_useLandCollision 1
: Unknown
;Ragdoll_useObjectCollision 1
: Unknown
;Rd_dieForce 0.0
: Unknown
;Rd_dieInVehicleForce 100.000000
: Unknown
;Rd_expForceMod 1.000000
: Unknown
;Rd_hitForce 0.000000
: Unknown
;Rd_hitUp 0.000000
: Unknown
;Replenish-checkaim-freq 1.000000
: Unknown
;Replenish-checkaim-maint-freq 0.500000
: Unknown
;Replenish-ignoreteam 0
: Unknown
;Rot-use-old 1
: Unknown
;Rotationalbundle-max-speed-mod 30.000000
: Unknown
;Rotationalbundle-sound-smooth-time 0.150000
: Unknown
;Rpm-k 10.000000
: Unknown
;Rpm-wheel 0.060000
	:No effect
	:
;Server-sleep-overhead-time 0.005000
: Unknown
;Shoot-mag 10.000000
	:No effect
	:
;Show-damage-ndicator-for-all 1
: Unknown
;Show-engine 0
	:No effect
	:
;Soldier-drop-max 1.500000
: Unknown
;Soldier-drop-min 0.500000
: Unknown
;Soldier-drown-damage 8.000000
: Unknown
;Soldier-footstep-effect-cull-distance 20.000000
: Unknown
;Soldier-footstep-offset-dof-prone 0.000000
: Unknown
;Soldier-footstep-offset-dof-stand 0.130000
: Unknown
;Soldier-footstep-offset-y -0.990000
: Unknown
;Soldier-fov1p 0.820000
	:No effect
	:
;Soldier-impact-speed-limit 10.000000
: Unknown
;Soldier-impact-speed-limit-2 3.000000
: Unknown
;Soldier-lookDown 70.000000
	:No effect
	:
;Soldier-lookMaxAngle 40.000000/85.000000/0.000000
: Unknown
;Soldier-lookSideRestore 4.000000
: Unknown
;Soldier-lookUp -70.000000
: Unknown
;Soldier-mandown-rotspeed 0.100000
: Unknown
;Soldier-mandown-speed 5.000000
: Unknown
;Soldier-prone-inwater-limit 1.100000
	:Vars.Set
	:"The number referenced is the angle. Setting it to 0 allows you to prone into water. Can shoot walls when it's in water
	: but not walls from the surface. Setting it to 2 prevents you from proning near water in which you automatically go to the standing position"
;Soldier-proneLookDown 5.000000
: Unknown
;Soldier-proneLookUp -30.000000
: Unknown
;Soldier-revive-disableinputtime 2.100000
: Unknown
;Soldier-terrain-speed-limit 9.100000
: Unknown
;Soldier-timeToEnableWeapon 1.250000
: Unknown
;Soldier_lookIdleAngle 15.000000
: Unknown
;Soldier_lookIdleTime 2.500000
: Unknown
;Soldier_lookSmooth 10.000000
: Unknown
;Soldier_throwGun 0.025000
: Unknown
;Soldier_throwGunForward 1.000000
: Unknown
;Soldier_throwHelmet 0.025000
: Unknown
;Soldier_throwKitPartsDelay 0.300000
: Unknown
;Sound-listener-radius 0.200000
: Unknown
;Sound-obstruction-disable 0
: Unknown
;Sound-obstruction-max 0.800000
: Unknown
;Sound-obstruction-max-reuse-frames 15
: Unknown
;Sound-obstruction-opt0 1
: Unknown
;Sound-obstruction-opt1 1
: Unknown
;Sound-obstruction-radius 2.000000
: Unknown
;Sound-obstruction-reuse-frames 0
: Unknown
;Sound-tinnitus-range 0.600000
: Unknown
;Spawnpoint-scatter-maxdist 9.000000
: Unknown
;Spawnpoint-scatter-mindist 3.000000
: Unknown
;Spawnpoint-scatter-testlod 2
: Unknown
;Spawnpoint-terrain-offset 1.010000
: Unknown
;Sprint-recharge-delay-after-jump 2.000000
: Unknown
;Stand-delay-from-prone 1.500000
: Unknown
;Stick-default-distance 0.050000
: Unknown
;Tank-square 1
: Unknown
;TargetYOffset 0.000000
: Unknown
;Use-loading-profiler 0
: Unknown
;weapon-detonationDebug 0
: Unknown
;weapon-detonationTriggerFreq 0.250000
: Unknown
;wh-torque-mult 0.500000
: Unknown
;wh-torque-offs 1.000000
: Unknown
;wh-use-slip-ratio 0
: Unknown
;wheel-inertia 0.100000
: Unknown
;wheel-mod 1.000000
: Unknown
;wp-delay-pingfactor 2
: Unknown
;wp-delay-reloadfactor 1
: Unknown
;wp-delay-ticks 15
: Unknown
;Zipline-soldier-height 1.490000
: Unknown
